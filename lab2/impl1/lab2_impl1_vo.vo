
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.10.0.111.2

// ldbanno -n Verilog -o lab2_impl1_vo.vo -w -neg -gui -msgset C:/Users/70735/Desktop/lab2/promote.xml lab2_impl1.ncd 
// Netlist created on Wed Dec 09 21:41:15 2020
// Netlist written on Wed Dec 09 21:43:07 2020
// Design is for device LCMXO2-4000HC
// Design is for package CSBGA132
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module Lab2 ( clk, clrin, speed_up_in, speed_down_in, brightness_in, LED_SIG );
  input  clk, clrin, speed_up_in, speed_down_in, brightness_in;
  output LED_SIG;
  wire   Cycle_period_16, Cycle_period_15, n3990, n3991, Cycle_period_14, 
         Cycle_period_13, n3989, n298, n299, n293_N_253_12, n293_N_253_11, 
         speed_down_in_c, clk_c, n3878, n3879, n300, n301, n293_N_253_10, 
         n293_N_253_9, n3877, n302, n303, n293_N_253_8, n293_N_253_7, n3876, 
         Cycle_period_12, Cycle_period_11, n4033, n4034, n304, n305, 
         n293_N_253_6, n293_N_253_5, n3875, n306, n307, n293_N_253_4, 
         n293_N_253_3, n3874, cur2_7, cur1_7, cur1_6, cur2_6, n3907, n3908, 
         n104, n3632, n4053, n87_N_179_0, n3855, cur2_5, cur1_5, cur1_4, 
         cur2_4, n3906, cur1_3, cur2_3, cur1_31, n938, n1844, n3905, cur1_30, 
         cur1_29, n939, n940, n3904, Cycle_period_10, Cycle_period_9, n4032, 
         cur1_28, cur1_27, n941, n942, n3903, cur1_26, cur1_25, n943, n944, 
         n3902, cur1_24, cur1_23, n945, n946, n3901, n1048, n1049, n3922, 
         n3923, Cycle_period_8, Cycle_period_7, n4031, n1050, n1051, n3921, 
         Cycle_period_6, cur2_31, n2550, n134_adj_2, cnt_31__N_437, n4030, 
         cur2_30, cur2_29, n135_adj_3, n136_adj_4, n4029, n1052, n3920, n2585, 
         n1032, cur1_22, n1033, n3930, n3931, n1034, cur1_21, cur1_20, n1035, 
         n3929, n1024, n1025, n3934, n3935, n3988, cur2_28, cur2_27, 
         n137_adj_5, n138_adj_6, n4028, n308, n309, n293_N_253_2, n293_N_253_1, 
         n3873, Cycle_period_18, Cycle_period_17, n3992, n3987, cur2_26, 
         cur2_25, n139_adj_7, n140_adj_8, n4027, n3986, n3160, LIGHT_CTL_7, 
         n3985, LIGHT_CTL_2, n3984, n3155, n3154, n3983, n3157, n3156, n310, 
         n3672, n4046, n293_N_253_0, n190, n190_N_216_17, speed_up_in_c, n3872, 
         n191, n192, n190_N_216_16, n190_N_216_15, n3871, n193, n194, 
         n190_N_216_14, n190_N_216_13, n3870, n195, n196, n190_N_216_12, 
         n190_N_216_11, n3869, n197, n198, n190_N_216_10, n190_N_216_9, n3868, 
         n199, n200, n190_N_216_8, n190_N_216_7, n3867, n947, n948, n3900, 
         cur1_19, n949, n950, n3899, cur1_18, cur1_17, n951, n952, n3898, 
         n3231, cur1_16, n3221, cur1_15, n953, n954, n3897, cur1_14, n3222, 
         cur1_13, n3223, n955, n956, n3896, n3224, cur1_12, cur1_11, n3225, 
         n957, n958, n3895, n3226, cur1_10, cur1_9, n3227, n959, n960, n3894, 
         cur1_8, n3228, n3229, n961, n962, n3893, n3919, n3918, n3917, cur2_24, 
         n3916, n1036, n1037, n3928, n1038, n1039, n3927, n1026, n1027, n3933, 
         LIGHT_CTL_0, n3158, n3981, n3980, n3979, n3978, n3977, n201, n202, 
         n190_N_216_6, n190_N_216_5, n3866, n203, n204, n190_N_216_4, 
         n190_N_216_3, n3865, n205, n206, n190_N_216_2, n190_N_216_1, n3864, 
         n207, n3666, n4045, n190_N_216_0, n87, n87_N_179_17, n3863, n88, n89, 
         n87_N_179_16, n87_N_179_15, n3862, n90, n91, n87_N_179_14, 
         n87_N_179_13, n3861, n3230, n963, n964, n3892, n965, cur2_23, 
         n141_adj_9, n142_adj_10, n4026, COUNT1_17, COUNT1_17_N_290_17, 
         brightness_in_c, n3890, COUNT1_16, COUNT1_15, COUNT1_17_N_290_16, 
         COUNT1_17_N_290_15, n3889, COUNT1_14, COUNT1_13, COUNT1_17_N_290_14, 
         COUNT1_17_N_290_13, n3888, COUNT1_12, COUNT1_11, COUNT1_17_N_290_12, 
         COUNT1_17_N_290_11, n3887, COUNT1_10, COUNT1_9, COUNT1_17_N_290_10, 
         COUNT1_17_N_290_9, n3886, cur2_22, cur2_21, n143_adj_11, n144_adj_12, 
         n4025, cur2_20, cur2_19, n145_adj_13, n146_adj_14, n4024, cur2_18, 
         cur2_17, n147_adj_15, n148_adj_16, n4023, cur2_16, cur2_15, 
         n149_adj_17, n150_adj_18, n4022, cur2_14, cur2_13, n151_adj_19, 
         n152_adj_20, n4021, n3915, cur2_12, cur2_11, n153_adj_21, n154_adj_22, 
         n4020, n3914, cur2_10, cur2_9, n155_adj_23, n156_adj_24, n4019, n3913, 
         n3912, n1040, n1041, n3926, cur2_8, n157_adj_25, n158_adj_26, n4018, 
         n1042, n1043, n3925, n159_adj_27, n160_adj_28, n4017, n161_adj_29, 
         n162_adj_30, n4016, cur2_2, cur2_1, n163_adj_31, n164_adj_32, n4015, 
         cur2_0, n165_adj_33, cnt_31, n134, n4014, cnt_28, cnt_27, n137, n138, 
         n4012, n4013, cnt_26, cnt_25, n139, n140, n4011, n1028, n1029, n3932, 
         n3159, Cycle_period_31, n3975, Cycle_period_30, cnt_30, 
         Cycle_period_29, cnt_29, n3974, Cycle_period_28, Cycle_period_27, 
         n3973, Cycle_period_26, Cycle_period_25, n3972, cnt_24, 
         Cycle_period_24, Cycle_period_23, cnt_23, n3971, n141, n142, n4010, 
         n92, n93, n87_N_179_12, n87_N_179_11, n3860, n94, n95, n87_N_179_10, 
         n87_N_179_9, n3859, n135, n136, cnt_22, cnt_21, n143, n144, n4009, 
         cnt_20, cnt_19, n145, n146, n4008, cnt_18, cnt_17, n147, n148, n4007, 
         cnt_16, cnt_15, n149, n150, n4006, cnt_14, cnt_13, n151, n152, n4005, 
         cnt_12, cnt_11, n153, n154, n4004, n96, n97, n87_N_179_8, n87_N_179_7, 
         n3858, n98, n99, n87_N_179_6, n87_N_179_5, n3857, n100, n101, 
         n87_N_179_4, n87_N_179_3, n3856, n102, n103, n87_N_179_2, n87_N_179_1, 
         COUNT1_8, COUNT1_7, COUNT1_17_N_290_8, COUNT1_17_N_290_7, n3885, 
         COUNT1_6, COUNT1_5, COUNT1_17_N_290_6, COUNT1_17_N_290_5, n3884, 
         COUNT1_4, COUNT1_3, COUNT1_17_N_290_4, COUNT1_17_N_290_3, n3883, 
         COUNT1_2, COUNT1_1, COUNT1_17_N_290_2, COUNT1_17_N_290_1, n3882, 
         COUNT1_0, n3676, n4047, COUNT1_17_N_290_0, n293, n293_N_253_17, n3881, 
         n294, n295, n293_N_253_16, n293_N_253_15, n3880, n296, n297, 
         n293_N_253_14, n293_N_253_13, n3911, n3910, n3909, n1044, n1045, 
         n3924, n1046, n1047, n1030, n1031, Cycle_period_22, Cycle_period_21, 
         n3970, Cycle_period_20, Cycle_period_19, n3969, n3968, n3967, n3966, 
         n3965, cnt_10, cnt_9, n155, n156, n4003, cnt_8, cnt_7, n157, n158, 
         n4002, n3964, cnt_6, cnt_5, n159, n160, n4001, cnt_4, cnt_3, n161, 
         n162, n4000, cnt_2, cnt_1, n163, n164, n3999, cnt_0, n165, n3998, 
         n2445, n3963, speed_up, n2135, clk_c_enable_33, n3326, n3962, n2136, 
         n2137, n3961, n2138, n2139, n3960, n2140, n3959, n2141, n3958, n2143, 
         n2142, mult_31s_19s_0_cin_lr_2, mult_31s_19s_0_cin_lr_4, 
         mult_31s_19s_0_cin_lr_6, mult_31s_19s_0_cin_lr_8, 
         mult_31s_19s_0_cin_lr_10, mult_31s_19s_0_cin_lr_12, 
         mult_31s_19s_0_cin_lr_14, mult_31s_19s_0_cin_lr_16, 
         mult_31s_19s_0_pp_0_2, co_mult_31s_19s_0_0_1, mult_31s_19s_0_pp_1_4, 
         mult_31s_19s_0_pp_0_4, mult_31s_19s_0_pp_0_3, mult_31s_19s_0_pp_1_3, 
         s_mult_31s_19s_0_0_4, co_mult_31s_19s_0_0_2, mult_31s_19s_0_pp_1_6, 
         mult_31s_19s_0_pp_0_6, mult_31s_19s_0_pp_0_5, mult_31s_19s_0_pp_1_5, 
         s_mult_31s_19s_0_0_5, s_mult_31s_19s_0_0_6, co_mult_31s_19s_0_0_3, 
         mult_31s_19s_0_pp_0_8, mult_31s_19s_0_pp_1_8, mult_31s_19s_0_pp_1_7, 
         mult_31s_19s_0_pp_0_7, s_mult_31s_19s_0_0_7, s_mult_31s_19s_0_0_8, 
         co_mult_31s_19s_0_0_4, mult_31s_19s_0_pp_0_10, mult_31s_19s_0_pp_1_10, 
         mult_31s_19s_0_pp_0_9, mult_31s_19s_0_pp_1_9, s_mult_31s_19s_0_0_9, 
         s_mult_31s_19s_0_0_10, co_mult_31s_19s_0_0_5, mult_31s_19s_0_pp_0_12, 
         mult_31s_19s_0_pp_1_12, mult_31s_19s_0_pp_1_11, 
         mult_31s_19s_0_pp_0_11, s_mult_31s_19s_0_0_11, s_mult_31s_19s_0_0_12, 
         co_mult_31s_19s_0_0_6, mult_31s_19s_0_pp_0_14, mult_31s_19s_0_pp_1_14, 
         mult_31s_19s_0_pp_0_13, mult_31s_19s_0_pp_1_13, s_mult_31s_19s_0_0_13, 
         s_mult_31s_19s_0_0_14, co_mult_31s_19s_0_0_7, mult_31s_19s_0_pp_1_16, 
         mult_31s_19s_0_pp_0_16, mult_31s_19s_0_pp_0_15, 
         mult_31s_19s_0_pp_1_15, s_mult_31s_19s_0_0_15, s_mult_31s_19s_0_0_16, 
         co_mult_31s_19s_0_0_8, mult_31s_19s_0_pp_0_18, mult_31s_19s_0_pp_1_18, 
         mult_31s_19s_0_pp_0_17, mult_31s_19s_0_pp_1_17, s_mult_31s_19s_0_0_17, 
         s_mult_31s_19s_0_0_18, co_mult_31s_19s_0_0_9, mult_31s_19s_0_pp_0_20, 
         mult_31s_19s_0_pp_1_20, mult_31s_19s_0_pp_1_19, 
         mult_31s_19s_0_pp_0_19, s_mult_31s_19s_0_0_19, s_mult_31s_19s_0_0_20, 
         co_mult_31s_19s_0_0_10, mult_31s_19s_0_pp_1_22, 
         mult_31s_19s_0_pp_0_22, mult_31s_19s_0_pp_0_21, 
         mult_31s_19s_0_pp_1_21, s_mult_31s_19s_0_0_21, s_mult_31s_19s_0_0_22, 
         co_mult_31s_19s_0_0_11, mult_31s_19s_0_pp_0_24, 
         mult_31s_19s_0_pp_1_24, mult_31s_19s_0_pp_1_23, 
         mult_31s_19s_0_pp_0_23, s_mult_31s_19s_0_0_23, s_mult_31s_19s_0_0_24, 
         co_mult_31s_19s_0_0_12, mult_31s_19s_0_pp_1_26, 
         mult_31s_19s_0_pp_0_26, mult_31s_19s_0_pp_0_25, 
         mult_31s_19s_0_pp_1_25, s_mult_31s_19s_0_0_25, s_mult_31s_19s_0_0_26, 
         co_mult_31s_19s_0_0_13, mult_31s_19s_0_pp_1_28, 
         mult_31s_19s_0_pp_0_28, mult_31s_19s_0_pp_1_27, 
         mult_31s_19s_0_pp_0_27, s_mult_31s_19s_0_0_27, s_mult_31s_19s_0_0_28, 
         co_mult_31s_19s_0_0_14, mult_31s_19s_0_pp_1_30, 
         mult_31s_19s_0_pp_0_30, mult_31s_19s_0_pp_0_29, 
         mult_31s_19s_0_pp_1_29, s_mult_31s_19s_0_0_29, s_mult_31s_19s_0_0_30, 
         co_mult_31s_19s_0_0_15, mult_31s_19s_0_pp_0_32, 
         mult_31s_19s_0_pp_1_32, mult_31s_19s_0_pp_0_31, 
         mult_31s_19s_0_pp_1_31, s_mult_31s_19s_0_0_31, s_mult_31s_19s_0_0_32, 
         n2144, n3957, n2145, n3956, n2147, n2146, mult_31s_19s_0_pp_2_6, 
         s_mult_31s_19s_0_1_6, co_mult_31s_19s_0_1_1, mult_31s_19s_0_pp_3_8, 
         mult_31s_19s_0_pp_2_8, mult_31s_19s_0_pp_2_7, mult_31s_19s_0_pp_3_7, 
         s_mult_31s_19s_0_1_7, s_mult_31s_19s_0_1_8, co_mult_31s_19s_0_1_2, 
         mult_31s_19s_0_pp_3_10, mult_31s_19s_0_pp_2_10, mult_31s_19s_0_pp_2_9, 
         mult_31s_19s_0_pp_3_9, s_mult_31s_19s_0_1_9, s_mult_31s_19s_0_1_10, 
         co_mult_31s_19s_0_1_3, mult_31s_19s_0_pp_2_12, mult_31s_19s_0_pp_3_12, 
         mult_31s_19s_0_pp_2_11, mult_31s_19s_0_pp_3_11, s_mult_31s_19s_0_1_11, 
         s_mult_31s_19s_0_1_12, co_mult_31s_19s_0_1_4, mult_31s_19s_0_pp_2_14, 
         mult_31s_19s_0_pp_3_14, mult_31s_19s_0_pp_2_13, 
         mult_31s_19s_0_pp_3_13, s_mult_31s_19s_0_1_13, s_mult_31s_19s_0_1_14, 
         co_mult_31s_19s_0_1_5, mult_31s_19s_0_pp_2_16, mult_31s_19s_0_pp_3_16, 
         mult_31s_19s_0_pp_2_15, mult_31s_19s_0_pp_3_15, s_mult_31s_19s_0_1_15, 
         s_mult_31s_19s_0_1_16, co_mult_31s_19s_0_1_6, mult_31s_19s_0_pp_2_18, 
         mult_31s_19s_0_pp_3_18, mult_31s_19s_0_pp_2_17, 
         mult_31s_19s_0_pp_3_17, s_mult_31s_19s_0_1_17, s_mult_31s_19s_0_1_18, 
         co_mult_31s_19s_0_1_7, mult_31s_19s_0_pp_2_20, mult_31s_19s_0_pp_3_20, 
         mult_31s_19s_0_pp_2_19, mult_31s_19s_0_pp_3_19, s_mult_31s_19s_0_1_19, 
         s_mult_31s_19s_0_1_20, co_mult_31s_19s_0_1_8, mult_31s_19s_0_pp_2_22, 
         mult_31s_19s_0_pp_3_22, mult_31s_19s_0_pp_2_21, 
         mult_31s_19s_0_pp_3_21, s_mult_31s_19s_0_1_21, s_mult_31s_19s_0_1_22, 
         co_mult_31s_19s_0_1_9, mult_31s_19s_0_pp_2_24, mult_31s_19s_0_pp_3_24, 
         mult_31s_19s_0_pp_3_23, mult_31s_19s_0_pp_2_23, s_mult_31s_19s_0_1_23, 
         s_mult_31s_19s_0_1_24, co_mult_31s_19s_0_1_10, mult_31s_19s_0_pp_3_26, 
         mult_31s_19s_0_pp_2_26, mult_31s_19s_0_pp_3_25, 
         mult_31s_19s_0_pp_2_25, s_mult_31s_19s_0_1_25, s_mult_31s_19s_0_1_26, 
         co_mult_31s_19s_0_1_11, mult_31s_19s_0_pp_2_28, 
         mult_31s_19s_0_pp_3_28, mult_31s_19s_0_pp_2_27, 
         mult_31s_19s_0_pp_3_27, s_mult_31s_19s_0_1_27, s_mult_31s_19s_0_1_28, 
         co_mult_31s_19s_0_1_12, mult_31s_19s_0_pp_2_30, 
         mult_31s_19s_0_pp_3_30, mult_31s_19s_0_pp_2_29, 
         mult_31s_19s_0_pp_3_29, s_mult_31s_19s_0_1_29, s_mult_31s_19s_0_1_30, 
         co_mult_31s_19s_0_1_13, mult_31s_19s_0_pp_2_32, 
         mult_31s_19s_0_pp_3_32, mult_31s_19s_0_pp_2_31, 
         mult_31s_19s_0_pp_3_31, s_mult_31s_19s_0_1_31, s_mult_31s_19s_0_1_32, 
         n2149, n3955, n2148, n2150, n3954, n2151, mult_31s_19s_0_pp_4_10, 
         s_mult_31s_19s_0_2_10, co_mult_31s_19s_0_2_1, mult_31s_19s_0_pp_5_12, 
         mult_31s_19s_0_pp_4_12, mult_31s_19s_0_pp_4_11, 
         mult_31s_19s_0_pp_5_11, s_mult_31s_19s_0_2_11, s_mult_31s_19s_0_2_12, 
         co_mult_31s_19s_0_2_2, mult_31s_19s_0_pp_4_14, mult_31s_19s_0_pp_5_14, 
         mult_31s_19s_0_pp_5_13, mult_31s_19s_0_pp_4_13, s_mult_31s_19s_0_2_13, 
         s_mult_31s_19s_0_2_14, co_mult_31s_19s_0_2_3, mult_31s_19s_0_pp_4_16, 
         mult_31s_19s_0_pp_5_16, mult_31s_19s_0_pp_4_15, 
         mult_31s_19s_0_pp_5_15, s_mult_31s_19s_0_2_15, s_mult_31s_19s_0_2_16, 
         co_mult_31s_19s_0_2_4, mult_31s_19s_0_pp_5_18, mult_31s_19s_0_pp_4_18, 
         mult_31s_19s_0_pp_5_17, mult_31s_19s_0_pp_4_17, s_mult_31s_19s_0_2_17, 
         s_mult_31s_19s_0_2_18, co_mult_31s_19s_0_2_5, mult_31s_19s_0_pp_5_20, 
         mult_31s_19s_0_pp_4_20, mult_31s_19s_0_pp_4_19, 
         mult_31s_19s_0_pp_5_19, s_mult_31s_19s_0_2_19, s_mult_31s_19s_0_2_20, 
         co_mult_31s_19s_0_2_6, mult_31s_19s_0_pp_5_22, mult_31s_19s_0_pp_4_22, 
         mult_31s_19s_0_pp_5_21, mult_31s_19s_0_pp_4_21, s_mult_31s_19s_0_2_21, 
         s_mult_31s_19s_0_2_22, co_mult_31s_19s_0_2_7, mult_31s_19s_0_pp_5_24, 
         mult_31s_19s_0_pp_4_24, mult_31s_19s_0_pp_5_23, 
         mult_31s_19s_0_pp_4_23, s_mult_31s_19s_0_2_23, s_mult_31s_19s_0_2_24, 
         co_mult_31s_19s_0_2_8, mult_31s_19s_0_pp_5_26, mult_31s_19s_0_pp_4_26, 
         mult_31s_19s_0_pp_5_25, mult_31s_19s_0_pp_4_25, s_mult_31s_19s_0_2_25, 
         s_mult_31s_19s_0_2_26, co_mult_31s_19s_0_2_9, mult_31s_19s_0_pp_5_28, 
         mult_31s_19s_0_pp_4_28, mult_31s_19s_0_pp_4_27, 
         mult_31s_19s_0_pp_5_27, s_mult_31s_19s_0_2_27, s_mult_31s_19s_0_2_28, 
         co_mult_31s_19s_0_2_10, mult_31s_19s_0_pp_4_30, 
         mult_31s_19s_0_pp_5_30, mult_31s_19s_0_pp_4_29, 
         mult_31s_19s_0_pp_5_29, s_mult_31s_19s_0_2_29, s_mult_31s_19s_0_2_30, 
         co_mult_31s_19s_0_2_11, mult_31s_19s_0_pp_4_32, 
         mult_31s_19s_0_pp_5_32, mult_31s_19s_0_pp_5_31, 
         mult_31s_19s_0_pp_4_31, s_mult_31s_19s_0_2_31, s_mult_31s_19s_0_2_32, 
         mult_31s_19s_0_pp_6_14, s_mult_31s_19s_0_3_14, co_mult_31s_19s_0_3_1, 
         mult_31s_19s_0_pp_6_16, mult_31s_19s_0_pp_7_16, 
         mult_31s_19s_0_pp_6_15, mult_31s_19s_0_pp_7_15, s_mult_31s_19s_0_3_15, 
         s_mult_31s_19s_0_3_16, co_mult_31s_19s_0_3_2, mult_31s_19s_0_pp_6_18, 
         mult_31s_19s_0_pp_7_18, mult_31s_19s_0_pp_6_17, 
         mult_31s_19s_0_pp_7_17, s_mult_31s_19s_0_3_17, s_mult_31s_19s_0_3_18, 
         co_mult_31s_19s_0_3_3, mult_31s_19s_0_pp_6_20, mult_31s_19s_0_pp_7_20, 
         mult_31s_19s_0_pp_6_19, mult_31s_19s_0_pp_7_19, s_mult_31s_19s_0_3_19, 
         s_mult_31s_19s_0_3_20, co_mult_31s_19s_0_3_4, mult_31s_19s_0_pp_6_22, 
         mult_31s_19s_0_pp_7_22, mult_31s_19s_0_pp_6_21, 
         mult_31s_19s_0_pp_7_21, s_mult_31s_19s_0_3_21, s_mult_31s_19s_0_3_22, 
         co_mult_31s_19s_0_3_5, mult_31s_19s_0_pp_6_24, mult_31s_19s_0_pp_7_24, 
         mult_31s_19s_0_pp_7_23, mult_31s_19s_0_pp_6_23, s_mult_31s_19s_0_3_23, 
         s_mult_31s_19s_0_3_24, co_mult_31s_19s_0_3_6, mult_31s_19s_0_pp_6_26, 
         mult_31s_19s_0_pp_7_26, mult_31s_19s_0_pp_6_25, 
         mult_31s_19s_0_pp_7_25, s_mult_31s_19s_0_3_25, s_mult_31s_19s_0_3_26, 
         co_mult_31s_19s_0_3_7, mult_31s_19s_0_pp_6_28, mult_31s_19s_0_pp_7_28, 
         mult_31s_19s_0_pp_7_27, mult_31s_19s_0_pp_6_27, s_mult_31s_19s_0_3_27, 
         s_mult_31s_19s_0_3_28, co_mult_31s_19s_0_3_8, mult_31s_19s_0_pp_6_30, 
         mult_31s_19s_0_pp_7_30, mult_31s_19s_0_pp_6_29, 
         mult_31s_19s_0_pp_7_29, s_mult_31s_19s_0_3_29, s_mult_31s_19s_0_3_30, 
         co_mult_31s_19s_0_3_9, mult_31s_19s_0_pp_6_32, mult_31s_19s_0_pp_7_32, 
         mult_31s_19s_0_pp_6_31, mult_31s_19s_0_pp_7_31, s_mult_31s_19s_0_3_31, 
         s_mult_31s_19s_0_3_32, n2153, n3953, n2152, n3952, n2155, n2154, 
         n2157, n3951, n2156, n2159, n3950, n2158, mult_31s_19s_0_pp_8_18, 
         s_mult_31s_19s_0_4_18, co_mult_31s_19s_0_4_1, mult_31s_19s_0_pp_8_20, 
         mult_31s_19s_0_pp_8_19, s_mult_31s_19s_0_4_19, s_mult_31s_19s_0_4_20, 
         co_mult_31s_19s_0_4_2, mult_31s_19s_0_pp_8_22, mult_31s_19s_0_pp_8_21, 
         s_mult_31s_19s_0_4_21, s_mult_31s_19s_0_4_22, co_mult_31s_19s_0_4_3, 
         mult_31s_19s_0_pp_8_24, mult_31s_19s_0_pp_8_23, s_mult_31s_19s_0_4_23, 
         s_mult_31s_19s_0_4_24, co_mult_31s_19s_0_4_4, mult_31s_19s_0_pp_8_26, 
         mult_31s_19s_0_pp_8_25, s_mult_31s_19s_0_4_25, s_mult_31s_19s_0_4_26, 
         co_mult_31s_19s_0_4_5, mult_31s_19s_0_pp_8_28, mult_31s_19s_0_pp_8_27, 
         s_mult_31s_19s_0_4_27, s_mult_31s_19s_0_4_28, co_mult_31s_19s_0_4_6, 
         mult_31s_19s_0_pp_8_30, mult_31s_19s_0_pp_8_29, s_mult_31s_19s_0_4_29, 
         s_mult_31s_19s_0_4_30, co_mult_31s_19s_0_4_7, mult_31s_19s_0_pp_8_32, 
         mult_31s_19s_0_pp_8_31, s_mult_31s_19s_0_4_31, s_mult_31s_19s_0_4_32, 
         n2160, co_mult_31s_19s_0_5_1, mult_31s_19s_0_pp_2_5, 
         co_mult_31s_19s_0_5_2, s_mult_31s_19s_0_5_8, co_mult_31s_19s_0_5_3, 
         s_mult_31s_19s_0_5_9, s_mult_31s_19s_0_5_10, co_mult_31s_19s_0_5_4, 
         s_mult_31s_19s_0_5_11, s_mult_31s_19s_0_5_12, co_mult_31s_19s_0_5_5, 
         s_mult_31s_19s_0_5_13, s_mult_31s_19s_0_5_14, co_mult_31s_19s_0_5_6, 
         s_mult_31s_19s_0_5_15, s_mult_31s_19s_0_5_16, co_mult_31s_19s_0_5_7, 
         s_mult_31s_19s_0_5_17, s_mult_31s_19s_0_5_18, co_mult_31s_19s_0_5_8, 
         s_mult_31s_19s_0_5_19, s_mult_31s_19s_0_5_20, co_mult_31s_19s_0_5_9, 
         s_mult_31s_19s_0_5_21, s_mult_31s_19s_0_5_22, co_mult_31s_19s_0_5_10, 
         s_mult_31s_19s_0_5_23, s_mult_31s_19s_0_5_24, co_mult_31s_19s_0_5_11, 
         s_mult_31s_19s_0_5_25, s_mult_31s_19s_0_5_26, co_mult_31s_19s_0_5_12, 
         s_mult_31s_19s_0_5_27, s_mult_31s_19s_0_5_28, co_mult_31s_19s_0_5_13, 
         s_mult_31s_19s_0_5_29, s_mult_31s_19s_0_5_30, co_mult_31s_19s_0_5_14, 
         s_mult_31s_19s_0_5_31, s_mult_31s_19s_0_5_32, s_mult_31s_19s_0_6_12, 
         co_mult_31s_19s_0_6_1, mult_31s_19s_0_pp_6_13, s_mult_31s_19s_0_6_13, 
         s_mult_31s_19s_0_6_14, co_mult_31s_19s_0_6_2, s_mult_31s_19s_0_6_15, 
         s_mult_31s_19s_0_6_16, co_mult_31s_19s_0_6_3, s_mult_31s_19s_0_6_17, 
         s_mult_31s_19s_0_6_18, co_mult_31s_19s_0_6_4, s_mult_31s_19s_0_6_19, 
         s_mult_31s_19s_0_6_20, co_mult_31s_19s_0_6_5, s_mult_31s_19s_0_6_21, 
         s_mult_31s_19s_0_6_22, co_mult_31s_19s_0_6_6, s_mult_31s_19s_0_6_23, 
         s_mult_31s_19s_0_6_24, co_mult_31s_19s_0_6_7, s_mult_31s_19s_0_6_25, 
         s_mult_31s_19s_0_6_26, co_mult_31s_19s_0_6_8, s_mult_31s_19s_0_6_27, 
         s_mult_31s_19s_0_6_28, co_mult_31s_19s_0_6_9, s_mult_31s_19s_0_6_29, 
         s_mult_31s_19s_0_6_30, co_mult_31s_19s_0_6_10, s_mult_31s_19s_0_6_31, 
         s_mult_31s_19s_0_6_32, s_mult_31s_19s_0_7_18, co_mult_31s_19s_0_7_1, 
         s_mult_31s_19s_0_7_19, s_mult_31s_19s_0_7_20, co_mult_31s_19s_0_7_2, 
         s_mult_31s_19s_0_7_21, s_mult_31s_19s_0_7_22, co_mult_31s_19s_0_7_3, 
         s_mult_31s_19s_0_7_23, s_mult_31s_19s_0_7_24, co_mult_31s_19s_0_7_4, 
         s_mult_31s_19s_0_7_25, s_mult_31s_19s_0_7_26, co_mult_31s_19s_0_7_5, 
         s_mult_31s_19s_0_7_27, s_mult_31s_19s_0_7_28, co_mult_31s_19s_0_7_6, 
         s_mult_31s_19s_0_7_29, s_mult_31s_19s_0_7_30, co_mult_31s_19s_0_7_7, 
         s_mult_31s_19s_0_7_31, s_mult_31s_19s_0_7_32, n3949, 
         co_mult_31s_19s_0_8_1, mult_31s_19s_0_pp_4_9, co_mult_31s_19s_0_8_2, 
         co_mult_31s_19s_0_8_3, co_mult_31s_19s_0_8_4, s_mult_31s_19s_0_8_16, 
         co_mult_31s_19s_0_8_5, s_mult_31s_19s_0_8_17, s_mult_31s_19s_0_8_18, 
         co_mult_31s_19s_0_8_6, s_mult_31s_19s_0_8_19, s_mult_31s_19s_0_8_20, 
         co_mult_31s_19s_0_8_7, s_mult_31s_19s_0_8_21, s_mult_31s_19s_0_8_22, 
         co_mult_31s_19s_0_8_8, s_mult_31s_19s_0_8_23, s_mult_31s_19s_0_8_24, 
         co_mult_31s_19s_0_8_9, s_mult_31s_19s_0_8_25, s_mult_31s_19s_0_8_26, 
         co_mult_31s_19s_0_8_10, s_mult_31s_19s_0_8_27, s_mult_31s_19s_0_8_28, 
         co_mult_31s_19s_0_8_11, s_mult_31s_19s_0_8_29, s_mult_31s_19s_0_8_30, 
         co_mult_31s_19s_0_8_12, s_mult_31s_19s_0_8_31, s_mult_31s_19s_0_8_32, 
         co_t_mult_31s_19s_0_9_1, mult_31s_19s_0_pp_8_17, 
         co_t_mult_31s_19s_0_9_2, co_t_mult_31s_19s_0_9_3, 
         co_t_mult_31s_19s_0_9_4, co_t_mult_31s_19s_0_9_5, 
         co_t_mult_31s_19s_0_9_6, co_t_mult_31s_19s_0_9_7, 
         co_t_mult_31s_19s_0_9_8, n3997, n3996, mult_31s_19s_0_cin_lr_0, mco, 
         mco_1, mco_2, mco_3, mco_4, mco_5, mco_6, mco_7, mco_8, mco_9, mco_10, 
         mco_11, mco_12, mco_13, mco_14, VCC_net, mult_31s_19s_0_mult_0_15_n2, 
         mult_31s_19s_0_mult_0_15_n2_1, mco_15, mco_16, mco_17, mco_18, mco_19, 
         mco_20, mco_21, mco_22, mco_23, mco_24, mco_25, mco_26, mco_27, 
         mco_28, mult_31s_19s_0_mult_2_14_n3, mco_30, mco_31, mco_32, mco_33, 
         mco_34, mco_35, mco_36, mco_37, mco_38, mco_39, mco_40, mco_41, 
         mco_42, n3995, mco_45, mco_46, mco_47, mco_48, mco_49, mco_50, mco_51, 
         mco_52, mco_53, mco_54, mco_55, mco_56, n3994, n3993, mco_60, mco_61, 
         mco_62, mco_63, mco_64, mco_65, mco_66, mco_67, mco_68, mco_69, 
         mco_70, mco_75, mco_76, mco_77, mco_78, mco_79, mco_80, mco_81, 
         mco_82, mco_83, mco_84, n3948, n3947, mco_90, mco_91, mco_92, mco_93, 
         mco_94, mco_95, mco_96, mco_97, mco_98, n3946, mco_105, mco_106, 
         mco_107, mco_108, mco_109, mco_110, mco_111, mco_112, n3945, n3944, 
         n3943, mco_120, mco_121, mco_122, mco_123, mco_124, mco_125, mco_126, 
         n3942, n4043, n2410, n4042, n4041, n4040, n4039, n4038, n4037, n4036, 
         n4035, n3941, n3940, n3939, n3938, n3937, n3936, n2480, n4398, 
         Cycle_period_31_N_33_8, Cycle_period_31_N_33_6, n8, speed_down, 
         n8_adj_1, n4397, Cycle_period_31_N_33_11, Cycle_period_31_N_33_10, 
         Cycle_period_31_N_33_14, Cycle_period_31_N_33_12, 
         Cycle_period_31_N_33_19, Cycle_period_31_N_33_15, 
         Cycle_period_31_N_33_18, Cycle_period_31_N_33_21, 
         Cycle_period_31_N_33_20, Cycle_period_31_N_33_24, 
         Cycle_period_31_N_33_23, Cycle_period_31_N_33_25, 
         LIGHT_CTL_31_N_309_0, clk_c_enable_19, clr, n4210, n4206, 
         clk_c_enable_4, n4295, n4321, n4293, brightness_N_507, brightness, 
         n21, n4281, n4279, n4314, n4229, n28, clr_N_509, clrin_c, n966, n4263, 
         n4257, n4306, n4299, n4289, speed_down_N_505, n4283, n4318, n4243, 
         speed_up_N_503, n3539, n3626, n3535, n3612, n3553, n3610, n3513, 
         n3644, n4211, n4269, n4265, n4249, n4217, n4219, n4275, n10, 
         LED_SIG_c;

  SLICE_0 SLICE_0( .B1(Cycle_period_16), .A0(Cycle_period_15), .FCI(n3990), 
    .FCO(n3991));
  SLICE_1 SLICE_1( .B1(Cycle_period_14), .B0(Cycle_period_13), .FCI(n3989), 
    .FCO(n3990));
  SLICE_2 SLICE_2( .A1(n298), .A0(n299), .DI1(n293_N_253_12), 
    .DI0(n293_N_253_11), .LSR(speed_down_in_c), .CLK(clk_c), .FCI(n3878), 
    .F0(n293_N_253_11), .Q0(n299), .F1(n293_N_253_12), .Q1(n298), .FCO(n3879));
  SLICE_3 SLICE_3( .A1(n300), .A0(n301), .DI1(n293_N_253_10), 
    .DI0(n293_N_253_9), .LSR(speed_down_in_c), .CLK(clk_c), .FCI(n3877), 
    .F0(n293_N_253_9), .Q0(n301), .F1(n293_N_253_10), .Q1(n300), .FCO(n3878));
  SLICE_4 SLICE_4( .A1(n302), .A0(n303), .DI1(n293_N_253_8), 
    .DI0(n293_N_253_7), .LSR(speed_down_in_c), .CLK(clk_c), .FCI(n3876), 
    .F0(n293_N_253_7), .Q0(n303), .F1(n293_N_253_8), .Q1(n302), .FCO(n3877));
  SLICE_5 SLICE_5( .B1(Cycle_period_12), .A0(Cycle_period_11), .FCI(n4033), 
    .FCO(n4034));
  SLICE_6 SLICE_6( .A1(n304), .A0(n305), .DI1(n293_N_253_6), 
    .DI0(n293_N_253_5), .LSR(speed_down_in_c), .CLK(clk_c), .FCI(n3875), 
    .F0(n293_N_253_5), .Q0(n305), .F1(n293_N_253_6), .Q1(n304), .FCO(n3876));
  SLICE_7 SLICE_7( .A1(n306), .A0(n307), .DI1(n293_N_253_4), 
    .DI0(n293_N_253_3), .LSR(speed_down_in_c), .CLK(clk_c), .FCI(n3874), 
    .F0(n293_N_253_3), .Q0(n307), .F1(n293_N_253_4), .Q1(n306), .FCO(n3875));
  SLICE_8 SLICE_8( .B1(cur2_7), .A1(cur1_7), .B0(cur1_6), .A0(cur2_6), 
    .FCI(n3907), .FCO(n3908));
  SLICE_9 SLICE_9( .C1(n104), .B1(n3632), .A1(n4053), .DI1(n87_N_179_0), 
    .CLK(clk_c), .F1(n87_N_179_0), .Q1(n104), .FCO(n3855));
  SLICE_10 SLICE_10( .B1(cur2_5), .A1(cur1_5), .B0(cur1_4), .A0(cur2_4), 
    .FCI(n3906), .FCO(n3907));
  SLICE_11 SLICE_11( .B1(cur1_3), .A1(cur2_3), .FCO(n3906));
  SLICE_12 SLICE_12( .A0(cur1_31), .DI0(n938), .LSR(n1844), .CLK(clk_c), 
    .FCI(n3905), .F0(n938), .Q0(cur1_31));
  SLICE_13 SLICE_13( .A1(cur1_30), .A0(cur1_29), .DI1(n939), .DI0(n940), 
    .LSR(n1844), .CLK(clk_c), .FCI(n3904), .F0(n940), .Q0(cur1_29), .F1(n939), 
    .Q1(cur1_30), .FCO(n3905));
  SLICE_14 SLICE_14( .B1(Cycle_period_10), .B0(Cycle_period_9), .FCI(n4032), 
    .FCO(n4033));
  SLICE_15 SLICE_15( .A1(cur1_28), .A0(cur1_27), .DI1(n941), .DI0(n942), 
    .LSR(n1844), .CLK(clk_c), .FCI(n3903), .F0(n942), .Q0(cur1_27), .F1(n941), 
    .Q1(cur1_28), .FCO(n3904));
  SLICE_16 SLICE_16( .A1(cur1_26), .A0(cur1_25), .DI1(n943), .DI0(n944), 
    .LSR(n1844), .CLK(clk_c), .FCI(n3902), .F0(n944), .Q0(cur1_25), .F1(n943), 
    .Q1(cur1_26), .FCO(n3903));
  SLICE_17 SLICE_17( .A1(cur1_24), .A0(cur1_23), .DI1(n945), .DI0(n946), 
    .LSR(n1844), .CLK(clk_c), .FCI(n3901), .F0(n946), .Q0(cur1_23), .F1(n945), 
    .Q1(cur1_24), .FCO(n3902));
  SLICE_18 SLICE_18( .B1(cur1_7), .A1(n1048), .B0(n1049), .A0(cur1_6), 
    .FCI(n3922), .FCO(n3923));
  SLICE_19 SLICE_19( .B1(Cycle_period_8), .A0(Cycle_period_7), .FCI(n4031), 
    .FCO(n4032));
  SLICE_20 SLICE_20( .B1(n1050), .A1(cur1_5), .B0(n1051), .A0(cur1_4), 
    .FCI(n3921), .FCO(n3922));
  SLICE_21 SLICE_21( .B1(Cycle_period_6), .FCO(n4031));
  SLICE_22 SLICE_22( .B0(cur2_31), .A0(n2550), .DI0(n134_adj_2), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4030), .F0(n134_adj_2), 
    .Q0(cur2_31));
  SLICE_23 SLICE_23( .B1(cur2_30), .A1(n2550), .B0(cur2_29), .A0(n2550), 
    .DI1(n135_adj_3), .DI0(n136_adj_4), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4029), .F0(n136_adj_4), .Q0(cur2_29), .F1(n135_adj_3), .Q1(cur2_30), 
    .FCO(n4030));
  SLICE_24 SLICE_24( .B1(n1052), .A1(cur1_3), .FCO(n3921));
  SLICE_25 SLICE_25( .FCI(n3920), .F0(n2585));
  SLICE_26 SLICE_26( .B1(cur1_23), .A1(n1032), .B0(cur1_22), .A0(n1033), 
    .FCI(n3930), .FCO(n3931));
  SLICE_27 SLICE_27( .B1(n1034), .A1(cur1_21), .B0(cur1_20), .A0(n1035), 
    .FCI(n3929), .FCO(n3930));
  SLICE_28 SLICE_28( .B1(cur1_31), .A1(n1024), .B0(cur1_30), .A0(n1025), 
    .FCI(n3934), .FCO(n3935));
  SLICE_29 SLICE_29( .B1(Cycle_period_12), .A0(Cycle_period_11), .FCI(n3988), 
    .FCO(n3989));
  SLICE_30 SLICE_30( .B1(cur2_28), .A1(n2550), .B0(cur2_27), .A0(n2550), 
    .DI1(n137_adj_5), .DI0(n138_adj_6), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4028), .F0(n138_adj_6), .Q0(cur2_27), .F1(n137_adj_5), .Q1(cur2_28), 
    .FCO(n4029));
  SLICE_31 SLICE_31( .A1(n308), .A0(n309), .DI1(n293_N_253_2), 
    .DI0(n293_N_253_1), .LSR(speed_down_in_c), .CLK(clk_c), .FCI(n3873), 
    .F0(n293_N_253_1), .Q0(n309), .F1(n293_N_253_2), .Q1(n308), .FCO(n3874));
  SLICE_32 SLICE_32( .A1(Cycle_period_18), .B0(Cycle_period_17), .FCI(n3991), 
    .FCO(n3992));
  SLICE_33 SLICE_33( .A1(Cycle_period_10), .B0(Cycle_period_9), .FCI(n3987), 
    .FCO(n3988));
  SLICE_34 SLICE_34( .A1(Cycle_period_8), .B0(Cycle_period_7), 
    .A0(Cycle_period_6), .FCO(n3987));
  SLICE_35 SLICE_35( .B1(cur2_26), .A1(n2550), .B0(cur2_25), .A0(n2550), 
    .DI1(n139_adj_7), .DI0(n140_adj_8), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4027), .F0(n140_adj_8), .Q0(cur2_25), .F1(n139_adj_7), .Q1(cur2_26), 
    .FCO(n4028));
  SLICE_36 SLICE_36( .FCI(n3986), .F0(n3160));
  SLICE_37 SLICE_37( .A1(LIGHT_CTL_7), .A0(LIGHT_CTL_7), .FCI(n3985), 
    .FCO(n3986));
  SLICE_38 SLICE_38( .A0(LIGHT_CTL_2), .FCI(n3984), .F0(n3155), .F1(n3154), 
    .FCO(n3985));
  SLICE_39 SLICE_39( .B1(LIGHT_CTL_7), .A1(LIGHT_CTL_7), .B0(LIGHT_CTL_2), 
    .A0(LIGHT_CTL_7), .FCI(n3983), .F0(n3157), .F1(n3156), .FCO(n3984));
  SLICE_40 SLICE_40( .C1(n310), .B1(n3672), .A1(n4046), .DI1(n293_N_253_0), 
    .LSR(speed_down_in_c), .CLK(clk_c), .F1(n293_N_253_0), .Q1(n310), 
    .FCO(n3873));
  SLICE_41 SLICE_41( .A0(n190), .DI0(n190_N_216_17), .LSR(speed_up_in_c), 
    .CLK(clk_c), .FCI(n3872), .F0(n190_N_216_17), .Q0(n190));
  SLICE_42 SLICE_42( .A1(n191), .A0(n192), .DI1(n190_N_216_16), 
    .DI0(n190_N_216_15), .LSR(speed_up_in_c), .CLK(clk_c), .FCI(n3871), 
    .F0(n190_N_216_15), .Q0(n192), .F1(n190_N_216_16), .Q1(n191), .FCO(n3872));
  SLICE_43 SLICE_43( .A1(n193), .A0(n194), .DI1(n190_N_216_14), 
    .DI0(n190_N_216_13), .LSR(speed_up_in_c), .CLK(clk_c), .FCI(n3870), 
    .F0(n190_N_216_13), .Q0(n194), .F1(n190_N_216_14), .Q1(n193), .FCO(n3871));
  SLICE_44 SLICE_44( .A1(n195), .A0(n196), .DI1(n190_N_216_12), 
    .DI0(n190_N_216_11), .LSR(speed_up_in_c), .CLK(clk_c), .FCI(n3869), 
    .F0(n190_N_216_11), .Q0(n196), .F1(n190_N_216_12), .Q1(n195), .FCO(n3870));
  SLICE_45 SLICE_45( .A1(n197), .A0(n198), .DI1(n190_N_216_10), 
    .DI0(n190_N_216_9), .LSR(speed_up_in_c), .CLK(clk_c), .FCI(n3868), 
    .F0(n190_N_216_9), .Q0(n198), .F1(n190_N_216_10), .Q1(n197), .FCO(n3869));
  SLICE_46 SLICE_46( .A1(n199), .A0(n200), .DI1(n190_N_216_8), 
    .DI0(n190_N_216_7), .LSR(speed_up_in_c), .CLK(clk_c), .FCI(n3867), 
    .F0(n190_N_216_7), .Q0(n200), .F1(n190_N_216_8), .Q1(n199), .FCO(n3868));
  SLICE_47 SLICE_47( .A1(cur1_22), .A0(cur1_21), .DI1(n947), .DI0(n948), 
    .LSR(n1844), .CLK(clk_c), .FCI(n3900), .F0(n948), .Q0(cur1_21), .F1(n947), 
    .Q1(cur1_22), .FCO(n3901));
  SLICE_48 SLICE_48( .A1(cur1_20), .A0(cur1_19), .DI1(n949), .DI0(n950), 
    .LSR(n1844), .CLK(clk_c), .FCI(n3899), .F0(n950), .Q0(cur1_19), .F1(n949), 
    .Q1(cur1_20), .FCO(n3900));
  SLICE_49 SLICE_49( .A1(cur1_18), .A0(cur1_17), .DI1(n951), .DI0(n952), 
    .LSR(n1844), .CLK(clk_c), .FCI(n3898), .F0(n952), .Q0(cur1_17), .F1(n951), 
    .Q1(cur1_18), .FCO(n3899));
  SLICE_50 SLICE_50( .B1(n3231), .A1(cur1_16), .B0(n3221), .A0(cur1_15), 
    .DI1(n953), .DI0(n954), .LSR(n1844), .CLK(clk_c), .FCI(n3897), .F0(n954), 
    .Q0(cur1_15), .F1(n953), .Q1(cur1_16), .FCO(n3898));
  SLICE_51 SLICE_51( .B1(cur1_14), .A1(n3222), .B0(cur1_13), .A0(n3223), 
    .DI1(n955), .DI0(n956), .LSR(n1844), .CLK(clk_c), .FCI(n3896), .F0(n956), 
    .Q0(cur1_13), .F1(n955), .Q1(cur1_14), .FCO(n3897));
  SLICE_52 SLICE_52( .B1(n3224), .A1(cur1_12), .B0(cur1_11), .A0(n3225), 
    .DI1(n957), .DI0(n958), .LSR(n1844), .CLK(clk_c), .FCI(n3895), .F0(n958), 
    .Q0(cur1_11), .F1(n957), .Q1(cur1_12), .FCO(n3896));
  SLICE_53 SLICE_53( .B1(n3226), .A1(cur1_10), .B0(cur1_9), .A0(n3227), 
    .DI1(n959), .DI0(n960), .LSR(n1844), .CLK(clk_c), .FCI(n3894), .F0(n960), 
    .Q0(cur1_9), .F1(n959), .Q1(cur1_10), .FCO(n3895));
  SLICE_54 SLICE_54( .B1(cur1_8), .A1(n3228), .B0(n3229), .A0(cur1_7), 
    .DI1(n961), .DI0(n962), .LSR(n1844), .CLK(clk_c), .FCI(n3893), .F0(n962), 
    .Q0(cur1_7), .F1(n961), .Q1(cur1_8), .FCO(n3894));
  SLICE_55 SLICE_55( .B1(cur2_31), .A1(cur1_31), .B0(cur1_30), .A0(cur2_30), 
    .FCI(n3919), .FCO(n3920));
  SLICE_56 SLICE_56( .B1(cur2_29), .A1(cur1_29), .B0(cur1_28), .A0(cur2_28), 
    .FCI(n3918), .FCO(n3919));
  SLICE_57 SLICE_57( .B1(cur2_27), .A1(cur1_27), .B0(cur2_26), .A0(cur1_26), 
    .FCI(n3917), .FCO(n3918));
  SLICE_58 SLICE_58( .B1(cur2_25), .A1(cur1_25), .B0(cur1_24), .A0(cur2_24), 
    .FCI(n3916), .FCO(n3917));
  SLICE_59 SLICE_59( .B1(cur1_19), .A1(n1036), .B0(cur1_18), .A0(n1037), 
    .FCI(n3928), .FCO(n3929));
  SLICE_60 SLICE_60( .B1(cur1_17), .A1(n1038), .B0(cur1_16), .A0(n1039), 
    .FCI(n3927), .FCO(n3928));
  SLICE_61 SLICE_61( .B1(cur1_29), .A1(n1026), .B0(cur1_28), .A0(n1027), 
    .FCI(n3933), .FCO(n3934));
  SLICE_62 SLICE_62( .B0(LIGHT_CTL_2), .A0(LIGHT_CTL_0), .F1(n3158), 
    .FCO(n3983));
  SLICE_63 SLICE_63( .FCI(n3981), .F0(n3231));
  SLICE_64 SLICE_64( .B1(n3160), .B0(LIGHT_CTL_7), .FCI(n3980), .F0(n3222), 
    .F1(n3221), .FCO(n3981));
  SLICE_65 SLICE_65( .B1(LIGHT_CTL_7), .A1(LIGHT_CTL_7), .B0(n3154), 
    .A0(LIGHT_CTL_7), .FCI(n3979), .F0(n3224), .F1(n3223), .FCO(n3980));
  SLICE_66 SLICE_66( .A1(n3155), .B0(n3156), .A0(LIGHT_CTL_2), .FCI(n3978), 
    .F0(n3226), .F1(n3225), .FCO(n3979));
  SLICE_67 SLICE_67( .B1(LIGHT_CTL_7), .A1(n3157), .B0(n3158), 
    .A0(LIGHT_CTL_2), .FCI(n3977), .F0(n3228), .F1(n3227), .FCO(n3978));
  SLICE_68 SLICE_68( .A1(n201), .A0(n202), .DI1(n190_N_216_6), 
    .DI0(n190_N_216_5), .LSR(speed_up_in_c), .CLK(clk_c), .FCI(n3866), 
    .F0(n190_N_216_5), .Q0(n202), .F1(n190_N_216_6), .Q1(n201), .FCO(n3867));
  SLICE_69 SLICE_69( .A1(n203), .A0(n204), .DI1(n190_N_216_4), 
    .DI0(n190_N_216_3), .LSR(speed_up_in_c), .CLK(clk_c), .FCI(n3865), 
    .F0(n190_N_216_3), .Q0(n204), .F1(n190_N_216_4), .Q1(n203), .FCO(n3866));
  SLICE_70 SLICE_70( .A1(n205), .A0(n206), .DI1(n190_N_216_2), 
    .DI0(n190_N_216_1), .LSR(speed_up_in_c), .CLK(clk_c), .FCI(n3864), 
    .F0(n190_N_216_1), .Q0(n206), .F1(n190_N_216_2), .Q1(n205), .FCO(n3865));
  SLICE_71 SLICE_71( .C1(n207), .B1(n3666), .A1(n4045), .DI1(n190_N_216_0), 
    .LSR(speed_up_in_c), .CLK(clk_c), .F1(n190_N_216_0), .Q1(n207), 
    .FCO(n3864));
  SLICE_72 SLICE_72( .A0(n87), .DI0(n87_N_179_17), .CLK(clk_c), .FCI(n3863), 
    .F0(n87_N_179_17), .Q0(n87));
  SLICE_73 SLICE_73( .A1(n88), .A0(n89), .DI1(n87_N_179_16), 
    .DI0(n87_N_179_15), .CLK(clk_c), .FCI(n3862), .F0(n87_N_179_15), .Q0(n89), 
    .F1(n87_N_179_16), .Q1(n88), .FCO(n3863));
  SLICE_74 SLICE_74( .A1(n90), .A0(n91), .DI1(n87_N_179_14), 
    .DI0(n87_N_179_13), .CLK(clk_c), .FCI(n3861), .F0(n87_N_179_13), .Q0(n91), 
    .F1(n87_N_179_14), .Q1(n90), .FCO(n3862));
  SLICE_75 SLICE_75( .B1(n3230), .A1(cur1_6), .B0(cur1_5), .A0(LIGHT_CTL_2), 
    .DI1(n963), .DI0(n964), .LSR(n1844), .CLK(clk_c), .FCI(n3892), .F0(n964), 
    .Q0(cur1_5), .F1(n963), .Q1(cur1_6), .FCO(n3893));
  SLICE_76 SLICE_76( .A1(cur1_4), .B0(cur1_3), .A0(LIGHT_CTL_0), .DI1(n965), 
    .LSR(n1844), .CLK(clk_c), .F1(n965), .Q1(cur1_4), .FCO(n3892));
  SLICE_77 SLICE_77( .B1(cur2_24), .A1(n2550), .B0(cur2_23), .A0(n2550), 
    .DI1(n141_adj_9), .DI0(n142_adj_10), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4026), .F0(n142_adj_10), .Q0(cur2_23), .F1(n141_adj_9), .Q1(cur2_24), 
    .FCO(n4027));
  SLICE_78 SLICE_78( .A0(COUNT1_17), .DI0(COUNT1_17_N_290_17), 
    .LSR(brightness_in_c), .CLK(clk_c), .FCI(n3890), .F0(COUNT1_17_N_290_17), 
    .Q0(COUNT1_17));
  SLICE_79 SLICE_79( .A1(COUNT1_16), .A0(COUNT1_15), .DI1(COUNT1_17_N_290_16), 
    .DI0(COUNT1_17_N_290_15), .LSR(brightness_in_c), .CLK(clk_c), .FCI(n3889), 
    .F0(COUNT1_17_N_290_15), .Q0(COUNT1_15), .F1(COUNT1_17_N_290_16), 
    .Q1(COUNT1_16), .FCO(n3890));
  SLICE_80 SLICE_80( .A1(COUNT1_14), .A0(COUNT1_13), .DI1(COUNT1_17_N_290_14), 
    .DI0(COUNT1_17_N_290_13), .LSR(brightness_in_c), .CLK(clk_c), .FCI(n3888), 
    .F0(COUNT1_17_N_290_13), .Q0(COUNT1_13), .F1(COUNT1_17_N_290_14), 
    .Q1(COUNT1_14), .FCO(n3889));
  SLICE_81 SLICE_81( .A1(COUNT1_12), .A0(COUNT1_11), .DI1(COUNT1_17_N_290_12), 
    .DI0(COUNT1_17_N_290_11), .LSR(brightness_in_c), .CLK(clk_c), .FCI(n3887), 
    .F0(COUNT1_17_N_290_11), .Q0(COUNT1_11), .F1(COUNT1_17_N_290_12), 
    .Q1(COUNT1_12), .FCO(n3888));
  SLICE_82 SLICE_82( .A1(COUNT1_10), .A0(COUNT1_9), .DI1(COUNT1_17_N_290_10), 
    .DI0(COUNT1_17_N_290_9), .LSR(brightness_in_c), .CLK(clk_c), .FCI(n3886), 
    .F0(COUNT1_17_N_290_9), .Q0(COUNT1_9), .F1(COUNT1_17_N_290_10), 
    .Q1(COUNT1_10), .FCO(n3887));
  SLICE_83 SLICE_83( .B1(cur2_22), .A1(n2550), .B0(cur2_21), .A0(n2550), 
    .DI1(n143_adj_11), .DI0(n144_adj_12), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4025), .F0(n144_adj_12), .Q0(cur2_21), .F1(n143_adj_11), 
    .Q1(cur2_22), .FCO(n4026));
  SLICE_84 SLICE_84( .B1(cur2_20), .A1(n2550), .B0(cur2_19), .A0(n2550), 
    .DI1(n145_adj_13), .DI0(n146_adj_14), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4024), .F0(n146_adj_14), .Q0(cur2_19), .F1(n145_adj_13), 
    .Q1(cur2_20), .FCO(n4025));
  SLICE_85 SLICE_85( .B1(cur2_18), .A1(n2550), .B0(cur2_17), .A0(n2550), 
    .DI1(n147_adj_15), .DI0(n148_adj_16), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4023), .F0(n148_adj_16), .Q0(cur2_17), .F1(n147_adj_15), 
    .Q1(cur2_18), .FCO(n4024));
  SLICE_86 SLICE_86( .B1(cur2_16), .A1(n2550), .B0(cur2_15), .A0(n2550), 
    .DI1(n149_adj_17), .DI0(n150_adj_18), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4022), .F0(n150_adj_18), .Q0(cur2_15), .F1(n149_adj_17), 
    .Q1(cur2_16), .FCO(n4023));
  SLICE_87 SLICE_87( .B1(cur2_14), .A1(n2550), .B0(cur2_13), .A0(n2550), 
    .DI1(n151_adj_19), .DI0(n152_adj_20), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4021), .F0(n152_adj_20), .Q0(cur2_13), .F1(n151_adj_19), 
    .Q1(cur2_14), .FCO(n4022));
  SLICE_88 SLICE_88( .B1(cur2_23), .A1(cur1_23), .B0(cur1_22), .A0(cur2_22), 
    .FCI(n3915), .FCO(n3916));
  SLICE_89 SLICE_89( .B1(cur2_12), .A1(n2550), .B0(cur2_11), .A0(n2550), 
    .DI1(n153_adj_21), .DI0(n154_adj_22), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4020), .F0(n154_adj_22), .Q0(cur2_11), .F1(n153_adj_21), 
    .Q1(cur2_12), .FCO(n4021));
  SLICE_90 SLICE_90( .B1(cur2_21), .A1(cur1_21), .B0(cur1_20), .A0(cur2_20), 
    .FCI(n3914), .FCO(n3915));
  SLICE_91 SLICE_91( .B1(cur2_10), .A1(n2550), .B0(cur2_9), .A0(n2550), 
    .DI1(n155_adj_23), .DI0(n156_adj_24), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4019), .F0(n156_adj_24), .Q0(cur2_9), .F1(n155_adj_23), .Q1(cur2_10), 
    .FCO(n4020));
  SLICE_92 SLICE_92( .B1(cur2_19), .A1(cur1_19), .B0(cur2_18), .A0(cur1_18), 
    .FCI(n3913), .FCO(n3914));
  SLICE_93 SLICE_93( .B1(cur2_17), .A1(cur1_17), .B0(cur1_16), .A0(cur2_16), 
    .FCI(n3912), .FCO(n3913));
  SLICE_94 SLICE_94( .B1(cur1_15), .A1(n1040), .B0(cur1_14), .A0(n1041), 
    .FCI(n3926), .FCO(n3927));
  SLICE_95 SLICE_95( .B1(cur2_8), .A1(n2550), .B0(cur2_7), .A0(n2550), 
    .DI1(n157_adj_25), .DI0(n158_adj_26), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4018), .F0(n158_adj_26), .Q0(cur2_7), .F1(n157_adj_25), .Q1(cur2_8), 
    .FCO(n4019));
  SLICE_96 SLICE_96( .B1(cur1_13), .A1(n1042), .B0(cur1_12), .A0(n1043), 
    .FCI(n3925), .FCO(n3926));
  SLICE_97 SLICE_97( .B1(cur2_6), .A1(n2550), .B0(cur2_5), .A0(n2550), 
    .DI1(n159_adj_27), .DI0(n160_adj_28), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4017), .F0(n160_adj_28), .Q0(cur2_5), .F1(n159_adj_27), .Q1(cur2_6), 
    .FCO(n4018));
  SLICE_98 SLICE_98( .B1(cur2_4), .A1(n2550), .B0(cur2_3), .A0(n2550), 
    .DI1(n161_adj_29), .DI0(n162_adj_30), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4016), .F0(n162_adj_30), .Q0(cur2_3), .F1(n161_adj_29), .Q1(cur2_4), 
    .FCO(n4017));
  SLICE_99 SLICE_99( .B1(cur2_2), .A1(n2550), .B0(cur2_1), .A0(n2550), 
    .DI1(n163_adj_31), .DI0(n164_adj_32), .LSR(cnt_31__N_437), .CLK(clk_c), 
    .FCI(n4015), .F0(n164_adj_32), .Q0(cur2_1), .F1(n163_adj_31), .Q1(cur2_2), 
    .FCO(n4016));
  SLICE_100 SLICE_100( .A1(cur2_0), .DI1(n165_adj_33), .LSR(cnt_31__N_437), 
    .CLK(clk_c), .F1(n165_adj_33), .Q1(cur2_0), .FCO(n4015));
  SLICE_101 SLICE_101( .A0(cnt_31), .DI0(n134), .LSR(cnt_31__N_437), 
    .CLK(clk_c), .FCI(n4014), .F0(n134), .Q0(cnt_31));
  SLICE_102 SLICE_102( .A1(cnt_28), .A0(cnt_27), .DI1(n137), .DI0(n138), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4012), .F0(n138), .Q0(cnt_27), 
    .F1(n137), .Q1(cnt_28), .FCO(n4013));
  SLICE_103 SLICE_103( .A1(cnt_26), .A0(cnt_25), .DI1(n139), .DI0(n140), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4011), .F0(n140), .Q0(cnt_25), 
    .F1(n139), .Q1(cnt_26), .FCO(n4012));
  SLICE_104 SLICE_104( .B1(cur1_27), .A1(n1028), .B0(cur1_26), .A0(n1029), 
    .FCI(n3932), .FCO(n3933));
  SLICE_105 SLICE_105( .A1(n3159), .B0(LIGHT_CTL_7), .A0(LIGHT_CTL_0), 
    .F1(n3229), .FCO(n3977));
  SLICE_106 SLICE_106( .B0(Cycle_period_31), .A0(cnt_31), .FCI(n3975), 
    .F1(cnt_31__N_437));
  SLICE_107 SLICE_107( .B1(Cycle_period_30), .A1(cnt_30), .B0(Cycle_period_29), 
    .A0(cnt_29), .FCI(n3974), .FCO(n3975));
  SLICE_108 SLICE_108( .B1(cnt_28), .A1(Cycle_period_28), .B0(Cycle_period_27), 
    .A0(cnt_27), .FCI(n3973), .FCO(n3974));
  SLICE_109 SLICE_109( .B1(cnt_26), .A1(Cycle_period_26), .B0(cnt_25), 
    .A0(Cycle_period_25), .FCI(n3972), .FCO(n3973));
  SLICE_110 SLICE_110( .B1(cnt_24), .A1(Cycle_period_24), .B0(Cycle_period_23), 
    .A0(cnt_23), .FCI(n3971), .FCO(n3972));
  SLICE_111 SLICE_111( .A1(cnt_24), .A0(cnt_23), .DI1(n141), .DI0(n142), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4010), .F0(n142), .Q0(cnt_23), 
    .F1(n141), .Q1(cnt_24), .FCO(n4011));
  SLICE_112 SLICE_112( .A1(n92), .A0(n93), .DI1(n87_N_179_12), 
    .DI0(n87_N_179_11), .CLK(clk_c), .FCI(n3860), .F0(n87_N_179_11), .Q0(n93), 
    .F1(n87_N_179_12), .Q1(n92), .FCO(n3861));
  SLICE_113 SLICE_113( .A1(n94), .A0(n95), .DI1(n87_N_179_10), 
    .DI0(n87_N_179_9), .CLK(clk_c), .FCI(n3859), .F0(n87_N_179_9), .Q0(n95), 
    .F1(n87_N_179_10), .Q1(n94), .FCO(n3860));
  SLICE_114 SLICE_114( .A1(cnt_30), .A0(cnt_29), .DI1(n135), .DI0(n136), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4013), .F0(n136), .Q0(cnt_29), 
    .F1(n135), .Q1(cnt_30), .FCO(n4014));
  SLICE_115 SLICE_115( .A1(cnt_22), .A0(cnt_21), .DI1(n143), .DI0(n144), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4009), .F0(n144), .Q0(cnt_21), 
    .F1(n143), .Q1(cnt_22), .FCO(n4010));
  SLICE_116 SLICE_116( .A1(cnt_20), .A0(cnt_19), .DI1(n145), .DI0(n146), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4008), .F0(n146), .Q0(cnt_19), 
    .F1(n145), .Q1(cnt_20), .FCO(n4009));
  SLICE_117 SLICE_117( .A1(cnt_18), .A0(cnt_17), .DI1(n147), .DI0(n148), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4007), .F0(n148), .Q0(cnt_17), 
    .F1(n147), .Q1(cnt_18), .FCO(n4008));
  SLICE_118 SLICE_118( .A1(cnt_16), .A0(cnt_15), .DI1(n149), .DI0(n150), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4006), .F0(n150), .Q0(cnt_15), 
    .F1(n149), .Q1(cnt_16), .FCO(n4007));
  SLICE_119 SLICE_119( .A1(cnt_14), .A0(cnt_13), .DI1(n151), .DI0(n152), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4005), .F0(n152), .Q0(cnt_13), 
    .F1(n151), .Q1(cnt_14), .FCO(n4006));
  SLICE_120 SLICE_120( .A1(cnt_12), .A0(cnt_11), .DI1(n153), .DI0(n154), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4004), .F0(n154), .Q0(cnt_11), 
    .F1(n153), .Q1(cnt_12), .FCO(n4005));
  SLICE_121 SLICE_121( .A1(n96), .A0(n97), .DI1(n87_N_179_8), 
    .DI0(n87_N_179_7), .CLK(clk_c), .FCI(n3858), .F0(n87_N_179_7), .Q0(n97), 
    .F1(n87_N_179_8), .Q1(n96), .FCO(n3859));
  SLICE_122 SLICE_122( .A1(n98), .A0(n99), .DI1(n87_N_179_6), 
    .DI0(n87_N_179_5), .CLK(clk_c), .FCI(n3857), .F0(n87_N_179_5), .Q0(n99), 
    .F1(n87_N_179_6), .Q1(n98), .FCO(n3858));
  SLICE_123 SLICE_123( .A1(n100), .A0(n101), .DI1(n87_N_179_4), 
    .DI0(n87_N_179_3), .CLK(clk_c), .FCI(n3856), .F0(n87_N_179_3), .Q0(n101), 
    .F1(n87_N_179_4), .Q1(n100), .FCO(n3857));
  SLICE_124 SLICE_124( .A1(n102), .A0(n103), .DI1(n87_N_179_2), 
    .DI0(n87_N_179_1), .CLK(clk_c), .FCI(n3855), .F0(n87_N_179_1), .Q0(n103), 
    .F1(n87_N_179_2), .Q1(n102), .FCO(n3856));
  SLICE_125 SLICE_125( .A1(COUNT1_8), .A0(COUNT1_7), .DI1(COUNT1_17_N_290_8), 
    .DI0(COUNT1_17_N_290_7), .LSR(brightness_in_c), .CLK(clk_c), .FCI(n3885), 
    .F0(COUNT1_17_N_290_7), .Q0(COUNT1_7), .F1(COUNT1_17_N_290_8), 
    .Q1(COUNT1_8), .FCO(n3886));
  SLICE_126 SLICE_126( .A1(COUNT1_6), .A0(COUNT1_5), .DI1(COUNT1_17_N_290_6), 
    .DI0(COUNT1_17_N_290_5), .LSR(brightness_in_c), .CLK(clk_c), .FCI(n3884), 
    .F0(COUNT1_17_N_290_5), .Q0(COUNT1_5), .F1(COUNT1_17_N_290_6), 
    .Q1(COUNT1_6), .FCO(n3885));
  SLICE_127 SLICE_127( .A1(COUNT1_4), .A0(COUNT1_3), .DI1(COUNT1_17_N_290_4), 
    .DI0(COUNT1_17_N_290_3), .LSR(brightness_in_c), .CLK(clk_c), .FCI(n3883), 
    .F0(COUNT1_17_N_290_3), .Q0(COUNT1_3), .F1(COUNT1_17_N_290_4), 
    .Q1(COUNT1_4), .FCO(n3884));
  SLICE_128 SLICE_128( .A1(COUNT1_2), .A0(COUNT1_1), .DI1(COUNT1_17_N_290_2), 
    .DI0(COUNT1_17_N_290_1), .LSR(brightness_in_c), .CLK(clk_c), .FCI(n3882), 
    .F0(COUNT1_17_N_290_1), .Q0(COUNT1_1), .F1(COUNT1_17_N_290_2), 
    .Q1(COUNT1_2), .FCO(n3883));
  SLICE_129 SLICE_129( .C1(COUNT1_0), .B1(n3676), .A1(n4047), 
    .DI1(COUNT1_17_N_290_0), .LSR(brightness_in_c), .CLK(clk_c), 
    .F1(COUNT1_17_N_290_0), .Q1(COUNT1_0), .FCO(n3882));
  SLICE_130 SLICE_130( .A0(n293), .DI0(n293_N_253_17), .LSR(speed_down_in_c), 
    .CLK(clk_c), .FCI(n3881), .F0(n293_N_253_17), .Q0(n293));
  SLICE_131 SLICE_131( .A1(n294), .A0(n295), .DI1(n293_N_253_16), 
    .DI0(n293_N_253_15), .LSR(speed_down_in_c), .CLK(clk_c), .FCI(n3880), 
    .F0(n293_N_253_15), .Q0(n295), .F1(n293_N_253_16), .Q1(n294), .FCO(n3881));
  SLICE_132 SLICE_132( .A1(n296), .A0(n297), .DI1(n293_N_253_14), 
    .DI0(n293_N_253_13), .LSR(speed_down_in_c), .CLK(clk_c), .FCI(n3879), 
    .F0(n293_N_253_13), .Q0(n297), .F1(n293_N_253_14), .Q1(n296), .FCO(n3880));
  SLICE_133 SLICE_133( .B1(cur2_15), .A1(cur1_15), .B0(cur1_14), .A0(cur2_14), 
    .FCI(n3911), .FCO(n3912));
  SLICE_134 SLICE_134( .B1(cur2_13), .A1(cur1_13), .B0(cur1_12), .A0(cur2_12), 
    .FCI(n3910), .FCO(n3911));
  SLICE_135 SLICE_135( .B1(cur2_11), .A1(cur1_11), .B0(cur2_10), .A0(cur1_10), 
    .FCI(n3909), .FCO(n3910));
  SLICE_136 SLICE_136( .B1(cur2_9), .A1(cur1_9), .B0(cur1_8), .A0(cur2_8), 
    .FCI(n3908), .FCO(n3909));
  SLICE_137 SLICE_137( .B1(cur1_11), .A1(n1044), .B0(n1045), .A0(cur1_10), 
    .FCI(n3924), .FCO(n3925));
  SLICE_138 SLICE_138( .B1(n1046), .A1(cur1_9), .B0(cur1_8), .A0(n1047), 
    .FCI(n3923), .FCO(n3924));
  SLICE_139 SLICE_139( .B1(cur1_25), .A1(n1030), .B0(n1031), .A0(cur1_24), 
    .FCI(n3931), .FCO(n3932));
  SLICE_140 SLICE_140( .B1(Cycle_period_22), .A1(cnt_22), .B0(Cycle_period_21), 
    .A0(cnt_21), .FCI(n3970), .FCO(n3971));
  SLICE_141 SLICE_141( .B1(Cycle_period_20), .A1(cnt_20), .B0(cnt_19), 
    .A0(Cycle_period_19), .FCI(n3969), .FCO(n3970));
  SLICE_142 SLICE_142( .B1(cnt_18), .A1(Cycle_period_18), .B0(Cycle_period_17), 
    .A0(cnt_17), .FCI(n3968), .FCO(n3969));
  SLICE_143 SLICE_143( .B1(Cycle_period_16), .A1(cnt_16), .B0(cnt_15), 
    .A0(Cycle_period_15), .FCI(n3967), .FCO(n3968));
  SLICE_144 SLICE_144( .B1(Cycle_period_14), .A1(cnt_14), .B0(Cycle_period_13), 
    .A0(cnt_13), .FCI(n3966), .FCO(n3967));
  SLICE_145 SLICE_145( .B1(Cycle_period_12), .A1(cnt_12), .B0(cnt_11), 
    .A0(Cycle_period_11), .FCI(n3965), .FCO(n3966));
  SLICE_146 SLICE_146( .A1(cnt_10), .A0(cnt_9), .DI1(n155), .DI0(n156), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4003), .F0(n156), .Q0(cnt_9), 
    .F1(n155), .Q1(cnt_10), .FCO(n4004));
  SLICE_147 SLICE_147( .A1(cnt_8), .A0(cnt_7), .DI1(n157), .DI0(n158), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4002), .F0(n158), .Q0(cnt_7), 
    .F1(n157), .Q1(cnt_8), .FCO(n4003));
  SLICE_148 SLICE_148( .B1(cnt_10), .A1(Cycle_period_10), .B0(Cycle_period_9), 
    .A0(cnt_9), .FCI(n3964), .FCO(n3965));
  SLICE_149 SLICE_149( .A1(cnt_6), .A0(cnt_5), .DI1(n159), .DI0(n160), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4001), .F0(n160), .Q0(cnt_5), 
    .F1(n159), .Q1(cnt_6), .FCO(n4002));
  SLICE_150 SLICE_150( .A1(cnt_4), .A0(cnt_3), .DI1(n161), .DI0(n162), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n4000), .F0(n162), .Q0(cnt_3), 
    .F1(n161), .Q1(cnt_4), .FCO(n4001));
  SLICE_151 SLICE_151( .A1(cnt_2), .A0(cnt_1), .DI1(n163), .DI0(n164), 
    .LSR(cnt_31__N_437), .CLK(clk_c), .FCI(n3999), .F0(n164), .Q0(cnt_1), 
    .F1(n163), .Q1(cnt_2), .FCO(n4000));
  SLICE_152 SLICE_152( .A1(cnt_0), .DI1(n165), .LSR(cnt_31__N_437), 
    .CLK(clk_c), .F1(n165), .Q1(cnt_0), .FCO(n3999));
  SLICE_153 SLICE_153( .B0(Cycle_period_31), .FCI(n3998), .F1(n2445));
  SLICE_154 SLICE_154( .B1(cnt_8), .A1(Cycle_period_8), .B0(cnt_7), 
    .A0(Cycle_period_7), .FCI(n3963), .FCO(n3964));
  SLICE_155 SLICE_155( .B1(cnt_6), .A1(Cycle_period_6), .FCO(n3963));
  SLICE_156 SLICE_156( .B0(speed_up), .A0(Cycle_period_31), .DI0(n2135), 
    .CE(clk_c_enable_33), .LSR(n3326), .CLK(clk_c), .FCI(n3962), .F0(n2135), 
    .Q0(Cycle_period_31));
  SLICE_157 SLICE_157( .B1(speed_up), .A1(Cycle_period_30), .B0(speed_up), 
    .A0(Cycle_period_29), .DI1(n2136), .DI0(n2137), .CE(clk_c_enable_33), 
    .LSR(n3326), .CLK(clk_c), .FCI(n3961), .F0(n2137), .Q0(Cycle_period_29), 
    .F1(n2136), .Q1(Cycle_period_30), .FCO(n3962));
  SLICE_158 SLICE_158( .B1(speed_up), .A1(Cycle_period_28), .B0(speed_up), 
    .A0(Cycle_period_27), .DI1(n2138), .DI0(n2139), .CE(clk_c_enable_33), 
    .LSR(n3326), .CLK(clk_c), .FCI(n3960), .F0(n2139), .Q0(Cycle_period_27), 
    .F1(n2138), .Q1(Cycle_period_28), .FCO(n3961));
  SLICE_159 SLICE_159( .B1(speed_up), .A1(Cycle_period_26), .B0(speed_up), 
    .A0(Cycle_period_25), .DI1(n2140), .CE(clk_c_enable_33), .LSR(n3326), 
    .CLK(clk_c), .FCI(n3959), .F0(n2141), .F1(n2140), .Q1(Cycle_period_26), 
    .FCO(n3960));
  SLICE_160 SLICE_160( .B1(Cycle_period_24), .A1(speed_up), .B0(speed_up), 
    .A0(Cycle_period_23), .FCI(n3958), .F0(n2143), .F1(n2142), .FCO(n3959));
  SLICE_161 SLICE_161( .FCO(mult_31s_19s_0_cin_lr_2));
  SLICE_162 SLICE_162( .FCO(mult_31s_19s_0_cin_lr_4));
  SLICE_163 SLICE_163( .FCO(mult_31s_19s_0_cin_lr_6));
  SLICE_164 SLICE_164( .FCO(mult_31s_19s_0_cin_lr_8));
  SLICE_165 SLICE_165( .FCO(mult_31s_19s_0_cin_lr_10));
  SLICE_166 SLICE_166( .FCO(mult_31s_19s_0_cin_lr_12));
  SLICE_167 SLICE_167( .FCO(mult_31s_19s_0_cin_lr_14));
  SLICE_168 SLICE_168( .FCO(mult_31s_19s_0_cin_lr_16));
  SLICE_169 SLICE_169( .D1(mult_31s_19s_0_pp_0_2), .FCO(co_mult_31s_19s_0_0_1));
  SLICE_170 SLICE_170( .D1(mult_31s_19s_0_pp_1_4), .A1(mult_31s_19s_0_pp_0_4), 
    .D0(mult_31s_19s_0_pp_0_3), .B0(mult_31s_19s_0_pp_1_3), 
    .FCI(co_mult_31s_19s_0_0_1), .F0(n1052), .F1(s_mult_31s_19s_0_0_4), 
    .FCO(co_mult_31s_19s_0_0_2));
  SLICE_171 SLICE_171( .D1(mult_31s_19s_0_pp_1_6), .A1(mult_31s_19s_0_pp_0_6), 
    .D0(mult_31s_19s_0_pp_0_5), .A0(mult_31s_19s_0_pp_1_5), 
    .FCI(co_mult_31s_19s_0_0_2), .F0(s_mult_31s_19s_0_0_5), 
    .F1(s_mult_31s_19s_0_0_6), .FCO(co_mult_31s_19s_0_0_3));
  SLICE_172 SLICE_172( .D1(mult_31s_19s_0_pp_0_8), .B1(mult_31s_19s_0_pp_1_8), 
    .D0(mult_31s_19s_0_pp_1_7), .B0(mult_31s_19s_0_pp_0_7), 
    .FCI(co_mult_31s_19s_0_0_3), .F0(s_mult_31s_19s_0_0_7), 
    .F1(s_mult_31s_19s_0_0_8), .FCO(co_mult_31s_19s_0_0_4));
  SLICE_173 SLICE_173( .D1(mult_31s_19s_0_pp_0_10), 
    .A1(mult_31s_19s_0_pp_1_10), .D0(mult_31s_19s_0_pp_0_9), 
    .B0(mult_31s_19s_0_pp_1_9), .FCI(co_mult_31s_19s_0_0_4), 
    .F0(s_mult_31s_19s_0_0_9), .F1(s_mult_31s_19s_0_0_10), 
    .FCO(co_mult_31s_19s_0_0_5));
  SLICE_174 SLICE_174( .D1(mult_31s_19s_0_pp_0_12), 
    .B1(mult_31s_19s_0_pp_1_12), .D0(mult_31s_19s_0_pp_1_11), 
    .A0(mult_31s_19s_0_pp_0_11), .FCI(co_mult_31s_19s_0_0_5), 
    .F0(s_mult_31s_19s_0_0_11), .F1(s_mult_31s_19s_0_0_12), 
    .FCO(co_mult_31s_19s_0_0_6));
  SLICE_175 SLICE_175( .D1(mult_31s_19s_0_pp_0_14), 
    .A1(mult_31s_19s_0_pp_1_14), .D0(mult_31s_19s_0_pp_0_13), 
    .A0(mult_31s_19s_0_pp_1_13), .FCI(co_mult_31s_19s_0_0_6), 
    .F0(s_mult_31s_19s_0_0_13), .F1(s_mult_31s_19s_0_0_14), 
    .FCO(co_mult_31s_19s_0_0_7));
  SLICE_176 SLICE_176( .D1(mult_31s_19s_0_pp_1_16), 
    .B1(mult_31s_19s_0_pp_0_16), .D0(mult_31s_19s_0_pp_0_15), 
    .B0(mult_31s_19s_0_pp_1_15), .FCI(co_mult_31s_19s_0_0_7), 
    .F0(s_mult_31s_19s_0_0_15), .F1(s_mult_31s_19s_0_0_16), 
    .FCO(co_mult_31s_19s_0_0_8));
  SLICE_177 SLICE_177( .D1(mult_31s_19s_0_pp_0_18), 
    .A1(mult_31s_19s_0_pp_1_18), .D0(mult_31s_19s_0_pp_0_17), 
    .B0(mult_31s_19s_0_pp_1_17), .FCI(co_mult_31s_19s_0_0_8), 
    .F0(s_mult_31s_19s_0_0_17), .F1(s_mult_31s_19s_0_0_18), 
    .FCO(co_mult_31s_19s_0_0_9));
  SLICE_178 SLICE_178( .D1(mult_31s_19s_0_pp_0_20), 
    .B1(mult_31s_19s_0_pp_1_20), .B0(mult_31s_19s_0_pp_1_19), 
    .A0(mult_31s_19s_0_pp_0_19), .FCI(co_mult_31s_19s_0_0_9), 
    .F0(s_mult_31s_19s_0_0_19), .F1(s_mult_31s_19s_0_0_20), 
    .FCO(co_mult_31s_19s_0_0_10));
  SLICE_179 SLICE_179( .D1(mult_31s_19s_0_pp_1_22), 
    .A1(mult_31s_19s_0_pp_0_22), .D0(mult_31s_19s_0_pp_0_21), 
    .A0(mult_31s_19s_0_pp_1_21), .FCI(co_mult_31s_19s_0_0_10), 
    .F0(s_mult_31s_19s_0_0_21), .F1(s_mult_31s_19s_0_0_22), 
    .FCO(co_mult_31s_19s_0_0_11));
  SLICE_180 SLICE_180( .D1(mult_31s_19s_0_pp_0_24), 
    .A1(mult_31s_19s_0_pp_1_24), .D0(mult_31s_19s_0_pp_1_23), 
    .B0(mult_31s_19s_0_pp_0_23), .FCI(co_mult_31s_19s_0_0_11), 
    .F0(s_mult_31s_19s_0_0_23), .F1(s_mult_31s_19s_0_0_24), 
    .FCO(co_mult_31s_19s_0_0_12));
  SLICE_181 SLICE_181( .D1(mult_31s_19s_0_pp_1_26), 
    .A1(mult_31s_19s_0_pp_0_26), .D0(mult_31s_19s_0_pp_0_25), 
    .B0(mult_31s_19s_0_pp_1_25), .FCI(co_mult_31s_19s_0_0_12), 
    .F0(s_mult_31s_19s_0_0_25), .F1(s_mult_31s_19s_0_0_26), 
    .FCO(co_mult_31s_19s_0_0_13));
  SLICE_182 SLICE_182( .D1(mult_31s_19s_0_pp_1_28), 
    .B1(mult_31s_19s_0_pp_0_28), .D0(mult_31s_19s_0_pp_1_27), 
    .A0(mult_31s_19s_0_pp_0_27), .FCI(co_mult_31s_19s_0_0_13), 
    .F0(s_mult_31s_19s_0_0_27), .F1(s_mult_31s_19s_0_0_28), 
    .FCO(co_mult_31s_19s_0_0_14));
  SLICE_183 SLICE_183( .D1(mult_31s_19s_0_pp_1_30), 
    .A1(mult_31s_19s_0_pp_0_30), .D0(mult_31s_19s_0_pp_0_29), 
    .A0(mult_31s_19s_0_pp_1_29), .FCI(co_mult_31s_19s_0_0_14), 
    .F0(s_mult_31s_19s_0_0_29), .F1(s_mult_31s_19s_0_0_30), 
    .FCO(co_mult_31s_19s_0_0_15));
  SLICE_184 SLICE_184( .D1(mult_31s_19s_0_pp_0_32), 
    .B1(mult_31s_19s_0_pp_1_32), .D0(mult_31s_19s_0_pp_0_31), 
    .A0(mult_31s_19s_0_pp_1_31), .FCI(co_mult_31s_19s_0_0_15), 
    .F0(s_mult_31s_19s_0_0_31), .F1(s_mult_31s_19s_0_0_32));
  SLICE_185 SLICE_185( .B1(speed_up), .A1(Cycle_period_22), .B0(speed_up), 
    .A0(Cycle_period_21), .DI1(n2144), .CE(clk_c_enable_33), .LSR(n3326), 
    .CLK(clk_c), .FCI(n3957), .F0(n2145), .F1(n2144), .Q1(Cycle_period_22), 
    .FCO(n3958));
  SLICE_186 SLICE_186( .B1(speed_up), .A1(Cycle_period_20), 
    .B0(Cycle_period_19), .A0(speed_up), .FCI(n3956), .F0(n2147), .F1(n2146), 
    .FCO(n3957));
  SLICE_187 SLICE_187( .A1(mult_31s_19s_0_pp_2_6), .F1(s_mult_31s_19s_0_1_6), 
    .FCO(co_mult_31s_19s_0_1_1));
  SLICE_188 SLICE_188( .D1(mult_31s_19s_0_pp_3_8), .B1(mult_31s_19s_0_pp_2_8), 
    .D0(mult_31s_19s_0_pp_2_7), .A0(mult_31s_19s_0_pp_3_7), 
    .FCI(co_mult_31s_19s_0_1_1), .F0(s_mult_31s_19s_0_1_7), 
    .F1(s_mult_31s_19s_0_1_8), .FCO(co_mult_31s_19s_0_1_2));
  SLICE_189 SLICE_189( .D1(mult_31s_19s_0_pp_3_10), 
    .A1(mult_31s_19s_0_pp_2_10), .D0(mult_31s_19s_0_pp_2_9), 
    .A0(mult_31s_19s_0_pp_3_9), .FCI(co_mult_31s_19s_0_1_2), 
    .F0(s_mult_31s_19s_0_1_9), .F1(s_mult_31s_19s_0_1_10), 
    .FCO(co_mult_31s_19s_0_1_3));
  SLICE_190 SLICE_190( .D1(mult_31s_19s_0_pp_2_12), 
    .A1(mult_31s_19s_0_pp_3_12), .D0(mult_31s_19s_0_pp_2_11), 
    .B0(mult_31s_19s_0_pp_3_11), .FCI(co_mult_31s_19s_0_1_3), 
    .F0(s_mult_31s_19s_0_1_11), .F1(s_mult_31s_19s_0_1_12), 
    .FCO(co_mult_31s_19s_0_1_4));
  SLICE_191 SLICE_191( .D1(mult_31s_19s_0_pp_2_14), 
    .A1(mult_31s_19s_0_pp_3_14), .D0(mult_31s_19s_0_pp_2_13), 
    .A0(mult_31s_19s_0_pp_3_13), .FCI(co_mult_31s_19s_0_1_4), 
    .F0(s_mult_31s_19s_0_1_13), .F1(s_mult_31s_19s_0_1_14), 
    .FCO(co_mult_31s_19s_0_1_5));
  SLICE_192 SLICE_192( .D1(mult_31s_19s_0_pp_2_16), 
    .A1(mult_31s_19s_0_pp_3_16), .D0(mult_31s_19s_0_pp_2_15), 
    .B0(mult_31s_19s_0_pp_3_15), .FCI(co_mult_31s_19s_0_1_5), 
    .F0(s_mult_31s_19s_0_1_15), .F1(s_mult_31s_19s_0_1_16), 
    .FCO(co_mult_31s_19s_0_1_6));
  SLICE_193 SLICE_193( .D1(mult_31s_19s_0_pp_2_18), 
    .A1(mult_31s_19s_0_pp_3_18), .D0(mult_31s_19s_0_pp_2_17), 
    .A0(mult_31s_19s_0_pp_3_17), .FCI(co_mult_31s_19s_0_1_6), 
    .F0(s_mult_31s_19s_0_1_17), .F1(s_mult_31s_19s_0_1_18), 
    .FCO(co_mult_31s_19s_0_1_7));
  SLICE_194 SLICE_194( .D1(mult_31s_19s_0_pp_2_20), 
    .A1(mult_31s_19s_0_pp_3_20), .D0(mult_31s_19s_0_pp_2_19), 
    .A0(mult_31s_19s_0_pp_3_19), .FCI(co_mult_31s_19s_0_1_7), 
    .F0(s_mult_31s_19s_0_1_19), .F1(s_mult_31s_19s_0_1_20), 
    .FCO(co_mult_31s_19s_0_1_8));
  SLICE_195 SLICE_195( .D1(mult_31s_19s_0_pp_2_22), 
    .A1(mult_31s_19s_0_pp_3_22), .D0(mult_31s_19s_0_pp_2_21), 
    .A0(mult_31s_19s_0_pp_3_21), .FCI(co_mult_31s_19s_0_1_8), 
    .F0(s_mult_31s_19s_0_1_21), .F1(s_mult_31s_19s_0_1_22), 
    .FCO(co_mult_31s_19s_0_1_9));
  SLICE_196 SLICE_196( .D1(mult_31s_19s_0_pp_2_24), 
    .B1(mult_31s_19s_0_pp_3_24), .D0(mult_31s_19s_0_pp_3_23), 
    .B0(mult_31s_19s_0_pp_2_23), .FCI(co_mult_31s_19s_0_1_9), 
    .F0(s_mult_31s_19s_0_1_23), .F1(s_mult_31s_19s_0_1_24), 
    .FCO(co_mult_31s_19s_0_1_10));
  SLICE_197 SLICE_197( .D1(mult_31s_19s_0_pp_3_26), 
    .A1(mult_31s_19s_0_pp_2_26), .D0(mult_31s_19s_0_pp_3_25), 
    .A0(mult_31s_19s_0_pp_2_25), .FCI(co_mult_31s_19s_0_1_10), 
    .F0(s_mult_31s_19s_0_1_25), .F1(s_mult_31s_19s_0_1_26), 
    .FCO(co_mult_31s_19s_0_1_11));
  SLICE_198 SLICE_198( .D1(mult_31s_19s_0_pp_2_28), 
    .A1(mult_31s_19s_0_pp_3_28), .D0(mult_31s_19s_0_pp_2_27), 
    .A0(mult_31s_19s_0_pp_3_27), .FCI(co_mult_31s_19s_0_1_11), 
    .F0(s_mult_31s_19s_0_1_27), .F1(s_mult_31s_19s_0_1_28), 
    .FCO(co_mult_31s_19s_0_1_12));
  SLICE_199 SLICE_199( .D1(mult_31s_19s_0_pp_2_30), 
    .A1(mult_31s_19s_0_pp_3_30), .D0(mult_31s_19s_0_pp_2_29), 
    .A0(mult_31s_19s_0_pp_3_29), .FCI(co_mult_31s_19s_0_1_12), 
    .F0(s_mult_31s_19s_0_1_29), .F1(s_mult_31s_19s_0_1_30), 
    .FCO(co_mult_31s_19s_0_1_13));
  SLICE_200 SLICE_200( .B1(mult_31s_19s_0_pp_2_32), 
    .A1(mult_31s_19s_0_pp_3_32), .D0(mult_31s_19s_0_pp_2_31), 
    .A0(mult_31s_19s_0_pp_3_31), .FCI(co_mult_31s_19s_0_1_13), 
    .F0(s_mult_31s_19s_0_1_31), .F1(s_mult_31s_19s_0_1_32));
  SLICE_201 SLICE_201( .B1(speed_up), .A1(Cycle_period_18), .B0(speed_up), 
    .A0(Cycle_period_17), .DI0(n2149), .CE(clk_c_enable_33), .LSR(n3326), 
    .CLK(clk_c), .FCI(n3955), .F0(n2149), .Q0(Cycle_period_17), .F1(n2148), 
    .FCO(n3956));
  SLICE_202 SLICE_202( .B1(speed_up), .A1(Cycle_period_16), .B0(speed_up), 
    .A0(Cycle_period_15), .DI1(n2150), .CE(clk_c_enable_33), .LSR(n3326), 
    .CLK(clk_c), .FCI(n3954), .F0(n2151), .F1(n2150), .Q1(Cycle_period_16), 
    .FCO(n3955));
  SLICE_203 SLICE_203( .A1(mult_31s_19s_0_pp_4_10), .F1(s_mult_31s_19s_0_2_10), 
    .FCO(co_mult_31s_19s_0_2_1));
  SLICE_204 SLICE_204( .D1(mult_31s_19s_0_pp_5_12), 
    .B1(mult_31s_19s_0_pp_4_12), .D0(mult_31s_19s_0_pp_4_11), 
    .A0(mult_31s_19s_0_pp_5_11), .FCI(co_mult_31s_19s_0_2_1), 
    .F0(s_mult_31s_19s_0_2_11), .F1(s_mult_31s_19s_0_2_12), 
    .FCO(co_mult_31s_19s_0_2_2));
  SLICE_205 SLICE_205( .D1(mult_31s_19s_0_pp_4_14), 
    .A1(mult_31s_19s_0_pp_5_14), .D0(mult_31s_19s_0_pp_5_13), 
    .A0(mult_31s_19s_0_pp_4_13), .FCI(co_mult_31s_19s_0_2_2), 
    .F0(s_mult_31s_19s_0_2_13), .F1(s_mult_31s_19s_0_2_14), 
    .FCO(co_mult_31s_19s_0_2_3));
  SLICE_206 SLICE_206( .B1(mult_31s_19s_0_pp_4_16), 
    .A1(mult_31s_19s_0_pp_5_16), .D0(mult_31s_19s_0_pp_4_15), 
    .A0(mult_31s_19s_0_pp_5_15), .FCI(co_mult_31s_19s_0_2_3), 
    .F0(s_mult_31s_19s_0_2_15), .F1(s_mult_31s_19s_0_2_16), 
    .FCO(co_mult_31s_19s_0_2_4));
  SLICE_207 SLICE_207( .D1(mult_31s_19s_0_pp_5_18), 
    .B1(mult_31s_19s_0_pp_4_18), .D0(mult_31s_19s_0_pp_5_17), 
    .B0(mult_31s_19s_0_pp_4_17), .FCI(co_mult_31s_19s_0_2_4), 
    .F0(s_mult_31s_19s_0_2_17), .F1(s_mult_31s_19s_0_2_18), 
    .FCO(co_mult_31s_19s_0_2_5));
  SLICE_208 SLICE_208( .D1(mult_31s_19s_0_pp_5_20), 
    .A1(mult_31s_19s_0_pp_4_20), .D0(mult_31s_19s_0_pp_4_19), 
    .A0(mult_31s_19s_0_pp_5_19), .FCI(co_mult_31s_19s_0_2_5), 
    .F0(s_mult_31s_19s_0_2_19), .F1(s_mult_31s_19s_0_2_20), 
    .FCO(co_mult_31s_19s_0_2_6));
  SLICE_209 SLICE_209( .D1(mult_31s_19s_0_pp_5_22), 
    .A1(mult_31s_19s_0_pp_4_22), .D0(mult_31s_19s_0_pp_5_21), 
    .B0(mult_31s_19s_0_pp_4_21), .FCI(co_mult_31s_19s_0_2_6), 
    .F0(s_mult_31s_19s_0_2_21), .F1(s_mult_31s_19s_0_2_22), 
    .FCO(co_mult_31s_19s_0_2_7));
  SLICE_210 SLICE_210( .D1(mult_31s_19s_0_pp_5_24), 
    .B1(mult_31s_19s_0_pp_4_24), .D0(mult_31s_19s_0_pp_5_23), 
    .A0(mult_31s_19s_0_pp_4_23), .FCI(co_mult_31s_19s_0_2_7), 
    .F0(s_mult_31s_19s_0_2_23), .F1(s_mult_31s_19s_0_2_24), 
    .FCO(co_mult_31s_19s_0_2_8));
  SLICE_211 SLICE_211( .D1(mult_31s_19s_0_pp_5_26), 
    .A1(mult_31s_19s_0_pp_4_26), .D0(mult_31s_19s_0_pp_5_25), 
    .B0(mult_31s_19s_0_pp_4_25), .FCI(co_mult_31s_19s_0_2_8), 
    .F0(s_mult_31s_19s_0_2_25), .F1(s_mult_31s_19s_0_2_26), 
    .FCO(co_mult_31s_19s_0_2_9));
  SLICE_212 SLICE_212( .D1(mult_31s_19s_0_pp_5_28), 
    .B1(mult_31s_19s_0_pp_4_28), .D0(mult_31s_19s_0_pp_4_27), 
    .A0(mult_31s_19s_0_pp_5_27), .FCI(co_mult_31s_19s_0_2_9), 
    .F0(s_mult_31s_19s_0_2_27), .F1(s_mult_31s_19s_0_2_28), 
    .FCO(co_mult_31s_19s_0_2_10));
  SLICE_213 SLICE_213( .D1(mult_31s_19s_0_pp_4_30), 
    .A1(mult_31s_19s_0_pp_5_30), .D0(mult_31s_19s_0_pp_4_29), 
    .A0(mult_31s_19s_0_pp_5_29), .FCI(co_mult_31s_19s_0_2_10), 
    .F0(s_mult_31s_19s_0_2_29), .F1(s_mult_31s_19s_0_2_30), 
    .FCO(co_mult_31s_19s_0_2_11));
  SLICE_214 SLICE_214( .B1(mult_31s_19s_0_pp_4_32), 
    .A1(mult_31s_19s_0_pp_5_32), .D0(mult_31s_19s_0_pp_5_31), 
    .B0(mult_31s_19s_0_pp_4_31), .FCI(co_mult_31s_19s_0_2_11), 
    .F0(s_mult_31s_19s_0_2_31), .F1(s_mult_31s_19s_0_2_32));
  SLICE_215 SLICE_215( .D1(mult_31s_19s_0_pp_6_14), .F1(s_mult_31s_19s_0_3_14), 
    .FCO(co_mult_31s_19s_0_3_1));
  SLICE_216 SLICE_216( .D1(mult_31s_19s_0_pp_6_16), 
    .B1(mult_31s_19s_0_pp_7_16), .D0(mult_31s_19s_0_pp_6_15), 
    .A0(mult_31s_19s_0_pp_7_15), .FCI(co_mult_31s_19s_0_3_1), 
    .F0(s_mult_31s_19s_0_3_15), .F1(s_mult_31s_19s_0_3_16), 
    .FCO(co_mult_31s_19s_0_3_2));
  SLICE_217 SLICE_217( .D1(mult_31s_19s_0_pp_6_18), 
    .A1(mult_31s_19s_0_pp_7_18), .D0(mult_31s_19s_0_pp_6_17), 
    .A0(mult_31s_19s_0_pp_7_17), .FCI(co_mult_31s_19s_0_3_2), 
    .F0(s_mult_31s_19s_0_3_17), .F1(s_mult_31s_19s_0_3_18), 
    .FCO(co_mult_31s_19s_0_3_3));
  SLICE_218 SLICE_218( .D1(mult_31s_19s_0_pp_6_20), 
    .B1(mult_31s_19s_0_pp_7_20), .D0(mult_31s_19s_0_pp_6_19), 
    .A0(mult_31s_19s_0_pp_7_19), .FCI(co_mult_31s_19s_0_3_3), 
    .F0(s_mult_31s_19s_0_3_19), .F1(s_mult_31s_19s_0_3_20), 
    .FCO(co_mult_31s_19s_0_3_4));
  SLICE_219 SLICE_219( .D1(mult_31s_19s_0_pp_6_22), 
    .A1(mult_31s_19s_0_pp_7_22), .D0(mult_31s_19s_0_pp_6_21), 
    .A0(mult_31s_19s_0_pp_7_21), .FCI(co_mult_31s_19s_0_3_4), 
    .F0(s_mult_31s_19s_0_3_21), .F1(s_mult_31s_19s_0_3_22), 
    .FCO(co_mult_31s_19s_0_3_5));
  SLICE_220 SLICE_220( .D1(mult_31s_19s_0_pp_6_24), 
    .B1(mult_31s_19s_0_pp_7_24), .D0(mult_31s_19s_0_pp_7_23), 
    .A0(mult_31s_19s_0_pp_6_23), .FCI(co_mult_31s_19s_0_3_5), 
    .F0(s_mult_31s_19s_0_3_23), .F1(s_mult_31s_19s_0_3_24), 
    .FCO(co_mult_31s_19s_0_3_6));
  SLICE_221 SLICE_221( .D1(mult_31s_19s_0_pp_6_26), 
    .A1(mult_31s_19s_0_pp_7_26), .D0(mult_31s_19s_0_pp_6_25), 
    .A0(mult_31s_19s_0_pp_7_25), .FCI(co_mult_31s_19s_0_3_6), 
    .F0(s_mult_31s_19s_0_3_25), .F1(s_mult_31s_19s_0_3_26), 
    .FCO(co_mult_31s_19s_0_3_7));
  SLICE_222 SLICE_222( .D1(mult_31s_19s_0_pp_6_28), 
    .A1(mult_31s_19s_0_pp_7_28), .D0(mult_31s_19s_0_pp_7_27), 
    .A0(mult_31s_19s_0_pp_6_27), .FCI(co_mult_31s_19s_0_3_7), 
    .F0(s_mult_31s_19s_0_3_27), .F1(s_mult_31s_19s_0_3_28), 
    .FCO(co_mult_31s_19s_0_3_8));
  SLICE_223 SLICE_223( .D1(mult_31s_19s_0_pp_6_30), 
    .A1(mult_31s_19s_0_pp_7_30), .D0(mult_31s_19s_0_pp_6_29), 
    .A0(mult_31s_19s_0_pp_7_29), .FCI(co_mult_31s_19s_0_3_8), 
    .F0(s_mult_31s_19s_0_3_29), .F1(s_mult_31s_19s_0_3_30), 
    .FCO(co_mult_31s_19s_0_3_9));
  SLICE_224 SLICE_224( .D1(mult_31s_19s_0_pp_6_32), 
    .A1(mult_31s_19s_0_pp_7_32), .D0(mult_31s_19s_0_pp_6_31), 
    .B0(mult_31s_19s_0_pp_7_31), .FCI(co_mult_31s_19s_0_3_9), 
    .F0(s_mult_31s_19s_0_3_31), .F1(s_mult_31s_19s_0_3_32));
  SLICE_225 SLICE_225( .B1(Cycle_period_14), .A1(speed_up), .B0(speed_up), 
    .A0(Cycle_period_13), .DI0(n2153), .CE(clk_c_enable_33), .LSR(n3326), 
    .CLK(clk_c), .FCI(n3953), .F0(n2153), .Q0(Cycle_period_13), .F1(n2152), 
    .FCO(n3954));
  SLICE_226 SLICE_226( .B1(speed_up), .A1(Cycle_period_12), 
    .B0(Cycle_period_11), .A0(speed_up), .FCI(n3952), .F0(n2155), .F1(n2154), 
    .FCO(n3953));
  SLICE_227 SLICE_227( .B1(speed_up), .A1(Cycle_period_10), .B0(speed_up), 
    .A0(Cycle_period_9), .DI0(n2157), .CE(clk_c_enable_33), .LSR(n3326), 
    .CLK(clk_c), .FCI(n3951), .F0(n2157), .Q0(Cycle_period_9), .F1(n2156), 
    .FCO(n3952));
  SLICE_228 SLICE_228( .B1(speed_up), .A1(Cycle_period_8), .B0(speed_up), 
    .A0(Cycle_period_7), .DI0(n2159), .CE(clk_c_enable_33), .LSR(n3326), 
    .CLK(clk_c), .FCI(n3950), .F0(n2159), .Q0(Cycle_period_7), .F1(n2158), 
    .FCO(n3951));
  SLICE_229 SLICE_229( .D1(mult_31s_19s_0_pp_8_18), .F1(s_mult_31s_19s_0_4_18), 
    .FCO(co_mult_31s_19s_0_4_1));
  SLICE_230 SLICE_230( .D1(mult_31s_19s_0_pp_8_20), 
    .D0(mult_31s_19s_0_pp_8_19), .FCI(co_mult_31s_19s_0_4_1), 
    .F0(s_mult_31s_19s_0_4_19), .F1(s_mult_31s_19s_0_4_20), 
    .FCO(co_mult_31s_19s_0_4_2));
  SLICE_231 SLICE_231( .D1(mult_31s_19s_0_pp_8_22), 
    .D0(mult_31s_19s_0_pp_8_21), .FCI(co_mult_31s_19s_0_4_2), 
    .F0(s_mult_31s_19s_0_4_21), .F1(s_mult_31s_19s_0_4_22), 
    .FCO(co_mult_31s_19s_0_4_3));
  SLICE_232 SLICE_232( .D1(mult_31s_19s_0_pp_8_24), 
    .A0(mult_31s_19s_0_pp_8_23), .FCI(co_mult_31s_19s_0_4_3), 
    .F0(s_mult_31s_19s_0_4_23), .F1(s_mult_31s_19s_0_4_24), 
    .FCO(co_mult_31s_19s_0_4_4));
  SLICE_233 SLICE_233( .D1(mult_31s_19s_0_pp_8_26), 
    .D0(mult_31s_19s_0_pp_8_25), .FCI(co_mult_31s_19s_0_4_4), 
    .F0(s_mult_31s_19s_0_4_25), .F1(s_mult_31s_19s_0_4_26), 
    .FCO(co_mult_31s_19s_0_4_5));
  SLICE_234 SLICE_234( .D1(mult_31s_19s_0_pp_8_28), 
    .D0(mult_31s_19s_0_pp_8_27), .FCI(co_mult_31s_19s_0_4_5), 
    .F0(s_mult_31s_19s_0_4_27), .F1(s_mult_31s_19s_0_4_28), 
    .FCO(co_mult_31s_19s_0_4_6));
  SLICE_235 SLICE_235( .D1(mult_31s_19s_0_pp_8_30), 
    .D0(mult_31s_19s_0_pp_8_29), .FCI(co_mult_31s_19s_0_4_6), 
    .F0(s_mult_31s_19s_0_4_29), .F1(s_mult_31s_19s_0_4_30), 
    .FCO(co_mult_31s_19s_0_4_7));
  SLICE_236 SLICE_236( .D1(mult_31s_19s_0_pp_8_32), 
    .D0(mult_31s_19s_0_pp_8_31), .FCI(co_mult_31s_19s_0_4_7), 
    .F0(s_mult_31s_19s_0_4_31), .F1(s_mult_31s_19s_0_4_32));
  SLICE_237 SLICE_237( .B1(speed_up), .A1(Cycle_period_6), .A0(speed_up), 
    .F1(n2160), .FCO(n3950));
  SLICE_238 SLICE_238( .D1(s_mult_31s_19s_0_0_4), .F1(n1051), 
    .FCO(co_mult_31s_19s_0_5_1));
  SLICE_239 SLICE_239( .D1(s_mult_31s_19s_0_0_6), .A1(s_mult_31s_19s_0_1_6), 
    .D0(s_mult_31s_19s_0_0_5), .A0(mult_31s_19s_0_pp_2_5), 
    .FCI(co_mult_31s_19s_0_5_1), .F0(n1050), .F1(n1049), 
    .FCO(co_mult_31s_19s_0_5_2));
  SLICE_240 SLICE_240( .D1(s_mult_31s_19s_0_0_8), .B1(s_mult_31s_19s_0_1_8), 
    .D0(s_mult_31s_19s_0_0_7), .B0(s_mult_31s_19s_0_1_7), 
    .FCI(co_mult_31s_19s_0_5_2), .F0(n1048), .F1(s_mult_31s_19s_0_5_8), 
    .FCO(co_mult_31s_19s_0_5_3));
  SLICE_241 SLICE_241( .D1(s_mult_31s_19s_0_0_10), .B1(s_mult_31s_19s_0_1_10), 
    .D0(s_mult_31s_19s_0_0_9), .B0(s_mult_31s_19s_0_1_9), 
    .FCI(co_mult_31s_19s_0_5_3), .F0(s_mult_31s_19s_0_5_9), 
    .F1(s_mult_31s_19s_0_5_10), .FCO(co_mult_31s_19s_0_5_4));
  SLICE_242 SLICE_242( .D1(s_mult_31s_19s_0_0_12), .A1(s_mult_31s_19s_0_1_12), 
    .D0(s_mult_31s_19s_0_0_11), .A0(s_mult_31s_19s_0_1_11), 
    .FCI(co_mult_31s_19s_0_5_4), .F0(s_mult_31s_19s_0_5_11), 
    .F1(s_mult_31s_19s_0_5_12), .FCO(co_mult_31s_19s_0_5_5));
  SLICE_243 SLICE_243( .D1(s_mult_31s_19s_0_0_14), .B1(s_mult_31s_19s_0_1_14), 
    .D0(s_mult_31s_19s_0_1_13), .B0(s_mult_31s_19s_0_0_13), 
    .FCI(co_mult_31s_19s_0_5_5), .F0(s_mult_31s_19s_0_5_13), 
    .F1(s_mult_31s_19s_0_5_14), .FCO(co_mult_31s_19s_0_5_6));
  SLICE_244 SLICE_244( .D1(s_mult_31s_19s_0_1_16), .A1(s_mult_31s_19s_0_0_16), 
    .D0(s_mult_31s_19s_0_0_15), .B0(s_mult_31s_19s_0_1_15), 
    .FCI(co_mult_31s_19s_0_5_6), .F0(s_mult_31s_19s_0_5_15), 
    .F1(s_mult_31s_19s_0_5_16), .FCO(co_mult_31s_19s_0_5_7));
  SLICE_245 SLICE_245( .D1(s_mult_31s_19s_0_0_18), .B1(s_mult_31s_19s_0_1_18), 
    .D0(s_mult_31s_19s_0_1_17), .B0(s_mult_31s_19s_0_0_17), 
    .FCI(co_mult_31s_19s_0_5_7), .F0(s_mult_31s_19s_0_5_17), 
    .F1(s_mult_31s_19s_0_5_18), .FCO(co_mult_31s_19s_0_5_8));
  SLICE_246 SLICE_246( .D1(s_mult_31s_19s_0_0_20), .A1(s_mult_31s_19s_0_1_20), 
    .D0(s_mult_31s_19s_0_0_19), .A0(s_mult_31s_19s_0_1_19), 
    .FCI(co_mult_31s_19s_0_5_8), .F0(s_mult_31s_19s_0_5_19), 
    .F1(s_mult_31s_19s_0_5_20), .FCO(co_mult_31s_19s_0_5_9));
  SLICE_247 SLICE_247( .D1(s_mult_31s_19s_0_0_22), .B1(s_mult_31s_19s_0_1_22), 
    .D0(s_mult_31s_19s_0_0_21), .A0(s_mult_31s_19s_0_1_21), 
    .FCI(co_mult_31s_19s_0_5_9), .F0(s_mult_31s_19s_0_5_21), 
    .F1(s_mult_31s_19s_0_5_22), .FCO(co_mult_31s_19s_0_5_10));
  SLICE_248 SLICE_248( .D1(s_mult_31s_19s_0_0_24), .B1(s_mult_31s_19s_0_1_24), 
    .D0(s_mult_31s_19s_0_1_23), .A0(s_mult_31s_19s_0_0_23), 
    .FCI(co_mult_31s_19s_0_5_10), .F0(s_mult_31s_19s_0_5_23), 
    .F1(s_mult_31s_19s_0_5_24), .FCO(co_mult_31s_19s_0_5_11));
  SLICE_249 SLICE_249( .D1(s_mult_31s_19s_0_0_26), .B1(s_mult_31s_19s_0_1_26), 
    .D0(s_mult_31s_19s_0_1_25), .B0(s_mult_31s_19s_0_0_25), 
    .FCI(co_mult_31s_19s_0_5_11), .F0(s_mult_31s_19s_0_5_25), 
    .F1(s_mult_31s_19s_0_5_26), .FCO(co_mult_31s_19s_0_5_12));
  SLICE_250 SLICE_250( .D1(s_mult_31s_19s_0_0_28), .A1(s_mult_31s_19s_0_1_28), 
    .D0(s_mult_31s_19s_0_0_27), .A0(s_mult_31s_19s_0_1_27), 
    .FCI(co_mult_31s_19s_0_5_12), .F0(s_mult_31s_19s_0_5_27), 
    .F1(s_mult_31s_19s_0_5_28), .FCO(co_mult_31s_19s_0_5_13));
  SLICE_251 SLICE_251( .D1(s_mult_31s_19s_0_0_30), .B1(s_mult_31s_19s_0_1_30), 
    .D0(s_mult_31s_19s_0_1_29), .B0(s_mult_31s_19s_0_0_29), 
    .FCI(co_mult_31s_19s_0_5_13), .F0(s_mult_31s_19s_0_5_29), 
    .F1(s_mult_31s_19s_0_5_30), .FCO(co_mult_31s_19s_0_5_14));
  SLICE_252 SLICE_252( .D1(s_mult_31s_19s_0_1_32), .A1(s_mult_31s_19s_0_0_32), 
    .D0(s_mult_31s_19s_0_0_31), .B0(s_mult_31s_19s_0_1_31), 
    .FCI(co_mult_31s_19s_0_5_14), .F0(s_mult_31s_19s_0_5_31), 
    .F1(s_mult_31s_19s_0_5_32));
  SLICE_253 SLICE_253( .D1(s_mult_31s_19s_0_2_12), .F1(s_mult_31s_19s_0_6_12), 
    .FCO(co_mult_31s_19s_0_6_1));
  SLICE_254 SLICE_254( .D1(s_mult_31s_19s_0_2_14), .B1(s_mult_31s_19s_0_3_14), 
    .D0(s_mult_31s_19s_0_2_13), .B0(mult_31s_19s_0_pp_6_13), 
    .FCI(co_mult_31s_19s_0_6_1), .F0(s_mult_31s_19s_0_6_13), 
    .F1(s_mult_31s_19s_0_6_14), .FCO(co_mult_31s_19s_0_6_2));
  SLICE_255 SLICE_255( .D1(s_mult_31s_19s_0_2_16), .A1(s_mult_31s_19s_0_3_16), 
    .D0(s_mult_31s_19s_0_2_15), .A0(s_mult_31s_19s_0_3_15), 
    .FCI(co_mult_31s_19s_0_6_2), .F0(s_mult_31s_19s_0_6_15), 
    .F1(s_mult_31s_19s_0_6_16), .FCO(co_mult_31s_19s_0_6_3));
  SLICE_256 SLICE_256( .D1(s_mult_31s_19s_0_2_18), .B1(s_mult_31s_19s_0_3_18), 
    .D0(s_mult_31s_19s_0_2_17), .B0(s_mult_31s_19s_0_3_17), 
    .FCI(co_mult_31s_19s_0_6_3), .F0(s_mult_31s_19s_0_6_17), 
    .F1(s_mult_31s_19s_0_6_18), .FCO(co_mult_31s_19s_0_6_4));
  SLICE_257 SLICE_257( .D1(s_mult_31s_19s_0_2_20), .A1(s_mult_31s_19s_0_3_20), 
    .D0(s_mult_31s_19s_0_2_19), .B0(s_mult_31s_19s_0_3_19), 
    .FCI(co_mult_31s_19s_0_6_4), .F0(s_mult_31s_19s_0_6_19), 
    .F1(s_mult_31s_19s_0_6_20), .FCO(co_mult_31s_19s_0_6_5));
  SLICE_258 SLICE_258( .D1(s_mult_31s_19s_0_2_22), .B1(s_mult_31s_19s_0_3_22), 
    .D0(s_mult_31s_19s_0_2_21), .B0(s_mult_31s_19s_0_3_21), 
    .FCI(co_mult_31s_19s_0_6_5), .F0(s_mult_31s_19s_0_6_21), 
    .F1(s_mult_31s_19s_0_6_22), .FCO(co_mult_31s_19s_0_6_6));
  SLICE_259 SLICE_259( .D1(s_mult_31s_19s_0_3_24), .A1(s_mult_31s_19s_0_2_24), 
    .D0(s_mult_31s_19s_0_2_23), .B0(s_mult_31s_19s_0_3_23), 
    .FCI(co_mult_31s_19s_0_6_6), .F0(s_mult_31s_19s_0_6_23), 
    .F1(s_mult_31s_19s_0_6_24), .FCO(co_mult_31s_19s_0_6_7));
  SLICE_260 SLICE_260( .D1(s_mult_31s_19s_0_2_26), .A1(s_mult_31s_19s_0_3_26), 
    .D0(s_mult_31s_19s_0_2_25), .A0(s_mult_31s_19s_0_3_25), 
    .FCI(co_mult_31s_19s_0_6_7), .F0(s_mult_31s_19s_0_6_25), 
    .F1(s_mult_31s_19s_0_6_26), .FCO(co_mult_31s_19s_0_6_8));
  SLICE_261 SLICE_261( .D1(s_mult_31s_19s_0_3_28), .A1(s_mult_31s_19s_0_2_28), 
    .D0(s_mult_31s_19s_0_2_27), .A0(s_mult_31s_19s_0_3_27), 
    .FCI(co_mult_31s_19s_0_6_8), .F0(s_mult_31s_19s_0_6_27), 
    .F1(s_mult_31s_19s_0_6_28), .FCO(co_mult_31s_19s_0_6_9));
  SLICE_262 SLICE_262( .D1(s_mult_31s_19s_0_2_30), .B1(s_mult_31s_19s_0_3_30), 
    .D0(s_mult_31s_19s_0_3_29), .A0(s_mult_31s_19s_0_2_29), 
    .FCI(co_mult_31s_19s_0_6_9), .F0(s_mult_31s_19s_0_6_29), 
    .F1(s_mult_31s_19s_0_6_30), .FCO(co_mult_31s_19s_0_6_10));
  SLICE_263 SLICE_263( .D1(s_mult_31s_19s_0_2_32), .B1(s_mult_31s_19s_0_3_32), 
    .D0(s_mult_31s_19s_0_2_31), .B0(s_mult_31s_19s_0_3_31), 
    .FCI(co_mult_31s_19s_0_6_10), .F0(s_mult_31s_19s_0_6_31), 
    .F1(s_mult_31s_19s_0_6_32));
  SLICE_264 SLICE_264( .A1(s_mult_31s_19s_0_4_18), .F1(s_mult_31s_19s_0_7_18), 
    .FCO(co_mult_31s_19s_0_7_1));
  SLICE_265 SLICE_265( .D1(s_mult_31s_19s_0_4_20), .D0(s_mult_31s_19s_0_4_19), 
    .FCI(co_mult_31s_19s_0_7_1), .F0(s_mult_31s_19s_0_7_19), 
    .F1(s_mult_31s_19s_0_7_20), .FCO(co_mult_31s_19s_0_7_2));
  SLICE_266 SLICE_266( .D1(s_mult_31s_19s_0_4_22), .D0(s_mult_31s_19s_0_4_21), 
    .FCI(co_mult_31s_19s_0_7_2), .F0(s_mult_31s_19s_0_7_21), 
    .F1(s_mult_31s_19s_0_7_22), .FCO(co_mult_31s_19s_0_7_3));
  SLICE_267 SLICE_267( .A1(s_mult_31s_19s_0_4_24), .D0(s_mult_31s_19s_0_4_23), 
    .FCI(co_mult_31s_19s_0_7_3), .F0(s_mult_31s_19s_0_7_23), 
    .F1(s_mult_31s_19s_0_7_24), .FCO(co_mult_31s_19s_0_7_4));
  SLICE_268 SLICE_268( .D1(s_mult_31s_19s_0_4_26), .D0(s_mult_31s_19s_0_4_25), 
    .FCI(co_mult_31s_19s_0_7_4), .F0(s_mult_31s_19s_0_7_25), 
    .F1(s_mult_31s_19s_0_7_26), .FCO(co_mult_31s_19s_0_7_5));
  SLICE_269 SLICE_269( .D1(s_mult_31s_19s_0_4_28), .D0(s_mult_31s_19s_0_4_27), 
    .FCI(co_mult_31s_19s_0_7_5), .F0(s_mult_31s_19s_0_7_27), 
    .F1(s_mult_31s_19s_0_7_28), .FCO(co_mult_31s_19s_0_7_6));
  SLICE_270 SLICE_270( .D1(s_mult_31s_19s_0_4_30), .A0(s_mult_31s_19s_0_4_29), 
    .FCI(co_mult_31s_19s_0_7_6), .F0(s_mult_31s_19s_0_7_29), 
    .F1(s_mult_31s_19s_0_7_30), .FCO(co_mult_31s_19s_0_7_7));
  SLICE_271 SLICE_271( .D1(s_mult_31s_19s_0_4_32), .B0(s_mult_31s_19s_0_4_31), 
    .FCI(co_mult_31s_19s_0_7_7), .F0(s_mult_31s_19s_0_7_31), 
    .F1(s_mult_31s_19s_0_7_32));
  SLICE_272 SLICE_272( .FCI(n3949), .F0(n2550));
  SLICE_273 SLICE_273( .A1(s_mult_31s_19s_0_5_8), .F1(n1047), 
    .FCO(co_mult_31s_19s_0_8_1));
  SLICE_274 SLICE_274( .B1(s_mult_31s_19s_0_5_10), .A1(s_mult_31s_19s_0_2_10), 
    .B0(mult_31s_19s_0_pp_4_9), .A0(s_mult_31s_19s_0_5_9), 
    .FCI(co_mult_31s_19s_0_8_1), .F0(n1046), .F1(n1045), 
    .FCO(co_mult_31s_19s_0_8_2));
  SLICE_275 SLICE_275( .D1(s_mult_31s_19s_0_5_12), .A1(s_mult_31s_19s_0_6_12), 
    .D0(s_mult_31s_19s_0_5_11), .B0(s_mult_31s_19s_0_2_11), 
    .FCI(co_mult_31s_19s_0_8_2), .F0(n1044), .F1(n1043), 
    .FCO(co_mult_31s_19s_0_8_3));
  SLICE_276 SLICE_276( .D1(s_mult_31s_19s_0_5_14), .A1(s_mult_31s_19s_0_6_14), 
    .D0(s_mult_31s_19s_0_5_13), .B0(s_mult_31s_19s_0_6_13), 
    .FCI(co_mult_31s_19s_0_8_3), .F0(n1042), .F1(n1041), 
    .FCO(co_mult_31s_19s_0_8_4));
  SLICE_277 SLICE_277( .B1(s_mult_31s_19s_0_6_16), .A1(s_mult_31s_19s_0_5_16), 
    .D0(s_mult_31s_19s_0_5_15), .A0(s_mult_31s_19s_0_6_15), 
    .FCI(co_mult_31s_19s_0_8_4), .F0(n1040), .F1(s_mult_31s_19s_0_8_16), 
    .FCO(co_mult_31s_19s_0_8_5));
  SLICE_278 SLICE_278( .D1(s_mult_31s_19s_0_6_18), .A1(s_mult_31s_19s_0_5_18), 
    .D0(s_mult_31s_19s_0_6_17), .A0(s_mult_31s_19s_0_5_17), 
    .FCI(co_mult_31s_19s_0_8_5), .F0(s_mult_31s_19s_0_8_17), 
    .F1(s_mult_31s_19s_0_8_18), .FCO(co_mult_31s_19s_0_8_6));
  SLICE_279 SLICE_279( .D1(s_mult_31s_19s_0_6_20), .A1(s_mult_31s_19s_0_5_20), 
    .D0(s_mult_31s_19s_0_5_19), .A0(s_mult_31s_19s_0_6_19), 
    .FCI(co_mult_31s_19s_0_8_6), .F0(s_mult_31s_19s_0_8_19), 
    .F1(s_mult_31s_19s_0_8_20), .FCO(co_mult_31s_19s_0_8_7));
  SLICE_280 SLICE_280( .D1(s_mult_31s_19s_0_6_22), .B1(s_mult_31s_19s_0_5_22), 
    .D0(s_mult_31s_19s_0_5_21), .A0(s_mult_31s_19s_0_6_21), 
    .FCI(co_mult_31s_19s_0_8_7), .F0(s_mult_31s_19s_0_8_21), 
    .F1(s_mult_31s_19s_0_8_22), .FCO(co_mult_31s_19s_0_8_8));
  SLICE_281 SLICE_281( .D1(s_mult_31s_19s_0_5_24), .A1(s_mult_31s_19s_0_6_24), 
    .D0(s_mult_31s_19s_0_6_23), .A0(s_mult_31s_19s_0_5_23), 
    .FCI(co_mult_31s_19s_0_8_8), .F0(s_mult_31s_19s_0_8_23), 
    .F1(s_mult_31s_19s_0_8_24), .FCO(co_mult_31s_19s_0_8_9));
  SLICE_282 SLICE_282( .D1(s_mult_31s_19s_0_6_26), .A1(s_mult_31s_19s_0_5_26), 
    .D0(s_mult_31s_19s_0_6_25), .A0(s_mult_31s_19s_0_5_25), 
    .FCI(co_mult_31s_19s_0_8_9), .F0(s_mult_31s_19s_0_8_25), 
    .F1(s_mult_31s_19s_0_8_26), .FCO(co_mult_31s_19s_0_8_10));
  SLICE_283 SLICE_283( .D1(s_mult_31s_19s_0_5_28), .A1(s_mult_31s_19s_0_6_28), 
    .D0(s_mult_31s_19s_0_6_27), .B0(s_mult_31s_19s_0_5_27), 
    .FCI(co_mult_31s_19s_0_8_10), .F0(s_mult_31s_19s_0_8_27), 
    .F1(s_mult_31s_19s_0_8_28), .FCO(co_mult_31s_19s_0_8_11));
  SLICE_284 SLICE_284( .D1(s_mult_31s_19s_0_5_30), .B1(s_mult_31s_19s_0_6_30), 
    .D0(s_mult_31s_19s_0_5_29), .A0(s_mult_31s_19s_0_6_29), 
    .FCI(co_mult_31s_19s_0_8_11), .F0(s_mult_31s_19s_0_8_29), 
    .F1(s_mult_31s_19s_0_8_30), .FCO(co_mult_31s_19s_0_8_12));
  SLICE_285 SLICE_285( .D1(s_mult_31s_19s_0_6_32), .A1(s_mult_31s_19s_0_5_32), 
    .B0(s_mult_31s_19s_0_5_31), .A0(s_mult_31s_19s_0_6_31), 
    .FCI(co_mult_31s_19s_0_8_12), .F0(s_mult_31s_19s_0_8_31), 
    .F1(s_mult_31s_19s_0_8_32));
  SLICE_286 SLICE_286( .A1(s_mult_31s_19s_0_8_16), .F1(n1039), 
    .FCO(co_t_mult_31s_19s_0_9_1));
  SLICE_287 SLICE_287( .D1(s_mult_31s_19s_0_8_18), .A1(s_mult_31s_19s_0_7_18), 
    .D0(s_mult_31s_19s_0_8_17), .B0(mult_31s_19s_0_pp_8_17), 
    .FCI(co_t_mult_31s_19s_0_9_1), .F0(n1038), .F1(n1037), 
    .FCO(co_t_mult_31s_19s_0_9_2));
  SLICE_288 SLICE_288( .D1(s_mult_31s_19s_0_8_20), .A1(s_mult_31s_19s_0_7_20), 
    .B0(s_mult_31s_19s_0_7_19), .A0(s_mult_31s_19s_0_8_19), 
    .FCI(co_t_mult_31s_19s_0_9_2), .F0(n1036), .F1(n1035), 
    .FCO(co_t_mult_31s_19s_0_9_3));
  SLICE_289 SLICE_289( .D1(s_mult_31s_19s_0_8_22), .B1(s_mult_31s_19s_0_7_22), 
    .D0(s_mult_31s_19s_0_8_21), .A0(s_mult_31s_19s_0_7_21), 
    .FCI(co_t_mult_31s_19s_0_9_3), .F0(n1034), .F1(n1033), 
    .FCO(co_t_mult_31s_19s_0_9_4));
  SLICE_290 SLICE_290( .D1(s_mult_31s_19s_0_8_24), .A1(s_mult_31s_19s_0_7_24), 
    .B0(s_mult_31s_19s_0_7_23), .A0(s_mult_31s_19s_0_8_23), 
    .FCI(co_t_mult_31s_19s_0_9_4), .F0(n1032), .F1(n1031), 
    .FCO(co_t_mult_31s_19s_0_9_5));
  SLICE_291 SLICE_291( .D1(s_mult_31s_19s_0_8_26), .A1(s_mult_31s_19s_0_7_26), 
    .D0(s_mult_31s_19s_0_8_25), .B0(s_mult_31s_19s_0_7_25), 
    .FCI(co_t_mult_31s_19s_0_9_5), .F0(n1030), .F1(n1029), 
    .FCO(co_t_mult_31s_19s_0_9_6));
  SLICE_292 SLICE_292( .D1(s_mult_31s_19s_0_8_28), .A1(s_mult_31s_19s_0_7_28), 
    .D0(s_mult_31s_19s_0_8_27), .B0(s_mult_31s_19s_0_7_27), 
    .FCI(co_t_mult_31s_19s_0_9_6), .F0(n1028), .F1(n1027), 
    .FCO(co_t_mult_31s_19s_0_9_7));
  SLICE_293 SLICE_293( .D1(s_mult_31s_19s_0_8_30), .B1(s_mult_31s_19s_0_7_30), 
    .B0(s_mult_31s_19s_0_8_29), .A0(s_mult_31s_19s_0_7_29), 
    .FCI(co_t_mult_31s_19s_0_9_7), .F0(n1026), .F1(n1025), 
    .FCO(co_t_mult_31s_19s_0_9_8));
  SLICE_294 SLICE_294( .D1(s_mult_31s_19s_0_8_32), .B1(s_mult_31s_19s_0_7_32), 
    .D0(s_mult_31s_19s_0_8_31), .A0(s_mult_31s_19s_0_7_31), 
    .FCI(co_t_mult_31s_19s_0_9_8), .F0(n1024));
  SLICE_295 SLICE_295( .B1(Cycle_period_30), .B0(Cycle_period_29), .FCI(n3997), 
    .FCO(n3998));
  SLICE_296 SLICE_296( .A1(Cycle_period_28), .B0(Cycle_period_27), .FCI(n3996), 
    .FCO(n3997));
  SLICE_297 SLICE_297( .D1(LIGHT_CTL_0), .D0(LIGHT_CTL_0), 
    .FCI(mult_31s_19s_0_cin_lr_0), .F1(mult_31s_19s_0_pp_0_2), .FCO(mco));
  SLICE_298 SLICE_298( .D1(LIGHT_CTL_0), .D0(LIGHT_CTL_0), .FCI(mco), 
    .F0(mult_31s_19s_0_pp_0_3), .F1(mult_31s_19s_0_pp_0_4), .FCO(mco_1));
  SLICE_299 SLICE_299( .D1(LIGHT_CTL_0), .C1(Cycle_period_7), 
    .A1(Cycle_period_6), .D0(LIGHT_CTL_0), .C0(Cycle_period_6), .FCI(mco_1), 
    .F0(mult_31s_19s_0_pp_0_5), .F1(mult_31s_19s_0_pp_0_6), .FCO(mco_2));
  SLICE_300 SLICE_300( .D1(LIGHT_CTL_0), .C1(Cycle_period_9), 
    .A1(Cycle_period_8), .D0(LIGHT_CTL_0), .C0(Cycle_period_8), 
    .A0(Cycle_period_7), .FCI(mco_2), .F0(mult_31s_19s_0_pp_0_7), 
    .F1(mult_31s_19s_0_pp_0_8), .FCO(mco_3));
  SLICE_301 SLICE_301( .D1(LIGHT_CTL_0), .C1(Cycle_period_11), 
    .A1(Cycle_period_10), .D0(LIGHT_CTL_0), .C0(Cycle_period_10), 
    .A0(Cycle_period_9), .FCI(mco_3), .F0(mult_31s_19s_0_pp_0_9), 
    .F1(mult_31s_19s_0_pp_0_10), .FCO(mco_4));
  SLICE_302 SLICE_302( .D1(LIGHT_CTL_0), .C1(Cycle_period_13), 
    .A1(Cycle_period_12), .D0(LIGHT_CTL_0), .C0(Cycle_period_12), 
    .A0(Cycle_period_11), .FCI(mco_4), .F0(mult_31s_19s_0_pp_0_11), 
    .F1(mult_31s_19s_0_pp_0_12), .FCO(mco_5));
  SLICE_303 SLICE_303( .D1(LIGHT_CTL_0), .C1(Cycle_period_15), 
    .A1(Cycle_period_14), .D0(LIGHT_CTL_0), .C0(Cycle_period_14), 
    .A0(Cycle_period_13), .FCI(mco_5), .F0(mult_31s_19s_0_pp_0_13), 
    .F1(mult_31s_19s_0_pp_0_14), .FCO(mco_6));
  SLICE_304 SLICE_304( .D1(LIGHT_CTL_0), .C1(Cycle_period_17), 
    .A1(Cycle_period_16), .D0(LIGHT_CTL_0), .C0(Cycle_period_16), 
    .A0(Cycle_period_15), .FCI(mco_6), .F0(mult_31s_19s_0_pp_0_15), 
    .F1(mult_31s_19s_0_pp_0_16), .FCO(mco_7));
  SLICE_305 SLICE_305( .D1(LIGHT_CTL_0), .C1(Cycle_period_19), 
    .A1(Cycle_period_18), .D0(LIGHT_CTL_0), .C0(Cycle_period_18), 
    .A0(Cycle_period_17), .FCI(mco_7), .F0(mult_31s_19s_0_pp_0_17), 
    .F1(mult_31s_19s_0_pp_0_18), .FCO(mco_8));
  SLICE_306 SLICE_306( .D1(LIGHT_CTL_0), .C1(Cycle_period_21), 
    .A1(Cycle_period_20), .D0(LIGHT_CTL_0), .C0(Cycle_period_20), 
    .A0(Cycle_period_19), .FCI(mco_8), .F0(mult_31s_19s_0_pp_0_19), 
    .F1(mult_31s_19s_0_pp_0_20), .FCO(mco_9));
  SLICE_307 SLICE_307( .D1(LIGHT_CTL_0), .C1(Cycle_period_23), 
    .A1(Cycle_period_22), .D0(LIGHT_CTL_0), .C0(Cycle_period_22), 
    .A0(Cycle_period_21), .FCI(mco_9), .F0(mult_31s_19s_0_pp_0_21), 
    .F1(mult_31s_19s_0_pp_0_22), .FCO(mco_10));
  SLICE_308 SLICE_308( .D1(LIGHT_CTL_0), .C1(Cycle_period_25), 
    .A1(Cycle_period_24), .D0(LIGHT_CTL_0), .C0(Cycle_period_24), 
    .A0(Cycle_period_23), .FCI(mco_10), .F0(mult_31s_19s_0_pp_0_23), 
    .F1(mult_31s_19s_0_pp_0_24), .FCO(mco_11));
  SLICE_309 SLICE_309( .D1(LIGHT_CTL_0), .C1(Cycle_period_27), 
    .A1(Cycle_period_26), .D0(LIGHT_CTL_0), .C0(Cycle_period_26), 
    .A0(Cycle_period_25), .FCI(mco_11), .F0(mult_31s_19s_0_pp_0_25), 
    .F1(mult_31s_19s_0_pp_0_26), .FCO(mco_12));
  SLICE_310 SLICE_310( .D1(LIGHT_CTL_0), .C1(Cycle_period_29), 
    .A1(Cycle_period_28), .D0(LIGHT_CTL_0), .C0(Cycle_period_28), 
    .A0(Cycle_period_27), .FCI(mco_12), .F0(mult_31s_19s_0_pp_0_27), 
    .F1(mult_31s_19s_0_pp_0_28), .FCO(mco_13));
  SLICE_311 SLICE_311( .D1(LIGHT_CTL_0), .C1(Cycle_period_31), 
    .A1(Cycle_period_30), .D0(LIGHT_CTL_0), .C0(Cycle_period_30), 
    .A0(Cycle_period_29), .FCI(mco_13), .F0(mult_31s_19s_0_pp_0_29), 
    .F1(mult_31s_19s_0_pp_0_30), .FCO(mco_14));
  SLICE_312 SLICE_312( .D0(VCC_net), .C0(mult_31s_19s_0_mult_0_15_n2), 
    .B0(VCC_net), .A0(mult_31s_19s_0_mult_0_15_n2_1), .FCI(mco_14), 
    .F0(mult_31s_19s_0_pp_0_31), .F1(mult_31s_19s_0_pp_0_32));
  SLICE_313 SLICE_313( .D1(LIGHT_CTL_2), .B1(LIGHT_CTL_7), .D0(LIGHT_CTL_2), 
    .B0(LIGHT_CTL_7), .FCI(mult_31s_19s_0_cin_lr_2), 
    .F0(mult_31s_19s_0_pp_1_3), .F1(mult_31s_19s_0_pp_1_4), .FCO(mco_15));
  SLICE_314 SLICE_314( .D1(LIGHT_CTL_2), .B1(LIGHT_CTL_7), .D0(LIGHT_CTL_2), 
    .B0(LIGHT_CTL_7), .FCI(mco_15), .F0(mult_31s_19s_0_pp_1_5), 
    .F1(mult_31s_19s_0_pp_1_6), .FCO(mco_16));
  SLICE_315 SLICE_315( .D1(LIGHT_CTL_2), .C1(Cycle_period_7), .B1(LIGHT_CTL_7), 
    .A1(Cycle_period_6), .D0(LIGHT_CTL_2), .C0(Cycle_period_6), 
    .B0(LIGHT_CTL_7), .FCI(mco_16), .F0(mult_31s_19s_0_pp_1_7), 
    .F1(mult_31s_19s_0_pp_1_8), .FCO(mco_17));
  SLICE_316 SLICE_316( .D1(LIGHT_CTL_2), .C1(Cycle_period_9), .B1(LIGHT_CTL_7), 
    .A1(Cycle_period_8), .D0(LIGHT_CTL_2), .C0(Cycle_period_8), 
    .B0(LIGHT_CTL_7), .A0(Cycle_period_7), .FCI(mco_17), 
    .F0(mult_31s_19s_0_pp_1_9), .F1(mult_31s_19s_0_pp_1_10), .FCO(mco_18));
  SLICE_317 SLICE_317( .D1(LIGHT_CTL_2), .C1(Cycle_period_11), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_10), .D0(LIGHT_CTL_2), 
    .C0(Cycle_period_10), .B0(LIGHT_CTL_7), .A0(Cycle_period_9), .FCI(mco_18), 
    .F0(mult_31s_19s_0_pp_1_11), .F1(mult_31s_19s_0_pp_1_12), .FCO(mco_19));
  SLICE_318 SLICE_318( .D1(LIGHT_CTL_2), .C1(Cycle_period_13), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_12), .D0(LIGHT_CTL_2), 
    .C0(Cycle_period_12), .B0(LIGHT_CTL_7), .A0(Cycle_period_11), .FCI(mco_19), 
    .F0(mult_31s_19s_0_pp_1_13), .F1(mult_31s_19s_0_pp_1_14), .FCO(mco_20));
  SLICE_319 SLICE_319( .D1(LIGHT_CTL_2), .C1(Cycle_period_15), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_14), .D0(LIGHT_CTL_2), 
    .C0(Cycle_period_14), .B0(LIGHT_CTL_7), .A0(Cycle_period_13), .FCI(mco_20), 
    .F0(mult_31s_19s_0_pp_1_15), .F1(mult_31s_19s_0_pp_1_16), .FCO(mco_21));
  SLICE_320 SLICE_320( .D1(LIGHT_CTL_2), .C1(Cycle_period_17), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_16), .D0(LIGHT_CTL_2), 
    .C0(Cycle_period_16), .B0(LIGHT_CTL_7), .A0(Cycle_period_15), .FCI(mco_21), 
    .F0(mult_31s_19s_0_pp_1_17), .F1(mult_31s_19s_0_pp_1_18), .FCO(mco_22));
  SLICE_321 SLICE_321( .D1(LIGHT_CTL_2), .C1(Cycle_period_19), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_18), .D0(LIGHT_CTL_2), 
    .C0(Cycle_period_18), .B0(LIGHT_CTL_7), .A0(Cycle_period_17), .FCI(mco_22), 
    .F0(mult_31s_19s_0_pp_1_19), .F1(mult_31s_19s_0_pp_1_20), .FCO(mco_23));
  SLICE_322 SLICE_322( .D1(LIGHT_CTL_2), .C1(Cycle_period_21), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_20), .D0(LIGHT_CTL_2), 
    .C0(Cycle_period_20), .B0(LIGHT_CTL_7), .A0(Cycle_period_19), .FCI(mco_23), 
    .F0(mult_31s_19s_0_pp_1_21), .F1(mult_31s_19s_0_pp_1_22), .FCO(mco_24));
  SLICE_323 SLICE_323( .D1(LIGHT_CTL_2), .C1(Cycle_period_23), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_22), .D0(LIGHT_CTL_2), 
    .C0(Cycle_period_22), .B0(LIGHT_CTL_7), .A0(Cycle_period_21), .FCI(mco_24), 
    .F0(mult_31s_19s_0_pp_1_23), .F1(mult_31s_19s_0_pp_1_24), .FCO(mco_25));
  SLICE_324 SLICE_324( .D1(LIGHT_CTL_2), .C1(Cycle_period_25), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_24), .D0(LIGHT_CTL_2), 
    .C0(Cycle_period_24), .B0(LIGHT_CTL_7), .A0(Cycle_period_23), .FCI(mco_25), 
    .F0(mult_31s_19s_0_pp_1_25), .F1(mult_31s_19s_0_pp_1_26), .FCO(mco_26));
  SLICE_325 SLICE_325( .D1(LIGHT_CTL_2), .C1(Cycle_period_27), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_26), .D0(LIGHT_CTL_2), 
    .C0(Cycle_period_26), .B0(LIGHT_CTL_7), .A0(Cycle_period_25), .FCI(mco_26), 
    .F0(mult_31s_19s_0_pp_1_27), .F1(mult_31s_19s_0_pp_1_28), .FCO(mco_27));
  SLICE_326 SLICE_326( .D1(LIGHT_CTL_2), .C1(Cycle_period_29), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_28), .D0(LIGHT_CTL_2), 
    .C0(Cycle_period_28), .B0(LIGHT_CTL_7), .A0(Cycle_period_27), .FCI(mco_27), 
    .F0(mult_31s_19s_0_pp_1_29), .F1(mult_31s_19s_0_pp_1_30), .FCO(mco_28));
  SLICE_327 SLICE_327( .D1(VCC_net), .C1(mult_31s_19s_0_mult_2_14_n3), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_30), .D0(LIGHT_CTL_2), 
    .C0(Cycle_period_30), .B0(LIGHT_CTL_7), .A0(Cycle_period_29), .FCI(mco_28), 
    .F0(mult_31s_19s_0_pp_1_31), .F1(mult_31s_19s_0_pp_1_32));
  SLICE_328 SLICE_328( .D1(LIGHT_CTL_2), .D0(LIGHT_CTL_2), 
    .FCI(mult_31s_19s_0_cin_lr_4), .F0(mult_31s_19s_0_pp_2_5), 
    .F1(mult_31s_19s_0_pp_2_6), .FCO(mco_30));
  SLICE_329 SLICE_329( .D1(LIGHT_CTL_2), .D0(LIGHT_CTL_2), .FCI(mco_30), 
    .F0(mult_31s_19s_0_pp_2_7), .F1(mult_31s_19s_0_pp_2_8), .FCO(mco_31));
  SLICE_330 SLICE_330( .D1(LIGHT_CTL_2), .C1(Cycle_period_7), 
    .A1(Cycle_period_6), .D0(LIGHT_CTL_2), .C0(Cycle_period_6), .FCI(mco_31), 
    .F0(mult_31s_19s_0_pp_2_9), .F1(mult_31s_19s_0_pp_2_10), .FCO(mco_32));
  SLICE_331 SLICE_331( .D1(LIGHT_CTL_2), .C1(Cycle_period_9), 
    .A1(Cycle_period_8), .D0(LIGHT_CTL_2), .C0(Cycle_period_8), 
    .A0(Cycle_period_7), .FCI(mco_32), .F0(mult_31s_19s_0_pp_2_11), 
    .F1(mult_31s_19s_0_pp_2_12), .FCO(mco_33));
  SLICE_332 SLICE_332( .D1(LIGHT_CTL_2), .C1(Cycle_period_11), 
    .A1(Cycle_period_10), .D0(LIGHT_CTL_2), .C0(Cycle_period_10), 
    .A0(Cycle_period_9), .FCI(mco_33), .F0(mult_31s_19s_0_pp_2_13), 
    .F1(mult_31s_19s_0_pp_2_14), .FCO(mco_34));
  SLICE_333 SLICE_333( .D1(LIGHT_CTL_2), .C1(Cycle_period_13), 
    .A1(Cycle_period_12), .D0(LIGHT_CTL_2), .C0(Cycle_period_12), 
    .A0(Cycle_period_11), .FCI(mco_34), .F0(mult_31s_19s_0_pp_2_15), 
    .F1(mult_31s_19s_0_pp_2_16), .FCO(mco_35));
  SLICE_334 SLICE_334( .D1(LIGHT_CTL_2), .C1(Cycle_period_15), 
    .A1(Cycle_period_14), .D0(LIGHT_CTL_2), .C0(Cycle_period_14), 
    .A0(Cycle_period_13), .FCI(mco_35), .F0(mult_31s_19s_0_pp_2_17), 
    .F1(mult_31s_19s_0_pp_2_18), .FCO(mco_36));
  SLICE_335 SLICE_335( .D1(LIGHT_CTL_2), .C1(Cycle_period_17), 
    .A1(Cycle_period_16), .D0(LIGHT_CTL_2), .C0(Cycle_period_16), 
    .A0(Cycle_period_15), .FCI(mco_36), .F0(mult_31s_19s_0_pp_2_19), 
    .F1(mult_31s_19s_0_pp_2_20), .FCO(mco_37));
  SLICE_336 SLICE_336( .D1(LIGHT_CTL_2), .C1(Cycle_period_19), 
    .A1(Cycle_period_18), .D0(LIGHT_CTL_2), .C0(Cycle_period_18), 
    .A0(Cycle_period_17), .FCI(mco_37), .F0(mult_31s_19s_0_pp_2_21), 
    .F1(mult_31s_19s_0_pp_2_22), .FCO(mco_38));
  SLICE_337 SLICE_337( .D1(LIGHT_CTL_2), .C1(Cycle_period_21), 
    .A1(Cycle_period_20), .D0(LIGHT_CTL_2), .C0(Cycle_period_20), 
    .A0(Cycle_period_19), .FCI(mco_38), .F0(mult_31s_19s_0_pp_2_23), 
    .F1(mult_31s_19s_0_pp_2_24), .FCO(mco_39));
  SLICE_338 SLICE_338( .D1(LIGHT_CTL_2), .C1(Cycle_period_23), 
    .A1(Cycle_period_22), .D0(LIGHT_CTL_2), .C0(Cycle_period_22), 
    .A0(Cycle_period_21), .FCI(mco_39), .F0(mult_31s_19s_0_pp_2_25), 
    .F1(mult_31s_19s_0_pp_2_26), .FCO(mco_40));
  SLICE_339 SLICE_339( .D1(LIGHT_CTL_2), .C1(Cycle_period_25), 
    .A1(Cycle_period_24), .D0(LIGHT_CTL_2), .C0(Cycle_period_24), 
    .A0(Cycle_period_23), .FCI(mco_40), .F0(mult_31s_19s_0_pp_2_27), 
    .F1(mult_31s_19s_0_pp_2_28), .FCO(mco_41));
  SLICE_340 SLICE_340( .D1(LIGHT_CTL_2), .C1(Cycle_period_27), 
    .A1(Cycle_period_26), .D0(LIGHT_CTL_2), .C0(Cycle_period_26), 
    .A0(Cycle_period_25), .FCI(mco_41), .F0(mult_31s_19s_0_pp_2_29), 
    .F1(mult_31s_19s_0_pp_2_30), .FCO(mco_42));
  SLICE_341 SLICE_341( .D1(LIGHT_CTL_2), .C1(Cycle_period_29), 
    .A1(Cycle_period_28), .D0(LIGHT_CTL_2), .C0(Cycle_period_28), 
    .A0(Cycle_period_27), .FCI(mco_42), .F0(mult_31s_19s_0_pp_2_31), 
    .F1(mult_31s_19s_0_pp_2_32));
  SLICE_342 SLICE_342( .A1(Cycle_period_26), .B0(Cycle_period_25), .FCI(n3995), 
    .FCO(n3996));
  SLICE_343 SLICE_343( .D1(LIGHT_CTL_7), .B1(LIGHT_CTL_7), .D0(LIGHT_CTL_7), 
    .B0(LIGHT_CTL_7), .FCI(mult_31s_19s_0_cin_lr_6), 
    .F0(mult_31s_19s_0_pp_3_7), .F1(mult_31s_19s_0_pp_3_8), .FCO(mco_45));
  SLICE_344 SLICE_344( .D1(LIGHT_CTL_7), .B1(LIGHT_CTL_7), .D0(LIGHT_CTL_7), 
    .B0(LIGHT_CTL_7), .FCI(mco_45), .F0(mult_31s_19s_0_pp_3_9), 
    .F1(mult_31s_19s_0_pp_3_10), .FCO(mco_46));
  SLICE_345 SLICE_345( .D1(LIGHT_CTL_7), .C1(Cycle_period_7), .B1(LIGHT_CTL_7), 
    .A1(Cycle_period_6), .D0(LIGHT_CTL_7), .C0(Cycle_period_6), 
    .B0(LIGHT_CTL_7), .FCI(mco_46), .F0(mult_31s_19s_0_pp_3_11), 
    .F1(mult_31s_19s_0_pp_3_12), .FCO(mco_47));
  SLICE_346 SLICE_346( .D1(LIGHT_CTL_7), .C1(Cycle_period_9), .B1(LIGHT_CTL_7), 
    .A1(Cycle_period_8), .D0(LIGHT_CTL_7), .C0(Cycle_period_8), 
    .B0(LIGHT_CTL_7), .A0(Cycle_period_7), .FCI(mco_47), 
    .F0(mult_31s_19s_0_pp_3_13), .F1(mult_31s_19s_0_pp_3_14), .FCO(mco_48));
  SLICE_347 SLICE_347( .D1(LIGHT_CTL_7), .C1(Cycle_period_11), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_10), .D0(LIGHT_CTL_7), 
    .C0(Cycle_period_10), .B0(LIGHT_CTL_7), .A0(Cycle_period_9), .FCI(mco_48), 
    .F0(mult_31s_19s_0_pp_3_15), .F1(mult_31s_19s_0_pp_3_16), .FCO(mco_49));
  SLICE_348 SLICE_348( .D1(LIGHT_CTL_7), .C1(Cycle_period_13), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_12), .D0(LIGHT_CTL_7), 
    .C0(Cycle_period_12), .B0(LIGHT_CTL_7), .A0(Cycle_period_11), .FCI(mco_49), 
    .F0(mult_31s_19s_0_pp_3_17), .F1(mult_31s_19s_0_pp_3_18), .FCO(mco_50));
  SLICE_349 SLICE_349( .D1(LIGHT_CTL_7), .C1(Cycle_period_15), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_14), .D0(LIGHT_CTL_7), 
    .C0(Cycle_period_14), .B0(LIGHT_CTL_7), .A0(Cycle_period_13), .FCI(mco_50), 
    .F0(mult_31s_19s_0_pp_3_19), .F1(mult_31s_19s_0_pp_3_20), .FCO(mco_51));
  SLICE_350 SLICE_350( .D1(LIGHT_CTL_7), .C1(Cycle_period_17), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_16), .D0(LIGHT_CTL_7), 
    .C0(Cycle_period_16), .B0(LIGHT_CTL_7), .A0(Cycle_period_15), .FCI(mco_51), 
    .F0(mult_31s_19s_0_pp_3_21), .F1(mult_31s_19s_0_pp_3_22), .FCO(mco_52));
  SLICE_351 SLICE_351( .D1(LIGHT_CTL_7), .C1(Cycle_period_19), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_18), .D0(LIGHT_CTL_7), 
    .C0(Cycle_period_18), .B0(LIGHT_CTL_7), .A0(Cycle_period_17), .FCI(mco_52), 
    .F0(mult_31s_19s_0_pp_3_23), .F1(mult_31s_19s_0_pp_3_24), .FCO(mco_53));
  SLICE_352 SLICE_352( .D1(LIGHT_CTL_7), .C1(Cycle_period_21), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_20), .D0(LIGHT_CTL_7), 
    .C0(Cycle_period_20), .B0(LIGHT_CTL_7), .A0(Cycle_period_19), .FCI(mco_53), 
    .F0(mult_31s_19s_0_pp_3_25), .F1(mult_31s_19s_0_pp_3_26), .FCO(mco_54));
  SLICE_353 SLICE_353( .D1(LIGHT_CTL_7), .C1(Cycle_period_23), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_22), .D0(LIGHT_CTL_7), 
    .C0(Cycle_period_22), .B0(LIGHT_CTL_7), .A0(Cycle_period_21), .FCI(mco_54), 
    .F0(mult_31s_19s_0_pp_3_27), .F1(mult_31s_19s_0_pp_3_28), .FCO(mco_55));
  SLICE_354 SLICE_354( .D1(LIGHT_CTL_7), .C1(Cycle_period_25), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_24), .D0(LIGHT_CTL_7), 
    .C0(Cycle_period_24), .B0(LIGHT_CTL_7), .A0(Cycle_period_23), .FCI(mco_55), 
    .F0(mult_31s_19s_0_pp_3_29), .F1(mult_31s_19s_0_pp_3_30), .FCO(mco_56));
  SLICE_355 SLICE_355( .D1(LIGHT_CTL_7), .C1(Cycle_period_27), 
    .B1(LIGHT_CTL_7), .A1(Cycle_period_26), .D0(LIGHT_CTL_7), 
    .C0(Cycle_period_26), .B0(LIGHT_CTL_7), .A0(Cycle_period_25), .FCI(mco_56), 
    .F0(mult_31s_19s_0_pp_3_31), .F1(mult_31s_19s_0_pp_3_32));
  SLICE_356 SLICE_356( .A1(Cycle_period_24), .B0(Cycle_period_23), .FCI(n3994), 
    .FCO(n3995));
  SLICE_357 SLICE_357( .B1(Cycle_period_22), .A0(Cycle_period_21), .FCI(n3993), 
    .FCO(n3994));
  SLICE_358 SLICE_358( .FCI(mult_31s_19s_0_cin_lr_8), 
    .F0(mult_31s_19s_0_pp_4_9), .F1(mult_31s_19s_0_pp_4_10), .FCO(mco_60));
  SLICE_359 SLICE_359( .FCI(mco_60), .F0(mult_31s_19s_0_pp_4_11), 
    .F1(mult_31s_19s_0_pp_4_12), .FCO(mco_61));
  SLICE_360 SLICE_360( .C1(Cycle_period_7), .A1(Cycle_period_6), 
    .C0(Cycle_period_6), .FCI(mco_61), .F0(mult_31s_19s_0_pp_4_13), 
    .F1(mult_31s_19s_0_pp_4_14), .FCO(mco_62));
  SLICE_361 SLICE_361( .C1(Cycle_period_9), .A1(Cycle_period_8), 
    .C0(Cycle_period_8), .A0(Cycle_period_7), .FCI(mco_62), 
    .F0(mult_31s_19s_0_pp_4_15), .F1(mult_31s_19s_0_pp_4_16), .FCO(mco_63));
  SLICE_362 SLICE_362( .C1(Cycle_period_11), .A1(Cycle_period_10), 
    .C0(Cycle_period_10), .A0(Cycle_period_9), .FCI(mco_63), 
    .F0(mult_31s_19s_0_pp_4_17), .F1(mult_31s_19s_0_pp_4_18), .FCO(mco_64));
  SLICE_363 SLICE_363( .C1(Cycle_period_13), .A1(Cycle_period_12), 
    .C0(Cycle_period_12), .A0(Cycle_period_11), .FCI(mco_64), 
    .F0(mult_31s_19s_0_pp_4_19), .F1(mult_31s_19s_0_pp_4_20), .FCO(mco_65));
  SLICE_364 SLICE_364( .C1(Cycle_period_15), .A1(Cycle_period_14), 
    .C0(Cycle_period_14), .A0(Cycle_period_13), .FCI(mco_65), 
    .F0(mult_31s_19s_0_pp_4_21), .F1(mult_31s_19s_0_pp_4_22), .FCO(mco_66));
  SLICE_365 SLICE_365( .C1(Cycle_period_17), .A1(Cycle_period_16), 
    .C0(Cycle_period_16), .A0(Cycle_period_15), .FCI(mco_66), 
    .F0(mult_31s_19s_0_pp_4_23), .F1(mult_31s_19s_0_pp_4_24), .FCO(mco_67));
  SLICE_366 SLICE_366( .C1(Cycle_period_19), .A1(Cycle_period_18), 
    .C0(Cycle_period_18), .A0(Cycle_period_17), .FCI(mco_67), 
    .F0(mult_31s_19s_0_pp_4_25), .F1(mult_31s_19s_0_pp_4_26), .FCO(mco_68));
  SLICE_367 SLICE_367( .C1(Cycle_period_21), .A1(Cycle_period_20), 
    .C0(Cycle_period_20), .A0(Cycle_period_19), .FCI(mco_68), 
    .F0(mult_31s_19s_0_pp_4_27), .F1(mult_31s_19s_0_pp_4_28), .FCO(mco_69));
  SLICE_368 SLICE_368( .C1(Cycle_period_23), .A1(Cycle_period_22), 
    .C0(Cycle_period_22), .A0(Cycle_period_21), .FCI(mco_69), 
    .F0(mult_31s_19s_0_pp_4_29), .F1(mult_31s_19s_0_pp_4_30), .FCO(mco_70));
  SLICE_369 SLICE_369( .C1(Cycle_period_25), .A1(Cycle_period_24), 
    .C0(Cycle_period_24), .A0(Cycle_period_23), .FCI(mco_70), 
    .F0(mult_31s_19s_0_pp_4_31), .F1(mult_31s_19s_0_pp_4_32));
  SLICE_370 SLICE_370( .B1(Cycle_period_20), .A0(Cycle_period_19), .FCI(n3992), 
    .FCO(n3993));
  SLICE_371 SLICE_371( .FCI(mult_31s_19s_0_cin_lr_10), 
    .F0(mult_31s_19s_0_pp_5_11), .F1(mult_31s_19s_0_pp_5_12), .FCO(mco_75));
  SLICE_372 SLICE_372( .FCI(mco_75), .F0(mult_31s_19s_0_pp_5_13), 
    .F1(mult_31s_19s_0_pp_5_14), .FCO(mco_76));
  SLICE_373 SLICE_373( .C1(Cycle_period_7), .A1(Cycle_period_6), 
    .C0(Cycle_period_6), .FCI(mco_76), .F0(mult_31s_19s_0_pp_5_15), 
    .F1(mult_31s_19s_0_pp_5_16), .FCO(mco_77));
  SLICE_374 SLICE_374( .C1(Cycle_period_9), .A1(Cycle_period_8), 
    .C0(Cycle_period_8), .A0(Cycle_period_7), .FCI(mco_77), 
    .F0(mult_31s_19s_0_pp_5_17), .F1(mult_31s_19s_0_pp_5_18), .FCO(mco_78));
  SLICE_375 SLICE_375( .C1(Cycle_period_11), .A1(Cycle_period_10), 
    .C0(Cycle_period_10), .A0(Cycle_period_9), .FCI(mco_78), 
    .F0(mult_31s_19s_0_pp_5_19), .F1(mult_31s_19s_0_pp_5_20), .FCO(mco_79));
  SLICE_376 SLICE_376( .C1(Cycle_period_13), .A1(Cycle_period_12), 
    .C0(Cycle_period_12), .A0(Cycle_period_11), .FCI(mco_79), 
    .F0(mult_31s_19s_0_pp_5_21), .F1(mult_31s_19s_0_pp_5_22), .FCO(mco_80));
  SLICE_377 SLICE_377( .C1(Cycle_period_15), .A1(Cycle_period_14), 
    .C0(Cycle_period_14), .A0(Cycle_period_13), .FCI(mco_80), 
    .F0(mult_31s_19s_0_pp_5_23), .F1(mult_31s_19s_0_pp_5_24), .FCO(mco_81));
  SLICE_378 SLICE_378( .C1(Cycle_period_17), .A1(Cycle_period_16), 
    .C0(Cycle_period_16), .A0(Cycle_period_15), .FCI(mco_81), 
    .F0(mult_31s_19s_0_pp_5_25), .F1(mult_31s_19s_0_pp_5_26), .FCO(mco_82));
  SLICE_379 SLICE_379( .C1(Cycle_period_19), .A1(Cycle_period_18), 
    .C0(Cycle_period_18), .A0(Cycle_period_17), .FCI(mco_82), 
    .F0(mult_31s_19s_0_pp_5_27), .F1(mult_31s_19s_0_pp_5_28), .FCO(mco_83));
  SLICE_380 SLICE_380( .C1(Cycle_period_21), .A1(Cycle_period_20), 
    .C0(Cycle_period_20), .A0(Cycle_period_19), .FCI(mco_83), 
    .F0(mult_31s_19s_0_pp_5_29), .F1(mult_31s_19s_0_pp_5_30), .FCO(mco_84));
  SLICE_381 SLICE_381( .C1(Cycle_period_23), .A1(Cycle_period_22), 
    .C0(Cycle_period_22), .A0(Cycle_period_21), .FCI(mco_84), 
    .F0(mult_31s_19s_0_pp_5_31), .F1(mult_31s_19s_0_pp_5_32));
  SLICE_382 SLICE_382( .B1(Cycle_period_31), .A1(cnt_31), .B0(Cycle_period_31), 
    .A0(cnt_30), .FCI(n3948), .FCO(n3949));
  SLICE_383 SLICE_383( .B1(cnt_29), .A1(Cycle_period_30), .B0(Cycle_period_29), 
    .A0(cnt_28), .FCI(n3947), .FCO(n3948));
  SLICE_384 SLICE_384( .FCI(mult_31s_19s_0_cin_lr_12), 
    .F0(mult_31s_19s_0_pp_6_13), .F1(mult_31s_19s_0_pp_6_14), .FCO(mco_90));
  SLICE_385 SLICE_385( .FCI(mco_90), .F0(mult_31s_19s_0_pp_6_15), 
    .F1(mult_31s_19s_0_pp_6_16), .FCO(mco_91));
  SLICE_386 SLICE_386( .C1(Cycle_period_7), .A1(Cycle_period_6), 
    .C0(Cycle_period_6), .FCI(mco_91), .F0(mult_31s_19s_0_pp_6_17), 
    .F1(mult_31s_19s_0_pp_6_18), .FCO(mco_92));
  SLICE_387 SLICE_387( .C1(Cycle_period_9), .A1(Cycle_period_8), 
    .C0(Cycle_period_8), .A0(Cycle_period_7), .FCI(mco_92), 
    .F0(mult_31s_19s_0_pp_6_19), .F1(mult_31s_19s_0_pp_6_20), .FCO(mco_93));
  SLICE_388 SLICE_388( .C1(Cycle_period_11), .A1(Cycle_period_10), 
    .C0(Cycle_period_10), .A0(Cycle_period_9), .FCI(mco_93), 
    .F0(mult_31s_19s_0_pp_6_21), .F1(mult_31s_19s_0_pp_6_22), .FCO(mco_94));
  SLICE_389 SLICE_389( .C1(Cycle_period_13), .A1(Cycle_period_12), 
    .C0(Cycle_period_12), .A0(Cycle_period_11), .FCI(mco_94), 
    .F0(mult_31s_19s_0_pp_6_23), .F1(mult_31s_19s_0_pp_6_24), .FCO(mco_95));
  SLICE_390 SLICE_390( .C1(Cycle_period_15), .A1(Cycle_period_14), 
    .C0(Cycle_period_14), .A0(Cycle_period_13), .FCI(mco_95), 
    .F0(mult_31s_19s_0_pp_6_25), .F1(mult_31s_19s_0_pp_6_26), .FCO(mco_96));
  SLICE_391 SLICE_391( .C1(Cycle_period_17), .A1(Cycle_period_16), 
    .C0(Cycle_period_16), .A0(Cycle_period_15), .FCI(mco_96), 
    .F0(mult_31s_19s_0_pp_6_27), .F1(mult_31s_19s_0_pp_6_28), .FCO(mco_97));
  SLICE_392 SLICE_392( .C1(Cycle_period_19), .A1(Cycle_period_18), 
    .C0(Cycle_period_18), .A0(Cycle_period_17), .FCI(mco_97), 
    .F0(mult_31s_19s_0_pp_6_29), .F1(mult_31s_19s_0_pp_6_30), .FCO(mco_98));
  SLICE_393 SLICE_393( .C1(Cycle_period_21), .A1(Cycle_period_20), 
    .C0(Cycle_period_20), .A0(Cycle_period_19), .FCI(mco_98), 
    .F0(mult_31s_19s_0_pp_6_31), .F1(mult_31s_19s_0_pp_6_32));
  SLICE_394 SLICE_394( .B1(cnt_27), .A1(Cycle_period_28), .B0(cnt_26), 
    .A0(Cycle_period_27), .FCI(n3946), .FCO(n3947));
  SLICE_395 SLICE_395( .FCI(mult_31s_19s_0_cin_lr_14), 
    .F0(mult_31s_19s_0_pp_7_15), .F1(mult_31s_19s_0_pp_7_16), .FCO(mco_105));
  SLICE_396 SLICE_396( .FCI(mco_105), .F0(mult_31s_19s_0_pp_7_17), 
    .F1(mult_31s_19s_0_pp_7_18), .FCO(mco_106));
  SLICE_397 SLICE_397( .C1(Cycle_period_7), .A1(Cycle_period_6), 
    .C0(Cycle_period_6), .FCI(mco_106), .F0(mult_31s_19s_0_pp_7_19), 
    .F1(mult_31s_19s_0_pp_7_20), .FCO(mco_107));
  SLICE_398 SLICE_398( .C1(Cycle_period_9), .A1(Cycle_period_8), 
    .C0(Cycle_period_8), .A0(Cycle_period_7), .FCI(mco_107), 
    .F0(mult_31s_19s_0_pp_7_21), .F1(mult_31s_19s_0_pp_7_22), .FCO(mco_108));
  SLICE_399 SLICE_399( .C1(Cycle_period_11), .A1(Cycle_period_10), 
    .C0(Cycle_period_10), .A0(Cycle_period_9), .FCI(mco_108), 
    .F0(mult_31s_19s_0_pp_7_23), .F1(mult_31s_19s_0_pp_7_24), .FCO(mco_109));
  SLICE_400 SLICE_400( .C1(Cycle_period_13), .A1(Cycle_period_12), 
    .C0(Cycle_period_12), .A0(Cycle_period_11), .FCI(mco_109), 
    .F0(mult_31s_19s_0_pp_7_25), .F1(mult_31s_19s_0_pp_7_26), .FCO(mco_110));
  SLICE_401 SLICE_401( .C1(Cycle_period_15), .A1(Cycle_period_14), 
    .C0(Cycle_period_14), .A0(Cycle_period_13), .FCI(mco_110), 
    .F0(mult_31s_19s_0_pp_7_27), .F1(mult_31s_19s_0_pp_7_28), .FCO(mco_111));
  SLICE_402 SLICE_402( .C1(Cycle_period_17), .A1(Cycle_period_16), 
    .C0(Cycle_period_16), .A0(Cycle_period_15), .FCI(mco_111), 
    .F0(mult_31s_19s_0_pp_7_29), .F1(mult_31s_19s_0_pp_7_30), .FCO(mco_112));
  SLICE_403 SLICE_403( .C1(Cycle_period_19), .A1(Cycle_period_18), 
    .C0(Cycle_period_18), .A0(Cycle_period_17), .FCI(mco_112), 
    .F0(mult_31s_19s_0_pp_7_31), .F1(mult_31s_19s_0_pp_7_32));
  SLICE_404 SLICE_404( .B1(cnt_25), .A1(Cycle_period_26), .B0(cnt_24), 
    .A0(Cycle_period_25), .FCI(n3945), .FCO(n3946));
  SLICE_405 SLICE_405( .B1(cnt_23), .A1(Cycle_period_24), .B0(Cycle_period_23), 
    .A0(cnt_22), .FCI(n3944), .FCO(n3945));
  SLICE_406 SLICE_406( .B1(Cycle_period_22), .A1(cnt_21), .B0(cnt_20), 
    .A0(Cycle_period_21), .FCI(n3943), .FCO(n3944));
  SLICE_407 SLICE_407( .FCI(mult_31s_19s_0_cin_lr_16), 
    .F0(mult_31s_19s_0_pp_8_17), .F1(mult_31s_19s_0_pp_8_18), .FCO(mco_120));
  SLICE_408 SLICE_408( .FCI(mco_120), .F0(mult_31s_19s_0_pp_8_19), 
    .F1(mult_31s_19s_0_pp_8_20), .FCO(mco_121));
  SLICE_409 SLICE_409( .C1(Cycle_period_7), .A1(Cycle_period_6), 
    .C0(Cycle_period_6), .FCI(mco_121), .F0(mult_31s_19s_0_pp_8_21), 
    .F1(mult_31s_19s_0_pp_8_22), .FCO(mco_122));
  SLICE_410 SLICE_410( .C1(Cycle_period_9), .A1(Cycle_period_8), 
    .C0(Cycle_period_8), .A0(Cycle_period_7), .FCI(mco_122), 
    .F0(mult_31s_19s_0_pp_8_23), .F1(mult_31s_19s_0_pp_8_24), .FCO(mco_123));
  SLICE_411 SLICE_411( .C1(Cycle_period_11), .A1(Cycle_period_10), 
    .C0(Cycle_period_10), .A0(Cycle_period_9), .FCI(mco_123), 
    .F0(mult_31s_19s_0_pp_8_25), .F1(mult_31s_19s_0_pp_8_26), .FCO(mco_124));
  SLICE_412 SLICE_412( .C1(Cycle_period_13), .A1(Cycle_period_12), 
    .C0(Cycle_period_12), .A0(Cycle_period_11), .FCI(mco_124), 
    .F0(mult_31s_19s_0_pp_8_27), .F1(mult_31s_19s_0_pp_8_28), .FCO(mco_125));
  SLICE_413 SLICE_413( .C1(Cycle_period_15), .A1(Cycle_period_14), 
    .C0(Cycle_period_14), .A0(Cycle_period_13), .FCI(mco_125), 
    .F0(mult_31s_19s_0_pp_8_29), .F1(mult_31s_19s_0_pp_8_30), .FCO(mco_126));
  SLICE_414 SLICE_414( .C1(Cycle_period_17), .A1(Cycle_period_16), 
    .C0(Cycle_period_16), .A0(Cycle_period_15), .FCI(mco_126), 
    .F0(mult_31s_19s_0_pp_8_31), .F1(mult_31s_19s_0_pp_8_32));
  SLICE_415 SLICE_415( .B1(cnt_19), .A1(Cycle_period_20), .B0(Cycle_period_19), 
    .A0(cnt_18), .FCI(n3942), .FCO(n3943));
  SLICE_416 SLICE_416( .FCO(mult_31s_19s_0_cin_lr_0));
  SLICE_417 SLICE_417( .B0(Cycle_period_31), .FCI(n4043), .F1(n2410));
  SLICE_418 SLICE_418( .A1(Cycle_period_30), .B0(Cycle_period_29), .FCI(n4042), 
    .FCO(n4043));
  SLICE_419 SLICE_419( .A1(Cycle_period_28), .B0(Cycle_period_27), .FCI(n4041), 
    .FCO(n4042));
  SLICE_420 SLICE_420( .A1(Cycle_period_26), .A0(Cycle_period_25), .FCI(n4040), 
    .FCO(n4041));
  SLICE_421 SLICE_421( .B1(Cycle_period_24), .B0(Cycle_period_23), .FCI(n4039), 
    .FCO(n4040));
  SLICE_422 SLICE_422( .B1(Cycle_period_22), .B0(Cycle_period_21), .FCI(n4038), 
    .FCO(n4039));
  SLICE_423 SLICE_423( .A1(Cycle_period_20), .B0(Cycle_period_19), .FCI(n4037), 
    .FCO(n4038));
  SLICE_424 SLICE_424( .A1(Cycle_period_18), .B0(Cycle_period_17), .FCI(n4036), 
    .FCO(n4037));
  SLICE_425 SLICE_425( .A1(Cycle_period_16), .A0(Cycle_period_15), .FCI(n4035), 
    .FCO(n4036));
  SLICE_426 SLICE_426( .B1(cnt_17), .A1(Cycle_period_18), .B0(Cycle_period_17), 
    .A0(cnt_16), .FCI(n3941), .FCO(n3942));
  SLICE_427 SLICE_427( .B1(Cycle_period_16), .A1(cnt_15), .B0(cnt_14), 
    .A0(Cycle_period_15), .FCI(n3940), .FCO(n3941));
  SLICE_428 SLICE_428( .B1(Cycle_period_14), .A1(cnt_13), .B0(cnt_12), 
    .A0(Cycle_period_13), .FCI(n3939), .FCO(n3940));
  SLICE_429 SLICE_429( .B1(Cycle_period_12), .A1(cnt_11), .B0(cnt_10), 
    .A0(Cycle_period_11), .FCI(n3938), .FCO(n3939));
  SLICE_430 SLICE_430( .B1(cnt_9), .A1(Cycle_period_10), .B0(Cycle_period_9), 
    .A0(cnt_8), .FCI(n3937), .FCO(n3938));
  SLICE_431 SLICE_431( .A1(Cycle_period_14), .A0(Cycle_period_13), .FCI(n4034), 
    .FCO(n4035));
  SLICE_432 SLICE_432( .B1(cnt_7), .A1(Cycle_period_8), .B0(Cycle_period_7), 
    .A0(cnt_6), .FCI(n3936), .FCO(n3937));
  SLICE_433 SLICE_433( .B1(cnt_5), .A1(Cycle_period_6), .FCO(n3936));
  SLICE_434 SLICE_434( .FCI(n3935), .F0(n2480));
  SLICE_435 SLICE_435( .D1(n4398), .C1(speed_up), .B1(n2445), .A1(n2158), 
    .D0(n4398), .C0(speed_up), .B0(n2445), .A0(n2160), 
    .DI1(Cycle_period_31_N_33_8), .DI0(Cycle_period_31_N_33_6), 
    .CE(clk_c_enable_33), .CLK(clk_c), .F0(Cycle_period_31_N_33_6), 
    .Q0(Cycle_period_6), .F1(Cycle_period_31_N_33_8), .Q1(Cycle_period_8));
  SLICE_436 SLICE_436( .D1(speed_up), .C1(n8), .B1(speed_down), .A1(n2155), 
    .D0(n8_adj_1), .C0(n4397), .A0(n2156), .DI1(Cycle_period_31_N_33_11), 
    .DI0(Cycle_period_31_N_33_10), .CE(clk_c_enable_33), .CLK(clk_c), 
    .F0(Cycle_period_31_N_33_10), .Q0(Cycle_period_10), 
    .F1(Cycle_period_31_N_33_11), .Q1(Cycle_period_11));
  SLICE_437 SLICE_437( .D1(speed_up), .C1(n2445), .B1(n2152), .A1(n4398), 
    .D0(speed_down), .C0(n8), .B0(n2154), .A0(speed_up), 
    .DI1(Cycle_period_31_N_33_14), .DI0(Cycle_period_31_N_33_12), 
    .CE(clk_c_enable_33), .CLK(clk_c), .F0(Cycle_period_31_N_33_12), 
    .Q0(Cycle_period_12), .F1(Cycle_period_31_N_33_14), .Q1(Cycle_period_14));
  SLICE_438 SLICE_438( .D1(n4398), .C1(n2147), .B1(n2445), .A1(speed_up), 
    .D0(n2151), .C0(n8_adj_1), .A0(n4397), .DI1(Cycle_period_31_N_33_19), 
    .DI0(Cycle_period_31_N_33_15), .CE(clk_c_enable_33), .CLK(clk_c), 
    .F0(Cycle_period_31_N_33_15), .Q0(Cycle_period_15), 
    .F1(Cycle_period_31_N_33_19), .Q1(Cycle_period_19));
  SLICE_439 SLICE_439( .D1(n2148), .C1(n2445), .D0(n2148), .C0(speed_down), 
    .A0(n2410), .DI0(Cycle_period_31_N_33_18), .M0(speed_up), 
    .CE(clk_c_enable_33), .CLK(clk_c), .OFX0(Cycle_period_31_N_33_18), 
    .Q0(Cycle_period_18));
  SLICE_440 SLICE_440( .D1(n2145), .C1(speed_down), .B1(n8), .A1(speed_up), 
    .D0(n2146), .C0(n2445), .B0(speed_up), .A0(n4398), 
    .DI1(Cycle_period_31_N_33_21), .DI0(Cycle_period_31_N_33_20), 
    .CE(clk_c_enable_33), .CLK(clk_c), .F0(Cycle_period_31_N_33_20), 
    .Q0(Cycle_period_20), .F1(Cycle_period_31_N_33_21), .Q1(Cycle_period_21));
  SLICE_441 SLICE_441( .D1(n4397), .C1(n2142), .A1(n8_adj_1), .D0(speed_up), 
    .C0(n2143), .B0(n2445), .A0(n4398), .DI1(Cycle_period_31_N_33_24), 
    .DI0(Cycle_period_31_N_33_23), .CE(clk_c_enable_33), .CLK(clk_c), 
    .F0(Cycle_period_31_N_33_23), .Q0(Cycle_period_23), 
    .F1(Cycle_period_31_N_33_24), .Q1(Cycle_period_24));
  SLICE_442 SLICE_442( .C1(n2445), .B1(speed_down), .A1(speed_up), .D0(n2141), 
    .C0(n4397), .A0(n8_adj_1), .DI0(Cycle_period_31_N_33_25), 
    .CE(clk_c_enable_33), .CLK(clk_c), .F0(Cycle_period_31_N_33_25), 
    .Q0(Cycle_period_25), .F1(n8_adj_1));
  SLICE_443 SLICE_443( .C1(LIGHT_CTL_0), .B1(LIGHT_CTL_7), .C0(LIGHT_CTL_0), 
    .B0(LIGHT_CTL_7), .A0(LIGHT_CTL_2), .DI0(LIGHT_CTL_31_N_309_0), 
    .CE(clk_c_enable_19), .LSR(clr), .CLK(clk_c), .F0(LIGHT_CTL_31_N_309_0), 
    .Q0(LIGHT_CTL_0), .F1(n3230));
  SLICE_444 SLICE_444( .D1(LIGHT_CTL_2), .B1(LIGHT_CTL_0), .A1(LIGHT_CTL_7), 
    .D0(LIGHT_CTL_2), .B0(LIGHT_CTL_0), .A0(LIGHT_CTL_7), .DI1(n4210), 
    .DI0(n4206), .CE(clk_c_enable_4), .LSR(clr), .CLK(clk_c), .F0(n4206), 
    .Q0(LIGHT_CTL_2), .F1(n4210), .Q1(LIGHT_CTL_7));
  SLICE_445 SLICE_445( .D1(COUNT1_17_N_290_10), .C1(COUNT1_17_N_290_9), 
    .B1(COUNT1_17_N_290_14), .A1(COUNT1_17_N_290_7), .D0(n4295), .C0(n4321), 
    .B0(COUNT1_17_N_290_12), .A0(n4293), .DI0(brightness_N_507), 
    .CE(brightness_in_c), .CLK(clk_c), .F0(brightness_N_507), .Q0(brightness), 
    .F1(n4321));
  SLICE_446 SLICE_446( .D1(n21), .C1(n4281), .B1(n87_N_179_17), 
    .A1(n87_N_179_2), .D0(n4279), .C0(n4314), .B0(n4229), .A0(n28), 
    .DI0(clr_N_509), .CE(clrin_c), .CLK(clk_c), .F0(clr_N_509), .Q0(clr), 
    .F1(n4314));
  SLICE_447 SLICE_447( .C1(LIGHT_CTL_2), .A1(LIGHT_CTL_0), .C0(cur1_3), 
    .A0(LIGHT_CTL_0), .DI0(n966), .LSR(n1844), .CLK(clk_c), .F0(n966), 
    .Q0(cur1_3), .F1(n3159));
  SLICE_448 SLICE_448( .D1(n293_N_253_1), .C1(n4263), .B1(n4257), 
    .A1(n293_N_253_0), .D0(n293_N_253_12), .C0(n4306), .B0(n4299), .A0(n4289), 
    .DI0(speed_down_N_505), .CE(speed_down_in_c), .CLK(clk_c), 
    .F0(speed_down_N_505), .Q0(speed_down), .F1(n4299));
  SLICE_449 SLICE_449( .D1(n190_N_216_12), .C1(n190_N_216_14), 
    .B1(n190_N_216_7), .A1(n190_N_216_10), .D0(n4283), .C0(n4318), 
    .B0(n190_N_216_9), .A0(n4243), .DI0(speed_up_N_503), .CE(speed_up_in_c), 
    .CLK(clk_c), .F0(speed_up_N_503), .Q0(speed_up), .F1(n4318));
  SLICE_450 SLICE_450( .D1(n93), .C1(n3539), .B1(n94), .A1(n95), .D0(n90), 
    .C0(n91), .B0(n3626), .A0(n92), .F0(n3632), .F1(n3626));
  SLICE_451 SLICE_451( .D1(LIGHT_CTL_2), .C1(brightness), .B1(LIGHT_CTL_7), 
    .A1(LIGHT_CTL_0), .C0(clr), .A0(clk_c_enable_4), .F0(clk_c_enable_19), 
    .F1(clk_c_enable_4));
  SLICE_452 SLICE_452( .D1(n301), .C1(n299), .B1(n300), .A1(n3535), .D0(n296), 
    .C0(n3612), .B0(n297), .A0(n298), .F0(n3672), .F1(n3612));
  SLICE_453 SLICE_453( .D1(n198), .C1(n3553), .B1(n196), .A1(n197), .D0(n193), 
    .C0(n3610), .B0(n195), .A0(n194), .F0(n3666), .F1(n3610));
  SLICE_454 SLICE_454( .D1(COUNT1_11), .C1(COUNT1_10), .B1(n3513), 
    .A1(COUNT1_9), .D0(COUNT1_12), .C0(n3644), .B0(COUNT1_13), .A0(COUNT1_14), 
    .F0(n3676), .F1(n3644));
  SLICE_455 SLICE_455( .D1(n190_N_216_6), .B1(n190_N_216_1), .D0(n190_N_216_2), 
    .C0(n4211), .B0(n190_N_216_13), .A0(n190_N_216_15), .F0(n4243), .F1(n4211));
  SLICE_456 SLICE_456( .D1(n190_N_216_5), .C1(n190_N_216_4), .B1(n190_N_216_3), 
    .A1(n190_N_216_17), .D0(n190_N_216_0), .C0(n4269), .B0(n190_N_216_16), 
    .A0(n4265), .F0(n4283), .F1(n4269));
  SLICE_457 SLICE_457( .C1(n293_N_253_11), .A1(n293_N_253_4), 
    .D0(n293_N_253_2), .C0(n4249), .B0(n293_N_253_16), .A0(n293_N_253_15), 
    .F0(n4289), .F1(n4249));
  SLICE_458 SLICE_458( .D1(COUNT1_17_N_290_4), .A1(COUNT1_17_N_290_11), 
    .D0(COUNT1_17_N_290_15), .C0(n4217), .B0(COUNT1_17_N_290_16), 
    .A0(COUNT1_17_N_290_2), .F0(n4295), .F1(n4217));
  SLICE_459 SLICE_459( .C1(COUNT1_17_N_290_3), .A1(COUNT1_17_N_290_5), 
    .D0(COUNT1_17_N_290_1), .C0(n4219), .B0(n4275), .A0(COUNT1_17_N_290_0), 
    .F0(n4293), .F1(n4219));
  SLICE_460 SLICE_460( .D1(n2410), .C1(clr), .A1(speed_down), .D0(n2445), 
    .C0(n10), .B0(speed_up), .F0(n3326), .F1(n10));
  SLICE_461 SLICE_461( .D1(speed_down), .C1(n2410), .A1(speed_up), .C0(n2410), 
    .B0(n2445), .A0(speed_up), .F0(n8), .F1(n4397));
  SLICE_462 SLICE_462( .D1(speed_up), .B1(clr), .A1(speed_down), 
    .D0(speed_down), .C0(n2410), .F0(n4398), .F1(clk_c_enable_33));
  SLICE_463 SLICE_463( .B1(Cycle_period_31), .A1(LIGHT_CTL_0), 
    .D0(LIGHT_CTL_2), .B0(Cycle_period_31), .F0(mult_31s_19s_0_mult_2_14_n3), 
    .F1(mult_31s_19s_0_mult_0_15_n2));
  SLICE_464 SLICE_464( .D1(n293_N_253_17), .C1(n293_N_253_8), 
    .B1(n293_N_253_13), .A1(n293_N_253_6), .C0(n293_N_253_5), 
    .B0(n293_N_253_3), .F0(n4257), .F1(n4263));
  SLICE_465 SLICE_465( .B1(n87_N_179_12), .A1(n87_N_179_10), .D0(n87_N_179_8), 
    .C0(n87_N_179_13), .B0(n87_N_179_6), .A0(n87_N_179_1), .F0(n4281), 
    .F1(n21));
  SLICE_466 SLICE_466( .C1(n87_N_179_4), .A1(n87_N_179_15), .D0(n87_N_179_7), 
    .C0(n87_N_179_14), .B0(n87_N_179_16), .A0(n87_N_179_9), .F0(n28), 
    .F1(n4229));
  SLICE_467 SLICE_467( .D1(n302), .C1(n303), .D0(n96), .C0(n97), .F0(n3539), 
    .F1(n3535));
  SLICE_468 SLICE_468( .D1(n191), .C1(n192), .A1(n190), .D0(n293), .C0(n294), 
    .A0(n295), .F0(n4046), .F1(n4045));
  SLICE_469 SLICE_469( .D1(n2480), .B1(cnt_31__N_437), .C0(n89), .B0(n87), 
    .A0(n88), .F0(n4053), .F1(n1844));
  SLICE_470 SLICE_470( .D1(n293_N_253_9), .C1(n293_N_253_7), 
    .B1(n293_N_253_14), .A1(n293_N_253_10), .D0(n199), .A0(n200), .F0(n3553), 
    .F1(n4306));
  SLICE_471 SLICE_471( .D1(COUNT1_15), .B1(COUNT1_16), .A1(COUNT1_17), 
    .C0(COUNT1_7), .B0(COUNT1_8), .F0(n3513), .F1(n4047));
  SLICE_472 SLICE_472( .A1(n2585), .D0(n87_N_179_11), .C0(n87_N_179_3), 
    .B0(n87_N_179_0), .A0(n87_N_179_5), .F0(n4279), .F1(LED_SIG_c));
  SLICE_473 SLICE_473( .D1(COUNT1_17_N_290_17), .C1(COUNT1_17_N_290_6), 
    .B1(COUNT1_17_N_290_8), .A1(COUNT1_17_N_290_13), .B0(n190_N_216_8), 
    .A0(n190_N_216_11), .F0(n4265), .F1(n4275));
  SLICE_474 SLICE_474( .F0(VCC_net), .F1(mult_31s_19s_0_mult_0_15_n2_1));
  speed_up_in speed_up_in_I( .PADDI(speed_up_in_c), .speed_up_in(speed_up_in));
  clrin clrin_I( .PADDI(clrin_c), .clrin(clrin));
  clk clk_I( .PADDI(clk_c), .clk(clk));
  LED_SIG LED_SIG_I( .PADDO(LED_SIG_c), .LED_SIG(LED_SIG));
  brightness_in brightness_in_I( .PADDI(brightness_in_c), 
    .brightness_in(brightness_in));
  speed_down_in speed_down_in_I( .PADDI(speed_down_in_c), 
    .speed_down_in(speed_down_in));
  GSR_INST GSR_INST( .GSRNET(~clrin_c));
  PUR PUR_INST( .PUR(VCC_net));
endmodule

module SLICE_0 ( input B1, A0, FCI, output FCO );
  wire   GNDI;

  ccu2 add_1308_10( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h3CCC;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module SLICE_1 ( input B1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20001 add_1308_8( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3333;
  defparam inst1.INIT1 = 16'h3CCC;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_2 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_102_i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_102_i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_67_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_3 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_102_i10( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_102_i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_67_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_4 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_102_i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_102_i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_67_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_5 ( input B1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20003 sub_327_add_2_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF555;
  defparam inst1.INIT1 = 16'hF333;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_6 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_102_i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_102_i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_67_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_7 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_102_i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_102_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_67_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_8 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_337_add_2_5( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h3999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_9 ( input C1, B1, A1, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre0005 COUNT1_42_i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20006 add_8_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0005 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h8787;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_10 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_337_add_2_3( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_11 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20007 sub_337_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_12 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0008 cur1__i31( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20009 add_154_30( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0008 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module ccu20009 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_13 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur1__i30( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur1__i29( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_154_28( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_14 ( input B1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20010 sub_327_add_2_5( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20010 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0CCC;
  defparam inst1.INIT1 = 16'h0CCC;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_15 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur1__i28( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur1__i27( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_154_26( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_16 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur1__i26( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur1__i25( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_154_24( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_17 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur1__i24( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur1__i23( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_154_22( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_18 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20011 sub_331_add_2_5( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20011 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3999;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_19 ( input B1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20012 sub_327_add_2_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20012 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF555;
  defparam inst1.INIT1 = 16'h0CCC;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_20 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20013 sub_331_add_2_3( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20013 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3999;
  defparam inst1.INIT1 = 16'h3999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_21 ( input B1, output FCO );
  wire   GNDI;

  ccu20014 sub_327_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20014 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0CCC;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_22 ( input B0, A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i31( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20015 cur2_420_add_4_33( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20015 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_23 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i30( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i29( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_31( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20016 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_24 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20017 sub_331_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20017 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h3999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_25 ( input FCI, output F0 );
  wire   GNDI;

  ccu20018 sub_337_add_2_cout( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20018 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_26 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20019 sub_331_add_2_21( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20019 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_27 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_331_add_2_19( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_28 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_331_add_2_29( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_29 ( input B1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20020 add_1308_6( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20020 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h3333;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_30 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i28( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i27( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_29( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_31 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_102_i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_102_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_67_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_32 ( input A1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20021 add_1308_12( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20021 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3CCC;
  defparam inst1.INIT1 = 16'h5AAA;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_33 ( input A1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20022 add_1308_4( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20022 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3CCC;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_34 ( input A1, B0, A0, output FCO );
  wire   GNDI;

  ccu20023 add_1308_2( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20023 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h1000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_35 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i26( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i25( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_27( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_36 ( input FCI, output F0 );
  wire   GNDI;

  ccu20018 add_721_cout( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_37 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_721_8( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_38 ( input A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 add_721_6( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20024 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'hf000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_39 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20025 add_721_4( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20025 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3666;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_40 ( input C1, B1, A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre COUNT1_102_i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20006 add_67_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_41 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre COUNT1_72_i17( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20009 add_37_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_42 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_72_i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_72_i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_37_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_43 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_72_i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_72_i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_37_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_44 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_72_i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_72_i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_37_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_45 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_72_i10( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_72_i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_37_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_46 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_72_i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_72_i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_37_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_47 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur1__i22( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur1__i21( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_154_20( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_48 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur1__i20( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur1__i19( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_154_18( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_49 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur1__i18( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur1__i17( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_154_16( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_50 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur1__i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur1__i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 add_154_14( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_51 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur1__i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur1__i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20026 add_154_12( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20026 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3666;
  defparam inst1.INIT1 = 16'h3666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_52 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur1__i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur1__i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20025 add_154_10( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_53 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur1__i10( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur1__i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20025 add_154_8( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_54 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur1__i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur1__i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 add_154_6( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20027 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h3666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_55 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20019 sub_337_add_2_29( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_56 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_337_add_2_27( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_57 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20013 sub_337_add_2_25( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_58 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_337_add_2_23( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_59 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20019 sub_331_add_2_17( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_60 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20019 sub_331_add_2_15( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_61 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20019 sub_331_add_2_27( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_62 ( input B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20028 add_721_2( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20028 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7000;
  defparam inst1.INIT1 = 16'hf000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_63 ( input FCI, output F0 );
  wire   GNDI;

  ccu20018 add_727_cout( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_64 ( input B1, B0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20029 add_727_10( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20029 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3CCC;
  defparam inst1.INIT1 = 16'h3CCC;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_65 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20025 add_727_8( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_66 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20030 add_727_6( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20030 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3666;
  defparam inst1.INIT1 = 16'h5AAA;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_67 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20025 add_727_4( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_68 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_72_i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_72_i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_37_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_69 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_72_i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_72_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_37_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_70 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_72_i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_72_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_37_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_71 ( input C1, B1, A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre COUNT1_72_i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20006 add_37_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_72 ( input A0, DI0, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre0005 COUNT1_42_i17( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20009 add_8_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_73 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0005 COUNT1_42_i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 COUNT1_42_i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 add_8_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_74 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0005 COUNT1_42_i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 COUNT1_42_i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 add_8_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_75 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur1__i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur1__i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20025 add_154_4( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_76 ( input A1, B0, A0, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0008 cur1__i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20031 add_154_2( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20031 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7000;
  defparam inst1.INIT1 = 16'h5AAA;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_77 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i24( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i23( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_25( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_78 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre COUNT1_i17( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20009 add_97_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_79 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_97_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_80 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_97_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_81 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_97_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_82 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_i10( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_97_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_83 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i22( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i21( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_23( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_84 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i20( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i19( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_21( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_85 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i18( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i17( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_19( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_86 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_17( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_87 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_15( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_88 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_337_add_2_21( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_89 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_13( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_90 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_337_add_2_19( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_91 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i10( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_11( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_92 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20013 sub_337_add_2_17( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_93 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_337_add_2_15( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_94 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20019 sub_331_add_2_13( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_95 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_9( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_96 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20019 sub_331_add_2_11( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_97 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_7( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_98 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_5( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_99 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cur2_420__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 cur2_420_add_4_3( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_100 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0008 cur2_420__i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20032 cur2_420_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20032 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_101 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i31( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20033 cnt_421_add_4_33( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20033 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_102 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i28( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i27( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_29( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20034 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_103 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i26( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i25( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_27( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_104 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20019 sub_331_add_2_25( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_105 ( input A1, B0, A0, output F1, FCO );
  wire   GNDI;

  ccu20031 add_727_2( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_106 ( input B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20035 sub_333_add_2_27( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20035 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3999;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_107 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20019 sub_333_add_2_25( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_108 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_333_add_2_23( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_109 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20013 sub_333_add_2_21( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_110 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_333_add_2_19( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_111 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i24( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i23( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_25( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_112 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0005 COUNT1_42_i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 COUNT1_42_i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 add_8_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_113 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0005 COUNT1_42_i10( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 COUNT1_42_i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 add_8_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_114 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i30( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i29( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_31( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_115 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i22( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i21( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_23( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_116 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i20( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i19( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_117 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i18( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i17( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_118 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_119 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_120 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_121 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0005 COUNT1_42_i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 COUNT1_42_i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 add_8_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_122 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0005 COUNT1_42_i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 COUNT1_42_i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 add_8_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_123 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0005 COUNT1_42_i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 COUNT1_42_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 add_8_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_124 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0005 COUNT1_42_i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0005 COUNT1_42_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20002 add_8_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_125 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_97_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_126 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_97_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_127 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_97_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_128 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_97_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_129 ( input C1, B1, A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre COUNT1_i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20006 add_97_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_130 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre COUNT1_102_i17( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20009 add_67_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_131 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_102_i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_102_i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_67_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_132 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre COUNT1_102_i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre COUNT1_102_i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20002 add_67_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_133 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_337_add_2_13( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_134 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_337_add_2_11( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_135 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20013 sub_337_add_2_9( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_136 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_337_add_2_7( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_137 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20011 sub_331_add_2_9( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_138 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_331_add_2_7( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_139 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20011 sub_331_add_2_23( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_140 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20019 sub_333_add_2_17( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_141 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20011 sub_333_add_2_15( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_142 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_333_add_2_13( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_143 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20011 sub_333_add_2_11( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_144 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20019 sub_333_add_2_9( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_145 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20011 sub_333_add_2_7( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_146 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i10( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_147 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_148 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_333_add_2_5( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_149 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_150 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_151 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 cnt_421__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20034 cnt_421_add_4_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_152 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0008 cnt_421__i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20032 cnt_421_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_153 ( input B0, FCI, output F1 );
  wire   GNDI;

  ccu20036 add_1308_26( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20036 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF333;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_154 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20013 sub_333_add_2_3( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_155 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20017 sub_333_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_156 ( input B0, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0008 Cycle_period_i31( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20015 add_324_27( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_157 ( input B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0008 Cycle_period_i30( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 Cycle_period_i29( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 add_324_25( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_158 ( input B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0008 Cycle_period_i28( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 Cycle_period_i27( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20016 add_324_23( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_159 ( input B1, A1, B0, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0008 Cycle_period_i26( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20016 add_324_21( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_160 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20027 add_324_19( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_161 ( output FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_cin_lr_add_2( .A0(GNDI), .A1(GNDI), .B0(GNDI), 
    .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module alu2_mult ( input A0, A1, B0, B1, CI, output S0, S1, CO1 );

  FADD2B INST01( .A0(A0), .A1(A1), .B0(B0), .B1(B1), .CI(CI), .COUT(CO1), 
    .S0(S0), .S1(S1));
endmodule

module SLICE_162 ( output FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_cin_lr_add_4( .A0(GNDI), .A1(GNDI), .B0(GNDI), 
    .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module SLICE_163 ( output FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_cin_lr_add_6( .A0(GNDI), .A1(GNDI), .B0(GNDI), 
    .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module SLICE_164 ( output FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_cin_lr_add_8( .A0(GNDI), .A1(GNDI), .B0(GNDI), 
    .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module SLICE_165 ( output FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_cin_lr_add_10( .A0(GNDI), .A1(GNDI), .B0(GNDI), 
    .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module SLICE_166 ( output FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_cin_lr_add_12( .A0(GNDI), .A1(GNDI), .B0(GNDI), 
    .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module SLICE_167 ( output FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_cin_lr_add_14( .A0(GNDI), .A1(GNDI), .B0(GNDI), 
    .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module SLICE_168 ( output FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_cin_lr_add_16( .A0(GNDI), .A1(GNDI), .B0(GNDI), 
    .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module SLICE_169 ( input D1, output FCO );
  wire   GNDI;

  alu2_mult Cadd_mult_31s_19s_0_0_1( .A0(GNDI), .A1(D1), .B0(GNDI), .B1(GNDI), 
    .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_170 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_2( .A0(D0), .A1(A1), .B0(B0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_171 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_3( .A0(D0), .A1(A1), .B0(A0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_172 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_4( .A0(B0), .A1(D1), .B0(D0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_173 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_5( .A0(D0), .A1(D1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_174 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_6( .A0(A0), .A1(D1), .B0(D0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_175 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_7( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_176 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_8( .A0(D0), .A1(B1), .B0(B0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_177 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_9( .A0(D0), .A1(D1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_178 ( input D1, B1, B0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_10( .A0(A0), .A1(D1), .B0(B0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_179 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_11( .A0(D0), .A1(A1), .B0(A0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_180 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_12( .A0(B0), .A1(D1), .B0(D0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_181 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_13( .A0(D0), .A1(A1), .B0(B0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_182 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_14( .A0(A0), .A1(B1), .B0(D0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_183 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_0_15( .A0(D0), .A1(A1), .B0(A0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_184 ( input D1, B1, D0, A0, FCI, output F0, F1 );

  alu2_mult mult_31s_19s_0_add_0_16( .A0(D0), .A1(D1), .B0(A0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_185 ( input B1, A1, B0, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0008 Cycle_period_i22( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20037 add_324_17( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20037 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_186 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20038 add_324_15( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20038 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3999;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_187 ( input A1, output F1, FCO );
  wire   GNDI;

  alu2_mult Cadd_mult_31s_19s_0_1_1( .A0(GNDI), .A1(A1), .B0(GNDI), .B1(GNDI), 
    .CI(), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_188 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_1_2( .A0(D0), .A1(B1), .B0(A0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_189 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_1_3( .A0(D0), .A1(A1), .B0(A0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_190 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_1_4( .A0(D0), .A1(D1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_191 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_1_5( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_192 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_1_6( .A0(D0), .A1(D1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_193 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_1_7( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_194 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_1_8( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_195 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_1_9( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_196 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_1_10( .A0(B0), .A1(D1), .B0(D0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_197 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_1_11( .A0(A0), .A1(A1), .B0(D0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_198 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_1_12( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_199 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_1_13( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_200 ( input B1, A1, D0, A0, FCI, output F0, F1 );

  alu2_mult mult_31s_19s_0_add_1_14( .A0(D0), .A1(B1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_201 ( input B1, A1, B0, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0039 Cycle_period_i17( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20040 add_324_13( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0039 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3JY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module ccu20040 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_202 ( input B1, A1, B0, A0, DI1, CE, LSR, CLK, FCI, output F0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0039 Cycle_period_i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20019 add_324_11( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_203 ( input A1, output F1, FCO );
  wire   GNDI;

  alu2_mult Cadd_mult_31s_19s_0_2_1( .A0(GNDI), .A1(A1), .B0(GNDI), .B1(GNDI), 
    .CI(), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_204 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_2_2( .A0(D0), .A1(B1), .B0(A0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_205 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_2_3( .A0(A0), .A1(D1), .B0(D0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_206 ( input B1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_2_4( .A0(D0), .A1(B1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_207 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_2_5( .A0(B0), .A1(B1), .B0(D0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_208 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_2_6( .A0(D0), .A1(A1), .B0(A0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_209 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_2_7( .A0(B0), .A1(A1), .B0(D0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_210 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_2_8( .A0(A0), .A1(B1), .B0(D0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_211 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_2_9( .A0(B0), .A1(A1), .B0(D0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_212 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_2_10( .A0(D0), .A1(B1), .B0(A0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_213 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_2_11( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_214 ( input B1, A1, D0, B0, FCI, output F0, F1 );

  alu2_mult mult_31s_19s_0_add_2_12( .A0(B0), .A1(B1), .B0(D0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_215 ( input D1, output F1, FCO );
  wire   GNDI;

  alu2_mult Cadd_mult_31s_19s_0_3_1( .A0(GNDI), .A1(D1), .B0(GNDI), .B1(GNDI), 
    .CI(), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_216 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_3_2( .A0(D0), .A1(D1), .B0(A0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_217 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_3_3( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_218 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_3_4( .A0(D0), .A1(D1), .B0(A0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_219 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_3_5( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_220 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_3_6( .A0(A0), .A1(D1), .B0(D0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_221 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_3_7( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_222 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_3_8( .A0(A0), .A1(D1), .B0(D0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_223 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_3_9( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_224 ( input D1, A1, D0, B0, FCI, output F0, F1 );

  alu2_mult mult_31s_19s_0_add_3_10( .A0(D0), .A1(D1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_225 ( input B1, A1, B0, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0008 Cycle_period_i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20041 add_324_9( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20041 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h3999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_226 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20025 add_324_7( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_227 ( input B1, A1, B0, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0039 Cycle_period_i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20019 add_324_5( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_228 ( input B1, A1, B0, A0, DI0, CE, LSR, CLK, FCI, output F0, Q0, 
    F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0008 Cycle_period_i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20037 add_324_3( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_229 ( input D1, output F1, FCO );
  wire   GNDI, VCCI;

  alu2_mult Cadd_mult_31s_19s_0_4_1( .A0(GNDI), .A1(D1), .B0(GNDI), .B1(VCCI), 
    .CI(), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_230 ( input D1, D0, FCI, output F0, F1, FCO );
  wire   VCCI;

  alu2_mult mult_31s_19s_0_add_4_2( .A0(D0), .A1(D1), .B0(VCCI), .B1(VCCI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_231 ( input D1, D0, FCI, output F0, F1, FCO );
  wire   VCCI;

  alu2_mult mult_31s_19s_0_add_4_3( .A0(D0), .A1(D1), .B0(VCCI), .B1(VCCI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_232 ( input D1, A0, FCI, output F0, F1, FCO );
  wire   VCCI;

  alu2_mult mult_31s_19s_0_add_4_4( .A0(A0), .A1(D1), .B0(VCCI), .B1(VCCI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_233 ( input D1, D0, FCI, output F0, F1, FCO );
  wire   VCCI;

  alu2_mult mult_31s_19s_0_add_4_5( .A0(D0), .A1(D1), .B0(VCCI), .B1(VCCI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_234 ( input D1, D0, FCI, output F0, F1, FCO );
  wire   VCCI;

  alu2_mult mult_31s_19s_0_add_4_6( .A0(D0), .A1(D1), .B0(VCCI), .B1(VCCI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_235 ( input D1, D0, FCI, output F0, F1, FCO );
  wire   VCCI;

  alu2_mult mult_31s_19s_0_add_4_7( .A0(D0), .A1(D1), .B0(VCCI), .B1(VCCI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_236 ( input D1, D0, FCI, output F0, F1 );
  wire   VCCI;

  alu2_mult mult_31s_19s_0_add_4_8( .A0(D0), .A1(D1), .B0(VCCI), .B1(VCCI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1());
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_237 ( input B1, A1, A0, output F1, FCO );
  wire   GNDI;

  ccu20042 add_324_1( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20042 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_238 ( input D1, output F1, FCO );
  wire   GNDI;

  alu2_mult Cadd_mult_31s_19s_0_5_1( .A0(GNDI), .A1(D1), .B0(GNDI), .B1(GNDI), 
    .CI(), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_239 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_5_2( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_240 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_5_3( .A0(D0), .A1(D1), .B0(B0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_241 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_5_4( .A0(D0), .A1(D1), .B0(B0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_242 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_5_5( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_243 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_5_6( .A0(B0), .A1(D1), .B0(D0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_244 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_5_7( .A0(D0), .A1(A1), .B0(B0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_245 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_5_8( .A0(B0), .A1(D1), .B0(D0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_246 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_5_9( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_247 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_5_10( .A0(D0), .A1(D1), .B0(A0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_248 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_5_11( .A0(A0), .A1(D1), .B0(D0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_249 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_5_12( .A0(B0), .A1(D1), .B0(D0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_250 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_5_13( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_251 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_5_14( .A0(B0), .A1(D1), .B0(D0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_252 ( input D1, A1, D0, B0, FCI, output F0, F1 );

  alu2_mult mult_31s_19s_0_add_5_15( .A0(D0), .A1(A1), .B0(B0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_253 ( input D1, output F1, FCO );
  wire   GNDI;

  alu2_mult Cadd_mult_31s_19s_0_6_1( .A0(GNDI), .A1(D1), .B0(GNDI), .B1(GNDI), 
    .CI(), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_254 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_6_2( .A0(D0), .A1(D1), .B0(B0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_255 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_6_3( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_256 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_6_4( .A0(D0), .A1(D1), .B0(B0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_257 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_6_5( .A0(D0), .A1(D1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_258 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_6_6( .A0(D0), .A1(D1), .B0(B0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_259 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_6_7( .A0(D0), .A1(A1), .B0(B0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_260 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_6_8( .A0(D0), .A1(D1), .B0(A0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_261 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_6_9( .A0(D0), .A1(A1), .B0(A0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_262 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_6_10( .A0(A0), .A1(D1), .B0(D0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_263 ( input D1, B1, D0, B0, FCI, output F0, F1 );

  alu2_mult mult_31s_19s_0_add_6_11( .A0(D0), .A1(D1), .B0(B0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_264 ( input A1, output F1, FCO );
  wire   GNDI, VCCI;

  alu2_mult Cadd_mult_31s_19s_0_7_1( .A0(GNDI), .A1(A1), .B0(GNDI), .B1(VCCI), 
    .CI(), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_265 ( input D1, D0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_add_7_2( .A0(D0), .A1(D1), .B0(GNDI), .B1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_266 ( input D1, D0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_add_7_3( .A0(D0), .A1(D1), .B0(GNDI), .B1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_267 ( input A1, D0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_add_7_4( .A0(D0), .A1(A1), .B0(GNDI), .B1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_268 ( input D1, D0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_add_7_5( .A0(D0), .A1(D1), .B0(GNDI), .B1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_269 ( input D1, D0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_add_7_6( .A0(D0), .A1(D1), .B0(GNDI), .B1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_270 ( input D1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_add_7_7( .A0(A0), .A1(D1), .B0(GNDI), .B1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_271 ( input D1, B0, FCI, output F0, F1 );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_add_7_8( .A0(B0), .A1(D1), .B0(GNDI), .B1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_272 ( input FCI, output F0 );
  wire   GNDI;

  ccu20018 sub_335_add_2_cout( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_273 ( input A1, output F1, FCO );
  wire   GNDI;

  alu2_mult Cadd_mult_31s_19s_0_8_1( .A0(GNDI), .A1(A1), .B0(GNDI), .B1(GNDI), 
    .CI(), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_274 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_8_2( .A0(A0), .A1(B1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_275 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_8_3( .A0(D0), .A1(D1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_276 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_8_4( .A0(D0), .A1(D1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_277 ( input B1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_8_5( .A0(D0), .A1(A1), .B0(A0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_278 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_8_6( .A0(A0), .A1(A1), .B0(D0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_279 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_8_7( .A0(D0), .A1(A1), .B0(A0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_280 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_8_8( .A0(D0), .A1(B1), .B0(A0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_281 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_8_9( .A0(A0), .A1(D1), .B0(D0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_282 ( input D1, A1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_8_10( .A0(A0), .A1(A1), .B0(D0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_283 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_8_11( .A0(B0), .A1(D1), .B0(D0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_284 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult mult_31s_19s_0_add_8_12( .A0(D0), .A1(D1), .B0(A0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_285 ( input D1, A1, B0, A0, FCI, output F0, F1 );

  alu2_mult mult_31s_19s_0_add_8_13( .A0(B0), .A1(A1), .B0(A0), .B1(D1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_286 ( input A1, output F1, FCO );
  wire   GNDI;

  alu2_mult Cadd_t_mult_31s_19s_0_9_1( .A0(GNDI), .A1(A1), .B0(GNDI), 
    .B1(GNDI), .CI(), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_287 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult t_mult_31s_19s_0_add_9_2( .A0(D0), .A1(D1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_288 ( input D1, A1, B0, A0, FCI, output F0, F1, FCO );

  alu2_mult t_mult_31s_19s_0_add_9_3( .A0(A0), .A1(D1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_289 ( input D1, B1, D0, A0, FCI, output F0, F1, FCO );

  alu2_mult t_mult_31s_19s_0_add_9_4( .A0(D0), .A1(D1), .B0(A0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_290 ( input D1, A1, B0, A0, FCI, output F0, F1, FCO );

  alu2_mult t_mult_31s_19s_0_add_9_5( .A0(A0), .A1(D1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_291 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult t_mult_31s_19s_0_add_9_6( .A0(D0), .A1(D1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_292 ( input D1, A1, D0, B0, FCI, output F0, F1, FCO );

  alu2_mult t_mult_31s_19s_0_add_9_7( .A0(D0), .A1(D1), .B0(B0), .B1(A1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_293 ( input D1, B1, B0, A0, FCI, output F0, F1, FCO );

  alu2_mult t_mult_31s_19s_0_add_9_8( .A0(B0), .A1(D1), .B0(A0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_294 ( input D1, B1, D0, A0, FCI, output F0 );

  alu2_mult t_mult_31s_19s_0_add_9_9( .A0(D0), .A1(D1), .B0(A0), .B1(B1), 
    .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_295 ( input B1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20043 add_1308_24( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20043 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3333;
  defparam inst1.INIT1 = 16'h3333;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_296 ( input A1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20044 add_1308_22( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20044 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3333;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_297 ( input D1, D0, FCI, output F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_0( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module alu2_mult0045 ( input A0, A1, C0, C1, B0, B1, D0, D1, CI, output S0, S1, 
    CO1 );

  MULT2 INST01( .A0(A0), .A1(C0), .A2(A1), .A3(C1), .B0(B0), .B1(D0), .B2(B1), 
    .B3(D1), .CI(CI), .P0(S0), .P1(S1), .CO(CO1));
endmodule

module SLICE_298 ( input D1, D0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_1( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_299 ( input D1, C1, A1, D0, C0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_2( .A0(GNDI), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_300 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_3( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_301 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_4( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_302 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_5( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_303 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_6( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_304 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_7( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_305 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_8( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_306 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_9( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_307 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_10( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_308 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_11( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_309 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_12( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_310 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_13( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_311 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_14( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_312 ( input D0, C0, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_0_15( .A0(A0), .A1(GNDI), .C0(C0), 
    .C1(GNDI), .B0(B0), .B1(GNDI), .D0(D0), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_313 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_2_0( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_314 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_2_1( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_315 ( input D1, C1, B1, A1, D0, C0, B0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_2_2( .A0(GNDI), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_316 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_2_3( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_317 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_2_4( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_318 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_2_5( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_319 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_2_6( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_320 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_2_7( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_321 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_2_8( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_322 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_2_9( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_323 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_2_10( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_324 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_2_11( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_325 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_2_12( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_326 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_2_13( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_327 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1 );

  alu2_mult0045 mult_31s_19s_0_mult_2_14( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_328 ( input D1, D0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_0( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_329 ( input D1, D0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_1( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_330 ( input D1, C1, A1, D0, C0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_2( .A0(GNDI), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_331 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_3( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_332 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_4( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_333 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_5( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_334 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_6( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_335 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_7( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_336 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_8( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_337 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_9( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_338 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_10( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_339 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_11( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_340 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_12( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_341 ( input D1, C1, A1, D0, C0, A0, FCI, output F0, F1 );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_4_13( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_342 ( input A1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20044 add_1308_20( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_343 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_6_0( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_344 ( input D1, B1, D0, B0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_6_1( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_345 ( input D1, C1, B1, A1, D0, C0, B0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_6_2( .A0(GNDI), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_346 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_6_3( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_347 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_6_4( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_348 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_6_5( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_349 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_6_6( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_350 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_6_7( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_351 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_6_8( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_352 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_6_9( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_353 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_6_10( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_354 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  alu2_mult0045 mult_31s_19s_0_mult_6_11( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_355 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1 );

  alu2_mult0045 mult_31s_19s_0_mult_6_12( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(B0), .B1(B1), .D0(D0), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_356 ( input A1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20044 add_1308_18( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_357 ( input B1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20020 add_1308_16( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_358 ( input FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_8_0( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_359 ( input FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_8_1( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_360 ( input C1, A1, C0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_8_2( .A0(GNDI), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_361 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_8_3( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_362 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_8_4( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_363 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_8_5( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_364 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_8_6( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_365 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_8_7( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_366 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_8_8( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_367 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_8_9( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_368 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_8_10( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_369 ( input C1, A1, C0, A0, FCI, output F0, F1 );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_8_11( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_370 ( input B1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20046 add_1308_14( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20046 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5AAA;
  defparam inst1.INIT1 = 16'h3333;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_371 ( input FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_10_0( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_372 ( input FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_10_1( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_373 ( input C1, A1, C0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_10_2( .A0(GNDI), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_374 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_10_3( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_375 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_10_4( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_376 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_10_5( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_377 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_10_6( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_378 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_10_7( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_379 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_10_8( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_380 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_10_9( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_381 ( input C1, A1, C0, A0, FCI, output F0, F1 );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_10_10( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_382 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_335_add_2_27( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_383 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_335_add_2_25( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_384 ( input FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_12_0( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_385 ( input FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_12_1( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_386 ( input C1, A1, C0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_12_2( .A0(GNDI), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_387 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_12_3( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_388 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_12_4( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_389 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_12_5( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_390 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_12_6( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_391 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_12_7( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_392 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_12_8( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_393 ( input C1, A1, C0, A0, FCI, output F0, F1 );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_12_9( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_394 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20013 sub_335_add_2_23( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_395 ( input FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_14_0( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_396 ( input FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_14_1( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_397 ( input C1, A1, C0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_14_2( .A0(GNDI), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_398 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_14_3( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_399 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_14_4( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_400 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_14_5( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_401 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_14_6( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_402 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_14_7( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_403 ( input C1, A1, C0, A0, FCI, output F0, F1 );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_14_8( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_404 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20013 sub_335_add_2_21( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_405 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_335_add_2_19( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_406 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20011 sub_335_add_2_17( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_407 ( input FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_16_0( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_408 ( input FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_16_1( .A0(GNDI), .A1(GNDI), .C0(GNDI), 
    .C1(GNDI), .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_409 ( input C1, A1, C0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_16_2( .A0(GNDI), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_410 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_16_3( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_411 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_16_4( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_412 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_16_5( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_413 ( input C1, A1, C0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_16_6( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_414 ( input C1, A1, C0, A0, FCI, output F0, F1 );
  wire   GNDI;

  alu2_mult0045 mult_31s_19s_0_mult_16_7( .A0(A0), .A1(A1), .C0(C0), .C1(C1), 
    .B0(GNDI), .B1(GNDI), .D0(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_415 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_335_add_2_15( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_416 ( output FCO );
  wire   GNDI;

  alu2_mult mult_31s_19s_0_cin_lr_add_0( .A0(GNDI), .A1(GNDI), .B0(GNDI), 
    .B1(GNDI), .CI(), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module SLICE_417 ( input B0, FCI, output F1 );
  wire   GNDI;

  ccu20047 sub_327_add_2_27( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20047 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3333;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_418 ( input A1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20048 sub_327_add_2_25( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20048 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF333;
  defparam inst1.INIT1 = 16'hF555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_419 ( input A1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20048 sub_327_add_2_23( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_420 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20049 sub_327_add_2_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20049 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0aaa;
  defparam inst1.INIT1 = 16'hf555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_421 ( input B1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20010 sub_327_add_2_19( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_422 ( input B1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20050 sub_327_add_2_17( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20050 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF333;
  defparam inst1.INIT1 = 16'hF333;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_423 ( input A1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20051 sub_327_add_2_15( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20051 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF333;
  defparam inst1.INIT1 = 16'h0AAA;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_424 ( input A1, B0, FCI, output FCO );
  wire   GNDI;

  ccu20052 sub_327_add_2_13( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20052 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0CCC;
  defparam inst1.INIT1 = 16'hF555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_425 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20053 sub_327_add_2_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20053 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0aaa;
  defparam inst1.INIT1 = 16'h0aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_426 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_335_add_2_13( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_427 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20011 sub_335_add_2_11( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_428 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20011 sub_335_add_2_9( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_429 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20011 sub_335_add_2_7( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_430 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_335_add_2_5( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_431 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20054 sub_327_add_2_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20054 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'hf555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_432 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 sub_335_add_2_3( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_433 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20017 sub_335_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_434 ( input FCI, output F0 );
  wire   GNDI;

  ccu20018 sub_331_add_2_cout( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_435 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut4 i1582_3_lut_4_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40055 i1_3_lut_4_lut_4_lut_adj_9( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0056 Cycle_period_i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre Cycle_period_i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8A8F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBAB0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0056 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module SLICE_436 ( input D1, C1, B1, A1, D0, C0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40057 i1_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 i1_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0056 Cycle_period_i11( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre Cycle_period_i10( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0B3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_437 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 i1_3_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 i1_3_lut_4_lut_adj_10( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre Cycle_period_i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0056 Cycle_period_i12( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCF88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0D5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_438 ( input D1, C1, B1, A1, D0, C0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40061 i1_3_lut_4_lut_4_lut_adj_8( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40062 i1_3_lut_adj_2( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre Cycle_period_i19( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre Cycle_period_i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF2A2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_439 ( input D1, C1, D0, C0, A0, DI0, M0, CE, CLK, output OFX0, Q0 );
  wire   GNDI, \SLICE_439/SLICE_439_K1_H1 , \SLICE_439/i1619/GATE_H0 , VCCI, 
         DI0_dly, CLK_dly, CE_dly;

  lut40063 SLICE_439_K1( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(\SLICE_439/SLICE_439_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \i1619/GATE ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(\SLICE_439/i1619/GATE_H0 ));
  vmuxregsre0056 Cycle_period_i18( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_439_K0K1MUX( .D0(\SLICE_439/i1619/GATE_H0 ), 
    .D1(\SLICE_439/SLICE_439_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAF0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module SLICE_440 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40065 i1_3_lut_4_lut_adj_11( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40066 i1599_3_lut_4_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0056 Cycle_period_i21( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0056 Cycle_period_i20( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCD05) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF311) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_441 ( input D1, C1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40067 i1_3_lut_adj_3( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 i1594_3_lut_4_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre Cycle_period_i24( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0056 Cycle_period_i23( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0F5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_442 ( input C1, B1, A1, D0, C0, A0, DI0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40069 i21_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40070 i1_3_lut_adj_4( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre Cycle_period_i25( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_443 ( input C1, B1, C0, B0, A0, DI0, CE, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40071 i1311_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40072 i1596_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0039 LIGHT_CTL_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3C3C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_444 ( input D1, B1, A1, D0, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40073 i1_2_lut_3_lut_adj_12( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 i1_2_lut_3_lut( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0008 LIGHT_CTL_i7( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0008 LIGHT_CTL_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0044) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_445 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, CE_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40075 i1590_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40076 i1591_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre brightness_194( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_NOTIN), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module SLICE_446 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, CE_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40077 i1583_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40078 i1585_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre clr_188( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_NOTIN), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_447 ( input C1, A1, C0, A0, DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40079 i1312_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 i1310_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0008 cur1__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5A5A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5A5A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_448 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, CE_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40081 i1568_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 i1576_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre speed_down_192( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_NOTIN), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_449 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, CE_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40082 i1587_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40083 i1588_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre speed_up_190( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_NOTIN), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_450 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40084 i1102_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40085 i1108_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFE0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_451 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40086 brightness_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40087 i1_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1060) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_452 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40088 i1088_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40089 i1148_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFC8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_453 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40090 i1086_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40091 i1142_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCC8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFA8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_454 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40092 i1120_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40093 i1152_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_455 ( input D1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40094 i1480_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 i1512_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_456 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40096 i1538_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40097 i1552_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_457 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40098 i1518_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 i1558_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_458 ( input D1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 i1486_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40081 i1564_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_459 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40098 i1488_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40101 i1562_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_460 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40102 i24_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 i23_3_lut( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h50FA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30FC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_461 ( input D1, C1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40104 i2_3_lut_rep_6( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40105 i21_3_lut_adj_1( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0500) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_462 ( input D1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40106 i1554_2_lut_3_lut( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40107 i1_2_lut_rep_7( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_463 ( input B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40108 ND2_t56( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40109 ND2_t53( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h33FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_464 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40110 i1532_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40111 i1526_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_465 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40112 i3_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40113 i1550_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_466 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40098 i1498_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40114 i10_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_467 ( input D1, C1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40107 i1011_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40107 i1015_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_468 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40115 i2_3_lut_adj_5( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40116 i2_3_lut( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_469 ( input D1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40117 i272_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40118 i2_3_lut_adj_6( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_470 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40119 i1575_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 i1029_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_471 ( input D1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40120 i2_3_lut_adj_7( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40121 i989_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_472 ( input A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40122 i339_1_lut( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 i1548_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_473 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40113 i1544_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40124 i1534_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_474 ( output F0, F1 );
  wire   GNDI;

  lut40125 ND2_t55( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40125 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));

  specify
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module speed_up_in ( output PADDI, input speed_up_in );

  xo2iobuf speed_up_in_pad( .Z(PADDI), .PAD(speed_up_in));

  specify
    (speed_up_in => PADDI) = (0:0:0,0:0:0);
    $width (posedge speed_up_in, 0:0:0);
    $width (negedge speed_up_in, 0:0:0);
  endspecify

endmodule

module xo2iobuf ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module clrin ( output PADDI, input clrin );

  xo2iobuf clrin_pad( .Z(PADDI), .PAD(clrin));

  specify
    (clrin => PADDI) = (0:0:0,0:0:0);
    $width (posedge clrin, 0:0:0);
    $width (negedge clrin, 0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );

  xo2iobuf clk_pad( .Z(PADDI), .PAD(clk));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge clk, 0:0:0);
    $width (negedge clk, 0:0:0);
  endspecify

endmodule

module LED_SIG ( input PADDO, output LED_SIG );
  wire   GNDI;

  xo2iobuf0126 LED_SIG_pad( .I(PADDO), .T(GNDI), .PAD(LED_SIG));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => LED_SIG) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0126 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module brightness_in ( output PADDI, input brightness_in );

  xo2iobuf brightness_in_pad( .Z(PADDI), .PAD(brightness_in));

  specify
    (brightness_in => PADDI) = (0:0:0,0:0:0);
    $width (posedge brightness_in, 0:0:0);
    $width (negedge brightness_in, 0:0:0);
  endspecify

endmodule

module speed_down_in ( output PADDI, input speed_down_in );

  xo2iobuf speed_down_in_pad( .Z(PADDI), .PAD(speed_down_in));

  specify
    (speed_down_in => PADDI) = (0:0:0,0:0:0);
    $width (posedge speed_down_in, 0:0:0);
    $width (negedge speed_down_in, 0:0:0);
  endspecify

endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  INV INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule
