
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.10.0.111.2

// ldbanno -n Verilog -o lab1_impl1_mapvo.vo -w -neg -gui -msgset C:/Users/70735/Desktop/lab1/promote.xml lab1_impl1_map.ncd 
// Netlist created on Wed Dec 09 21:38:59 2020
// Netlist written on Wed Dec 09 21:39:19 2020
// Design is for device LCMXO2-4000HC
// Design is for package CSBGA132
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module Lab1 ( clk, button, column, sck, rck, din, row, seven_segment_disp_left, 
              seven_segment_disp_right, seven_segment_disp_dp );
  input  clk;
  input  [3:0] button;
  input  [3:0] column;
  output sck, rck, din;
  output [3:0] row;
  output [6:0] seven_segment_disp_left;
  output [6:0] seven_segment_disp_right;
  output [1:0] seven_segment_disp_dp;
  wire   cnt_debounce_14, cnt_debounce_13, n76_adj_19, n77_adj_18, 
         sck_c_c_enable_63, n5097, sck_c_c, n7104, n7105, location_30, 
         location_29, n7071, n1729, n1728, n7072, cnt_debounce2_14, 
         cnt_debounce2_13, n86_adj_28, n87_adj_27, sck_c_c_enable_57, n5098, 
         n7053, n7054, location_28, location_27, n7070, n1731, n1730, 
         location_26, location_25, n7069, n1733, n1732, cnt_debounce_12, 
         cnt_debounce_11, n78_adj_17, n79_adj_16, n7103, cnt_debounce_10, 
         cnt_debounce_9, n80_adj_15, n81_adj_14, n7102, cnt_debounce2_2, 
         cnt_debounce2_1, n98, n99, n7047, n7048, cnt_debounce_8, 
         cnt_debounce_7, n82_adj_13, n83_adj_12, n7101, cnt_debounce_6, 
         cnt_debounce_5, n84_adj_11, n85_adj_10, n7100, cnt_debounce_4, 
         cnt_debounce_3, n86_adj_9, n87_adj_8, n7099, cnt_debounce_2, 
         cnt_debounce_1, n88_adj_7, n89_adj_6, n7098, cnt_debounce_0, 
         n90_adj_5, cnt_disp_1ms_16, cnt_disp_1ms_15, n74, n75, button_flag, 
         sck_c_c_enable_61, n7096, cnt_disp_1ms_14, cnt_disp_1ms_13, n76, n77, 
         n7095, cnt_disp_1ms_12, cnt_disp_1ms_11, n78, n79, n7094, 
         cnt_debounce2_0, n100, cnt_disp_1ms_10, cnt_disp_1ms_9, n80, n81, 
         n7093, location_24, location_23, n7068, n1735, n1734, cnt_disp_1ms_8, 
         cnt_disp_1ms_7, n82, n83, n7092, location_22, location_21, n7067, 
         n1737, n1736, location_31, n7166, n3317, cnt_disp_1ms_6, 
         cnt_disp_1ms_5, n84, n85, n7091, location_20, location_19, n7066, 
         n1739, n1738, n7165, cnt_disp_1ms_4, cnt_disp_1ms_3, n86, n87, n7090, 
         location_18, location_17, n7065, n1741, n1740, n7164, cnt_disp_1ms_2, 
         cnt_disp_1ms_1, n88, n89, n7089, location_16, location_15, n7064, 
         n1743, n1742, cnt_debounce2_12, cnt_debounce2_11, n88_adj_26, 
         n89_adj_25, n7052, cnt_debounce2_10, cnt_debounce2_9, n90_adj_24, n91, 
         n7051, n7163, cnt_disp_1ms_0, n90, location_14, location_13, n7063, 
         n1745, n1744, cnt_debounce2_8, cnt_debounce2_7, n92, n93, n7050, 
         n7162, n63, n1727, n8240, n7088, n2005, location_12, location_11, 
         n7062, n1747, n1746, cnt_debounce2_6, cnt_debounce2_5, n94, n95, 
         n7049, n7161, n7160, n7159, n7158, n7157, n7156, location_10, 
         location_9, n7155, location_8, location_7, n7154, n7087, n2007, n2006, 
         n7061, n1749, n1748, n7086, n2009, n2008, n7085, n2011, n2010, n7084, 
         n2013, n2012, n7083, n2015, n2014, n7082, n2017, n2016, location_6, 
         location_4, location_5, n7060, n1751, n1750, n7081, n2019, n2018, 
         n7059, n1753, n1752, n7080, n2021, n2020, segment_switch_flag_0, 
         n7153, n3387, n7079, n2023, n2022, location_3, n7058, n1755, n1754, 
         n7152, location_2, location_1, n7057, n1757, n1756, n7078, n2025, 
         n2024, cnt_debounce2_4, cnt_debounce2_3, n96, n97, location_0, n1758, 
         n7077, n2027, n2026, n7151, n7150, n7149, n7148, n7076, n2029, n2028, 
         cnt_debounce2_18, cnt_debounce2_17, n82_adj_32, n83_adj_31, n7055, 
         n7147, n7146, n7145, n7144, n7143, n7075, n2031, n2030, n7142, n7074, 
         n2033, n2032, n7141, n7140, cnt_debounce2_16, cnt_debounce2_15, 
         n84_adj_30, n85_adj_29, cnt_100_6, cnt_100_5, n34, n35, n5096, n7109, 
         cnt_100_4, cnt_100_3, n36, n37, n7108, cnt_100_2, cnt_100_1, n38, n39, 
         n7107, n7073, n2035, n2034, cnt_100_0, n40, n2036, cnt_debounce_16, 
         cnt_debounce_15, n74_adj_21, n75_adj_20, n8503, button_flag_N_784, 
         location_31_N_633_3, n14_adj_51, n7_adj_60, n7739, n7703, n8209, 
         din_N_775, n8234, clk_N_600_enable_1, din_c, n8283, n8273, row_last_3, 
         row_last_2, n8265, n5085, key_flag_0, key_flag_1_N_30_0, 
         sck_c_c_enable_16, n4_adj_59, n8247, n251, n5413, n8252, n8248, 
         key_flag_1_N_30_1, n7807, row_now_3_N_36_3, n14_adj_2, n5050, 
         key_flag_1, n8237, n8239, location_31_N_633_1, location_31_N_633_0, 
         location_31_N_567_1, location_31_N_567_0, location_31_N_633_2, 
         location_31_N_567_3, location_31_N_567_2, location_31_N_633_5, 
         location_31_N_633_4, location_31_N_567_5, location_31_N_567_4, 
         location_31_N_633_7, location_31_N_633_6, location_31_N_567_7, 
         location_31_N_567_6, location_31_N_633_9, location_31_N_633_8, 
         location_31_N_567_9, location_31_N_567_8, location_31_N_633_11, 
         location_31_N_633_10, location_31_N_567_11, location_31_N_567_10, 
         location_31_N_633_13, location_31_N_633_12, location_31_N_567_13, 
         location_31_N_567_12, location_31_N_633_15, location_31_N_633_14, 
         location_31_N_567_15, location_31_N_567_14, location_31_N_633_17, 
         location_31_N_633_16, location_31_N_567_17, location_31_N_567_16, 
         location_31_N_633_19, location_31_N_633_18, location_31_N_567_19, 
         location_31_N_567_18, location_31_N_633_21, location_31_N_633_20, 
         location_31_N_567_21, location_31_N_567_20, location_31_N_633_23, 
         location_31_N_633_22, location_31_N_567_23, location_31_N_567_22, 
         location_31_N_633_25, location_31_N_633_24, location_31_N_567_25, 
         location_31_N_567_24, location_31_N_633_27, location_31_N_633_26, 
         location_31_N_567_27, location_31_N_567_26, location_31_N_633_29, 
         location_31_N_633_28, location_31_N_567_29, location_31_N_567_28, 
         location_31_N_633_31, location_31_N_633_30, location_31_N_567_31, 
         location_31_N_567_30, n5827, n8027, n8049, matrix_key_code_4_N_19_1, 
         matrix_key_code_4_N_19_0, sck_c_c_enable_62, matrix_key_code_0, 
         matrix_key_code_1, row_c_1, row_c_0, row_c_2, 
         matrix_key_code_4_N_19_2, sck_c_c_enable_43, matrix_key_code_2, n6270, 
         matrix_key_code_4_N_19_3, sck_c_c_enable_12, matrix_key_code_3, n8175, 
         matrix_key_code_4_N_19_4, n4622, sck_c_c_enable_11, matrix_key_code_4, 
         n40_adj_33, n52, n58_adj_64, n39_adj_34, n7238, n8235, n8260, 
         rck_N_762, clk_N_600_enable_3, rck_c, n60_adj_63, scan_state_0, 
         scan_state_1_N_24_0, scan_state_1, row_now_3, n49_adj_46, 
         row_last_3_N_32_0, sck_c_c_enable_5, row_last_0, n8088, n8250, n8243, 
         n8254, row_last_3_N_32_1, sck_c_c_enable_44, row_last_1, n4388, n8251, 
         row_last_3_N_32_2, sck_c_c_enable_59, n8284, n4389, n8271, n8258, 
         row_last_3_N_32_3, sck_c_c_enable_60, row_now_3_N_36_1, n8272, 
         sck_c_c_enable_15, row_now_0, row_now_1, row_now_3_N_36_2, row_now_2, 
         GND_net, state_clk, n16, n48_adj_40, scan_state_1_N_24_1, n22, n8236, 
         clk_N_600_enable_2, button_c_2, button_c_1, n6276, n3766, 
         seven_segment_disp_left_c_1, n14, button_c_0, button_c_3, n13, n8158, 
         seven_segment_disp_right_c_0, seven_segment_disp_right_c_1, n4261, 
         n5133, seven_segment_disp_right_c_2, n17, button_last_1, 
         button_last_0, n8106, seven_segment_disp_right_c_3, n5_adj_55, n4256, 
         seven_segment_disp_right_c_4, n19, n20, seven_segment_disp_right_c_5, 
         seven_segment_disp_right_c_6, n6, n7793, state_clk_N_781, n8121, 
         n8203, n8123, n8126, n14_adj_49, n7_adj_48, n4201, n6289, n5, n7811, 
         n4239, n8025, n8139, n8208, n8249, n8200, n8264, n8261, n8262, n8263, 
         n8255, n4822, n5073, n8257, n15, n8277, n5074, n4_adj_61, n25, n7715, 
         n8278, n30, n30_adj_57, n12_adj_62, n7, n8246, n8245, n8116, n8276, 
         n48_adj_4, n8282, n48, n8288, n8266, n8268, n7736, n4, n8259, 
         column_c_0, n8026, column_c_3, column_c_2, column_c_1, button_last_2, 
         button_last_3, n8048, n11, n8242, n4754, n8093, n8275, n8501, n8241, 
         n6_adj_54, n18_adj_41, n7170, n12_adj_56, n16_adj_44, n20_adj_1, 
         n8253, n20_adj_3, n57, n39_adj_53, n8270, n7743, n5816, n54, n8274, 
         n8244, n50, n49, n55, n50_adj_38, n49_adj_39, n60, n55_adj_35, n24, 
         n23, n7791, n8267, n8201, n8202, n8233, n16_adj_47, n7759, n8269, 
         n8087, n40_adj_43, n52_adj_37, n58, n39_adj_45, n44_adj_42, 
         n54_adj_36, n6078, n4_adj_58, n8281, n8256, n7_adj_50, n8205, n7795, 
         n7797, n44, n8206, n18, n48_adj_23, VCCI;

  SLICE_0 SLICE_0( .A1(cnt_debounce_14), .A0(cnt_debounce_13), 
    .DI1(n76_adj_19), .DI0(n77_adj_18), .CE(sck_c_c_enable_63), .LSR(n5097), 
    .CLK(sck_c_c), .FCI(n7104), .F0(n77_adj_18), .Q0(cnt_debounce_13), 
    .F1(n76_adj_19), .Q1(cnt_debounce_14), .FCO(n7105));
  SLICE_1 SLICE_1( .A1(location_30), .A0(location_29), .FCI(n7071), .F0(n1729), 
    .F1(n1728), .FCO(n7072));
  SLICE_2 SLICE_2( .A1(cnt_debounce2_14), .A0(cnt_debounce2_13), 
    .DI1(n86_adj_28), .DI0(n87_adj_27), .CE(sck_c_c_enable_57), .LSR(n5098), 
    .CLK(sck_c_c), .FCI(n7053), .F0(n87_adj_27), .Q0(cnt_debounce2_13), 
    .F1(n86_adj_28), .Q1(cnt_debounce2_14), .FCO(n7054));
  SLICE_3 SLICE_3( .A1(location_28), .A0(location_27), .FCI(n7070), .F0(n1731), 
    .F1(n1730), .FCO(n7071));
  SLICE_4 SLICE_4( .A1(location_26), .A0(location_25), .FCI(n7069), .F0(n1733), 
    .F1(n1732), .FCO(n7070));
  SLICE_5 SLICE_5( .A1(cnt_debounce_12), .A0(cnt_debounce_11), 
    .DI1(n78_adj_17), .DI0(n79_adj_16), .CE(sck_c_c_enable_63), .LSR(n5097), 
    .CLK(sck_c_c), .FCI(n7103), .F0(n79_adj_16), .Q0(cnt_debounce_11), 
    .F1(n78_adj_17), .Q1(cnt_debounce_12), .FCO(n7104));
  SLICE_6 SLICE_6( .A1(cnt_debounce_10), .A0(cnt_debounce_9), .DI1(n80_adj_15), 
    .DI0(n81_adj_14), .CE(sck_c_c_enable_63), .LSR(n5097), .CLK(sck_c_c), 
    .FCI(n7102), .F0(n81_adj_14), .Q0(cnt_debounce_9), .F1(n80_adj_15), 
    .Q1(cnt_debounce_10), .FCO(n7103));
  SLICE_7 SLICE_7( .A1(cnt_debounce2_2), .A0(cnt_debounce2_1), .DI1(n98), 
    .DI0(n99), .CE(sck_c_c_enable_57), .LSR(n5098), .CLK(sck_c_c), .FCI(n7047), 
    .F0(n99), .Q0(cnt_debounce2_1), .F1(n98), .Q1(cnt_debounce2_2), 
    .FCO(n7048));
  SLICE_8 SLICE_8( .A1(cnt_debounce_8), .A0(cnt_debounce_7), .DI1(n82_adj_13), 
    .DI0(n83_adj_12), .CE(sck_c_c_enable_63), .LSR(n5097), .CLK(sck_c_c), 
    .FCI(n7101), .F0(n83_adj_12), .Q0(cnt_debounce_7), .F1(n82_adj_13), 
    .Q1(cnt_debounce_8), .FCO(n7102));
  SLICE_9 SLICE_9( .A1(cnt_debounce_6), .A0(cnt_debounce_5), .DI1(n84_adj_11), 
    .DI0(n85_adj_10), .CE(sck_c_c_enable_63), .LSR(n5097), .CLK(sck_c_c), 
    .FCI(n7100), .F0(n85_adj_10), .Q0(cnt_debounce_5), .F1(n84_adj_11), 
    .Q1(cnt_debounce_6), .FCO(n7101));
  SLICE_10 SLICE_10( .A1(cnt_debounce_4), .A0(cnt_debounce_3), .DI1(n86_adj_9), 
    .DI0(n87_adj_8), .CE(sck_c_c_enable_63), .LSR(n5097), .CLK(sck_c_c), 
    .FCI(n7099), .F0(n87_adj_8), .Q0(cnt_debounce_3), .F1(n86_adj_9), 
    .Q1(cnt_debounce_4), .FCO(n7100));
  SLICE_11 SLICE_11( .A1(cnt_debounce_2), .A0(cnt_debounce_1), .DI1(n88_adj_7), 
    .DI0(n89_adj_6), .CE(sck_c_c_enable_63), .LSR(n5097), .CLK(sck_c_c), 
    .FCI(n7098), .F0(n89_adj_6), .Q0(cnt_debounce_1), .F1(n88_adj_7), 
    .Q1(cnt_debounce_2), .FCO(n7099));
  SLICE_12 SLICE_12( .A1(cnt_debounce_0), .DI1(n90_adj_5), 
    .CE(sck_c_c_enable_63), .LSR(n5097), .CLK(sck_c_c), .F1(n90_adj_5), 
    .Q1(cnt_debounce_0), .FCO(n7098));
  SLICE_13 SLICE_13( .A1(cnt_disp_1ms_16), .A0(cnt_disp_1ms_15), .DI1(n74), 
    .DI0(n75), .CE(button_flag), .LSR(sck_c_c_enable_61), .CLK(sck_c_c), 
    .FCI(n7096), .F0(n75), .Q0(cnt_disp_1ms_15), .F1(n74), 
    .Q1(cnt_disp_1ms_16));
  SLICE_14 SLICE_14( .A1(cnt_disp_1ms_14), .A0(cnt_disp_1ms_13), .DI1(n76), 
    .DI0(n77), .CE(button_flag), .LSR(sck_c_c_enable_61), .CLK(sck_c_c), 
    .FCI(n7095), .F0(n77), .Q0(cnt_disp_1ms_13), .F1(n76), 
    .Q1(cnt_disp_1ms_14), .FCO(n7096));
  SLICE_15 SLICE_15( .A1(cnt_disp_1ms_12), .A0(cnt_disp_1ms_11), .DI1(n78), 
    .DI0(n79), .CE(button_flag), .LSR(sck_c_c_enable_61), .CLK(sck_c_c), 
    .FCI(n7094), .F0(n79), .Q0(cnt_disp_1ms_11), .F1(n78), 
    .Q1(cnt_disp_1ms_12), .FCO(n7095));
  SLICE_16 SLICE_16( .A1(cnt_debounce2_0), .DI1(n100), .CE(sck_c_c_enable_57), 
    .LSR(n5098), .CLK(sck_c_c), .F1(n100), .Q1(cnt_debounce2_0), .FCO(n7047));
  SLICE_17 SLICE_17( .A1(cnt_disp_1ms_10), .A0(cnt_disp_1ms_9), .DI1(n80), 
    .DI0(n81), .CE(button_flag), .LSR(sck_c_c_enable_61), .CLK(sck_c_c), 
    .FCI(n7093), .F0(n81), .Q0(cnt_disp_1ms_9), .F1(n80), .Q1(cnt_disp_1ms_10), 
    .FCO(n7094));
  SLICE_18 SLICE_18( .A1(location_24), .A0(location_23), .FCI(n7068), 
    .F0(n1735), .F1(n1734), .FCO(n7069));
  SLICE_19 SLICE_19( .A1(cnt_disp_1ms_8), .A0(cnt_disp_1ms_7), .DI1(n82), 
    .DI0(n83), .CE(button_flag), .LSR(sck_c_c_enable_61), .CLK(sck_c_c), 
    .FCI(n7092), .F0(n83), .Q0(cnt_disp_1ms_7), .F1(n82), .Q1(cnt_disp_1ms_8), 
    .FCO(n7093));
  SLICE_20 SLICE_20( .A1(location_22), .A0(location_21), .FCI(n7067), 
    .F0(n1737), .F1(n1736), .FCO(n7068));
  SLICE_21 SLICE_21( .A0(location_31), .FCI(n7166), .F1(n3317));
  SLICE_22 SLICE_22( .A1(cnt_disp_1ms_6), .A0(cnt_disp_1ms_5), .DI1(n84), 
    .DI0(n85), .CE(button_flag), .LSR(sck_c_c_enable_61), .CLK(sck_c_c), 
    .FCI(n7091), .F0(n85), .Q0(cnt_disp_1ms_5), .F1(n84), .Q1(cnt_disp_1ms_6), 
    .FCO(n7092));
  SLICE_23 SLICE_23( .A1(location_20), .A0(location_19), .FCI(n7066), 
    .F0(n1739), .F1(n1738), .FCO(n7067));
  SLICE_24 SLICE_24( .A1(location_30), .A0(location_29), .FCI(n7165), 
    .FCO(n7166));
  SLICE_25 SLICE_25( .A1(cnt_disp_1ms_4), .A0(cnt_disp_1ms_3), .DI1(n86), 
    .DI0(n87), .CE(button_flag), .LSR(sck_c_c_enable_61), .CLK(sck_c_c), 
    .FCI(n7090), .F0(n87), .Q0(cnt_disp_1ms_3), .F1(n86), .Q1(cnt_disp_1ms_4), 
    .FCO(n7091));
  SLICE_26 SLICE_26( .A1(location_18), .A0(location_17), .FCI(n7065), 
    .F0(n1741), .F1(n1740), .FCO(n7066));
  SLICE_27 SLICE_27( .A1(location_28), .A0(location_27), .FCI(n7164), 
    .FCO(n7165));
  SLICE_28 SLICE_28( .A1(cnt_disp_1ms_2), .A0(cnt_disp_1ms_1), .DI1(n88), 
    .DI0(n89), .CE(button_flag), .LSR(sck_c_c_enable_61), .CLK(sck_c_c), 
    .FCI(n7089), .F0(n89), .Q0(cnt_disp_1ms_1), .F1(n88), .Q1(cnt_disp_1ms_2), 
    .FCO(n7090));
  SLICE_29 SLICE_29( .A1(location_16), .A0(location_15), .FCI(n7064), 
    .F0(n1743), .F1(n1742), .FCO(n7065));
  SLICE_30 SLICE_30( .A1(cnt_debounce2_12), .A0(cnt_debounce2_11), 
    .DI1(n88_adj_26), .DI0(n89_adj_25), .CE(sck_c_c_enable_57), .LSR(n5098), 
    .CLK(sck_c_c), .FCI(n7052), .F0(n89_adj_25), .Q0(cnt_debounce2_11), 
    .F1(n88_adj_26), .Q1(cnt_debounce2_12), .FCO(n7053));
  SLICE_31 SLICE_31( .A1(cnt_debounce2_10), .A0(cnt_debounce2_9), 
    .DI1(n90_adj_24), .DI0(n91), .CE(sck_c_c_enable_57), .LSR(n5098), 
    .CLK(sck_c_c), .FCI(n7051), .F0(n91), .Q0(cnt_debounce2_9), 
    .F1(n90_adj_24), .Q1(cnt_debounce2_10), .FCO(n7052));
  SLICE_32 SLICE_32( .A1(location_26), .A0(location_25), .FCI(n7163), 
    .FCO(n7164));
  SLICE_33 SLICE_33( .A1(cnt_disp_1ms_0), .DI1(n90), .CE(button_flag), 
    .LSR(sck_c_c_enable_61), .CLK(sck_c_c), .F1(n90), .Q1(cnt_disp_1ms_0), 
    .FCO(n7089));
  SLICE_34 SLICE_34( .A1(location_14), .A0(location_13), .FCI(n7063), 
    .F0(n1745), .F1(n1744), .FCO(n7064));
  SLICE_35 SLICE_35( .A1(cnt_debounce2_8), .A0(cnt_debounce2_7), .DI1(n92), 
    .DI0(n93), .CE(sck_c_c_enable_57), .LSR(n5098), .CLK(sck_c_c), .FCI(n7050), 
    .F0(n93), .Q0(cnt_debounce2_7), .F1(n92), .Q1(cnt_debounce2_8), 
    .FCO(n7051));
  SLICE_36 SLICE_36( .A1(location_24), .A0(location_23), .FCI(n7162), 
    .FCO(n7163));
  SLICE_37 SLICE_37( .D0(location_31), .C0(n63), .B0(n1727), .A0(n8240), 
    .FCI(n7088), .F0(n2005));
  SLICE_38 SLICE_38( .A1(location_12), .A0(location_11), .FCI(n7062), 
    .F0(n1747), .F1(n1746), .FCO(n7063));
  SLICE_39 SLICE_39( .A1(cnt_debounce2_6), .A0(cnt_debounce2_5), .DI1(n94), 
    .DI0(n95), .CE(sck_c_c_enable_57), .LSR(n5098), .CLK(sck_c_c), .FCI(n7049), 
    .F0(n95), .Q0(cnt_debounce2_5), .F1(n94), .Q1(cnt_debounce2_6), 
    .FCO(n7050));
  SLICE_40 SLICE_40( .A1(location_22), .A0(location_21), .FCI(n7161), 
    .FCO(n7162));
  SLICE_41 SLICE_41( .A1(location_20), .A0(location_19), .FCI(n7160), 
    .FCO(n7161));
  SLICE_42 SLICE_42( .A1(location_18), .A0(location_17), .FCI(n7159), 
    .FCO(n7160));
  SLICE_43 SLICE_43( .A1(location_16), .A0(location_15), .FCI(n7158), 
    .FCO(n7159));
  SLICE_44 SLICE_44( .A1(location_14), .A0(location_13), .FCI(n7157), 
    .FCO(n7158));
  SLICE_45 SLICE_45( .A1(location_12), .A0(location_11), .FCI(n7156), 
    .FCO(n7157));
  SLICE_46 SLICE_46( .A1(location_10), .A0(location_9), .FCI(n7155), 
    .FCO(n7156));
  SLICE_47 SLICE_47( .A1(location_8), .A0(location_7), .FCI(n7154), 
    .FCO(n7155));
  SLICE_48 SLICE_48( .D1(location_30), .C1(n63), .B1(n1728), .A1(n8240), 
    .D0(location_29), .C0(n63), .B0(n1729), .A0(n8240), .FCI(n7087), 
    .F0(n2007), .F1(n2006), .FCO(n7088));
  SLICE_49 SLICE_49( .A1(location_10), .A0(location_9), .FCI(n7061), 
    .F0(n1749), .F1(n1748), .FCO(n7062));
  SLICE_50 SLICE_50( .D1(location_28), .C1(n63), .B1(n1730), .A1(n8240), 
    .D0(location_27), .C0(n63), .B0(n1731), .A0(n8240), .FCI(n7086), 
    .F0(n2009), .F1(n2008), .FCO(n7087));
  SLICE_51 SLICE_51( .D1(location_26), .C1(n63), .B1(n1732), .A1(n8240), 
    .D0(location_25), .C0(n63), .B0(n1733), .A0(n8240), .FCI(n7085), 
    .F0(n2011), .F1(n2010), .FCO(n7086));
  SLICE_52 SLICE_52( .D1(location_24), .C1(n63), .B1(n1734), .A1(n8240), 
    .D0(location_23), .C0(n63), .B0(n1735), .A0(n8240), .FCI(n7084), 
    .F0(n2013), .F1(n2012), .FCO(n7085));
  SLICE_53 SLICE_53( .D1(location_22), .C1(n63), .B1(n1736), .A1(n8240), 
    .D0(location_21), .C0(n63), .B0(n1737), .A0(n8240), .FCI(n7083), 
    .F0(n2015), .F1(n2014), .FCO(n7084));
  SLICE_54 SLICE_54( .D1(location_20), .C1(n63), .B1(n1738), .A1(n8240), 
    .D0(location_19), .C0(n63), .B0(n1739), .A0(n8240), .FCI(n7082), 
    .F0(n2017), .F1(n2016), .FCO(n7083));
  SLICE_55 SLICE_55( .A1(location_6), .B0(location_4), .A0(location_5), 
    .FCO(n7154));
  SLICE_56 SLICE_56( .A1(location_8), .A0(location_7), .FCI(n7060), .F0(n1751), 
    .F1(n1750), .FCO(n7061));
  SLICE_57 SLICE_57( .D1(location_18), .C1(n63), .B1(n1740), .A1(n8240), 
    .D0(location_17), .C0(n63), .B0(n1741), .A0(n8240), .FCI(n7081), 
    .F0(n2019), .F1(n2018), .FCO(n7082));
  SLICE_58 SLICE_58( .A1(location_6), .A0(location_5), .FCI(n7059), .F0(n1753), 
    .F1(n1752), .FCO(n7060));
  SLICE_59 SLICE_59( .D1(location_16), .C1(n63), .B1(n1742), .A1(n8240), 
    .D0(location_15), .C0(n63), .B0(n1743), .A0(n8240), .FCI(n7080), 
    .F0(n2021), .F1(n2020), .FCO(n7081));
  SLICE_60 SLICE_60( .D0(n8240), .C0(segment_switch_flag_0), .B0(n1727), 
    .A0(location_31), .FCI(n7153), .F1(n3387));
  SLICE_61 SLICE_61( .D1(location_14), .C1(n63), .B1(n1744), .A1(n8240), 
    .D0(location_13), .C0(n63), .B0(n1745), .A0(n8240), .FCI(n7079), 
    .F0(n2023), .F1(n2022), .FCO(n7080));
  SLICE_62 SLICE_62( .A1(location_4), .A0(location_3), .FCI(n7058), .F0(n1755), 
    .F1(n1754), .FCO(n7059));
  SLICE_63 SLICE_63( .D1(location_30), .C1(n63), .B1(n1728), .A1(n8240), 
    .D0(location_29), .C0(n63), .B0(n1729), .A0(n8240), .FCI(n7152), 
    .FCO(n7153));
  SLICE_64 SLICE_64( .A1(location_2), .A0(location_1), .FCI(n7057), .F0(n1757), 
    .F1(n1756), .FCO(n7058));
  SLICE_65 SLICE_65( .D1(location_12), .C1(n63), .B1(n1746), .A1(n8240), 
    .D0(location_11), .C0(n63), .B0(n1747), .A0(n8240), .FCI(n7078), 
    .F0(n2025), .F1(n2024), .FCO(n7079));
  SLICE_66 SLICE_66( .A1(cnt_debounce2_4), .A0(cnt_debounce2_3), .DI1(n96), 
    .DI0(n97), .CE(sck_c_c_enable_57), .LSR(n5098), .CLK(sck_c_c), .FCI(n7048), 
    .F0(n97), .Q0(cnt_debounce2_3), .F1(n96), .Q1(cnt_debounce2_4), 
    .FCO(n7049));
  SLICE_67 SLICE_67( .A1(location_0), .F1(n1758), .FCO(n7057));
  SLICE_68 SLICE_68( .D1(location_10), .C1(n63), .B1(n1748), .A1(n8240), 
    .D0(location_9), .C0(n63), .B0(n1749), .A0(n8240), .FCI(n7077), .F0(n2027), 
    .F1(n2026), .FCO(n7078));
  SLICE_69 SLICE_69( .D1(location_28), .C1(n63), .B1(n1730), .A1(n8240), 
    .D0(location_27), .C0(n63), .B0(n1731), .A0(n8240), .FCI(n7151), 
    .FCO(n7152));
  SLICE_70 SLICE_70( .D1(location_26), .C1(n63), .B1(n1732), .A1(n8240), 
    .D0(location_25), .C0(n63), .B0(n1733), .A0(n8240), .FCI(n7150), 
    .FCO(n7151));
  SLICE_71 SLICE_71( .D1(location_24), .C1(n63), .B1(n1734), .A1(n8240), 
    .D0(location_23), .C0(n63), .B0(n1735), .A0(n8240), .FCI(n7149), 
    .FCO(n7150));
  SLICE_72 SLICE_72( .D1(location_22), .C1(n63), .B1(n1736), .A1(n8240), 
    .D0(location_21), .C0(n63), .B0(n1737), .A0(n8240), .FCI(n7148), 
    .FCO(n7149));
  SLICE_73 SLICE_73( .D1(location_8), .C1(n63), .B1(n1750), .A1(n8240), 
    .D0(location_7), .C0(n63), .B0(n1751), .A0(n8240), .FCI(n7076), .F0(n2029), 
    .F1(n2028), .FCO(n7077));
  SLICE_74 SLICE_74( .A1(cnt_debounce2_18), .A0(cnt_debounce2_17), 
    .DI1(n82_adj_32), .DI0(n83_adj_31), .CE(sck_c_c_enable_57), .LSR(n5098), 
    .CLK(sck_c_c), .FCI(n7055), .F0(n83_adj_31), .Q0(cnt_debounce2_17), 
    .F1(n82_adj_32), .Q1(cnt_debounce2_18));
  SLICE_75 SLICE_75( .D1(location_20), .C1(n63), .B1(n1738), .A1(n8240), 
    .D0(location_19), .C0(n63), .B0(n1739), .A0(n8240), .FCI(n7147), 
    .FCO(n7148));
  SLICE_76 SLICE_76( .D1(location_18), .C1(n63), .B1(n1740), .A1(n8240), 
    .D0(location_17), .C0(n63), .B0(n1741), .A0(n8240), .FCI(n7146), 
    .FCO(n7147));
  SLICE_77 SLICE_77( .D1(location_16), .C1(n63), .B1(n1742), .A1(n8240), 
    .D0(location_15), .C0(n63), .B0(n1743), .A0(n8240), .FCI(n7145), 
    .FCO(n7146));
  SLICE_78 SLICE_78( .D1(location_14), .C1(n63), .B1(n1744), .A1(n8240), 
    .D0(location_13), .C0(n63), .B0(n1745), .A0(n8240), .FCI(n7144), 
    .FCO(n7145));
  SLICE_79 SLICE_79( .D1(location_12), .C1(n63), .B1(n1746), .A1(n8240), 
    .D0(location_11), .C0(n63), .B0(n1747), .A0(n8240), .FCI(n7143), 
    .FCO(n7144));
  SLICE_80 SLICE_80( .D1(location_6), .C1(n63), .B1(n1752), .A1(n8240), 
    .D0(location_5), .C0(n63), .B0(n1753), .A0(n8240), .FCI(n7075), .F0(n2031), 
    .F1(n2030), .FCO(n7076));
  SLICE_81 SLICE_81( .D1(location_10), .C1(n63), .B1(n1748), .A1(n8240), 
    .D0(location_9), .C0(n63), .B0(n1749), .A0(n8240), .FCI(n7142), 
    .FCO(n7143));
  SLICE_82 SLICE_82( .D1(location_4), .C1(n63), .B1(n1754), .A1(n8240), 
    .D0(location_3), .C0(n63), .B0(n1755), .A0(n8240), .FCI(n7074), .F0(n2033), 
    .F1(n2032), .FCO(n7075));
  SLICE_83 SLICE_83( .D1(location_8), .C1(n63), .B1(n1750), .A1(n8240), 
    .D0(location_7), .C0(n63), .B0(n1751), .A0(n8240), .FCI(n7141), 
    .FCO(n7142));
  SLICE_84 SLICE_84( .D1(location_6), .C1(n63), .B1(n1752), .A1(n8240), 
    .D0(location_5), .C0(n63), .B0(n1753), .A0(n8240), .FCI(n7140), 
    .FCO(n7141));
  SLICE_85 SLICE_85( .D1(location_4), .C1(n63), .B1(n1754), .A1(n8240), 
    .FCO(n7140));
  SLICE_86 SLICE_86( .A1(cnt_debounce2_16), .A0(cnt_debounce2_15), 
    .DI1(n84_adj_30), .DI0(n85_adj_29), .CE(sck_c_c_enable_57), .LSR(n5098), 
    .CLK(sck_c_c), .FCI(n7054), .F0(n85_adj_29), .Q0(cnt_debounce2_15), 
    .F1(n84_adj_30), .Q1(cnt_debounce2_16), .FCO(n7055));
  SLICE_87 SLICE_87( .A1(cnt_100_6), .A0(cnt_100_5), .DI1(n34), .DI0(n35), 
    .LSR(n5096), .CLK(sck_c_c), .FCI(n7109), .F0(n35), .Q0(cnt_100_5), 
    .F1(n34), .Q1(cnt_100_6));
  SLICE_88 SLICE_88( .A1(cnt_100_4), .A0(cnt_100_3), .DI1(n36), .DI0(n37), 
    .LSR(n5096), .CLK(sck_c_c), .FCI(n7108), .F0(n37), .Q0(cnt_100_3), 
    .F1(n36), .Q1(cnt_100_4), .FCO(n7109));
  SLICE_89 SLICE_89( .A1(cnt_100_2), .A0(cnt_100_1), .DI1(n38), .DI0(n39), 
    .LSR(n5096), .CLK(sck_c_c), .FCI(n7107), .F0(n39), .Q0(cnt_100_1), 
    .F1(n38), .Q1(cnt_100_2), .FCO(n7108));
  SLICE_90 SLICE_90( .D1(location_2), .C1(n63), .B1(n1756), .A1(n8240), 
    .D0(location_1), .C0(n63), .B0(n1757), .A0(n8240), .FCI(n7073), .F0(n2035), 
    .F1(n2034), .FCO(n7074));
  SLICE_91 SLICE_91( .A1(cnt_100_0), .DI1(n40), .LSR(n5096), .CLK(sck_c_c), 
    .F1(n40), .Q1(cnt_100_0), .FCO(n7107));
  SLICE_92 SLICE_92( .D1(location_0), .C1(n63), .B1(n1758), .A1(n8240), 
    .F1(n2036), .FCO(n7073));
  SLICE_93 SLICE_93( .A1(cnt_debounce_16), .A0(cnt_debounce_15), 
    .DI1(n74_adj_21), .DI0(n75_adj_20), .CE(sck_c_c_enable_63), .LSR(n5097), 
    .CLK(sck_c_c), .FCI(n7105), .F0(n75_adj_20), .Q0(cnt_debounce_15), 
    .F1(n74_adj_21), .Q1(cnt_debounce_16));
  SLICE_94 SLICE_94( .A0(location_31), .FCI(n7072), .F0(n1727));
  SLICE_95 SLICE_95( .DI0(n8503), .CE(button_flag_N_784), 
    .LSR(sck_c_c_enable_61), .CLK(sck_c_c), .F0(n8503), .Q0(button_flag));
  SLICE_98 SLICE_98( .C1(location_31_N_633_3), .B1(n14_adj_51), .A1(n7_adj_60), 
    .D0(n7739), .C0(location_3), .B0(n7703), .A0(n8209), .DI0(din_N_775), 
    .M0(n8234), .CE(clk_N_600_enable_1), .CLK(sck_c_c), .OFX0(din_N_775), 
    .Q0(din_c));
  SLICE_99 SLICE_99( .D1(n8283), .C1(n8273), .B1(row_last_3), .A1(row_last_2), 
    .C0(n8265), .B0(n5085), .A0(key_flag_0), .DI0(key_flag_1_N_30_0), 
    .CE(sck_c_c_enable_16), .CLK(sck_c_c), .F0(key_flag_1_N_30_0), 
    .Q0(key_flag_0), .F1(n8265));
  SLICE_100 SLICE_100( .D1(n4_adj_59), .C1(row_last_2), .B1(n8247), .A1(n251), 
    .D0(n251), .C0(n5413), .B0(n8252), .A0(n8248), .DI1(key_flag_1_N_30_1), 
    .M1(n7807), .M0(row_now_3_N_36_3), .FXB(n14_adj_2), .FXA(n5050), 
    .CE(sck_c_c_enable_16), .CLK(sck_c_c), .OFX0(n14_adj_2), .Q1(key_flag_1), 
    .OFX1(key_flag_1_N_30_1));
  SLICE_101 SLICE_101( .D1(n8237), .C1(n8239), .B1(location_31_N_633_1), 
    .A1(n2035), .D0(n8237), .C0(n8239), .B0(location_31_N_633_0), .A0(n2036), 
    .DI1(location_31_N_567_1), .DI0(location_31_N_567_0), .CLK(sck_c_c), 
    .F0(location_31_N_567_0), .Q0(location_0), .F1(location_31_N_567_1), 
    .Q1(location_1));
  SLICE_102 SLICE_102( .D1(n8237), .C1(n8239), .B1(location_31_N_633_3), 
    .A1(n2033), .D0(n8237), .C0(n8239), .B0(location_31_N_633_2), .A0(n2034), 
    .DI1(location_31_N_567_3), .DI0(location_31_N_567_2), .CLK(sck_c_c), 
    .F0(location_31_N_567_2), .Q0(location_2), .F1(location_31_N_567_3), 
    .Q1(location_3));
  SLICE_103 SLICE_103( .D1(n8237), .C1(n8239), .B1(location_31_N_633_5), 
    .A1(n2031), .D0(n8237), .C0(n8239), .B0(location_31_N_633_4), .A0(n2032), 
    .DI1(location_31_N_567_5), .DI0(location_31_N_567_4), .CLK(sck_c_c), 
    .F0(location_31_N_567_4), .Q0(location_4), .F1(location_31_N_567_5), 
    .Q1(location_5));
  SLICE_104 SLICE_104( .D1(n8237), .C1(n8239), .B1(location_31_N_633_7), 
    .A1(n2029), .D0(n8237), .C0(n8239), .B0(location_31_N_633_6), .A0(n2030), 
    .DI1(location_31_N_567_7), .DI0(location_31_N_567_6), .CLK(sck_c_c), 
    .F0(location_31_N_567_6), .Q0(location_6), .F1(location_31_N_567_7), 
    .Q1(location_7));
  SLICE_105 SLICE_105( .D1(n8237), .C1(n8239), .B1(location_31_N_633_9), 
    .A1(n2027), .D0(n8237), .C0(n8239), .B0(location_31_N_633_8), .A0(n2028), 
    .DI1(location_31_N_567_9), .DI0(location_31_N_567_8), .CLK(sck_c_c), 
    .F0(location_31_N_567_8), .Q0(location_8), .F1(location_31_N_567_9), 
    .Q1(location_9));
  SLICE_106 SLICE_106( .D1(n8237), .C1(n8239), .B1(location_31_N_633_11), 
    .A1(n2025), .D0(n8237), .C0(n8239), .B0(location_31_N_633_10), .A0(n2026), 
    .DI1(location_31_N_567_11), .DI0(location_31_N_567_10), .CLK(sck_c_c), 
    .F0(location_31_N_567_10), .Q0(location_10), .F1(location_31_N_567_11), 
    .Q1(location_11));
  SLICE_107 SLICE_107( .D1(n8237), .C1(n8239), .B1(location_31_N_633_13), 
    .A1(n2023), .D0(n8237), .C0(n8239), .B0(location_31_N_633_12), .A0(n2024), 
    .DI1(location_31_N_567_13), .DI0(location_31_N_567_12), .CLK(sck_c_c), 
    .F0(location_31_N_567_12), .Q0(location_12), .F1(location_31_N_567_13), 
    .Q1(location_13));
  SLICE_108 SLICE_108( .D1(n8237), .C1(n8239), .B1(location_31_N_633_15), 
    .A1(n2021), .D0(n8237), .C0(n8239), .B0(location_31_N_633_14), .A0(n2022), 
    .DI1(location_31_N_567_15), .DI0(location_31_N_567_14), .CLK(sck_c_c), 
    .F0(location_31_N_567_14), .Q0(location_14), .F1(location_31_N_567_15), 
    .Q1(location_15));
  SLICE_109 SLICE_109( .D1(n8237), .C1(n8239), .B1(location_31_N_633_17), 
    .A1(n2019), .D0(n8237), .C0(n8239), .B0(location_31_N_633_16), .A0(n2020), 
    .DI1(location_31_N_567_17), .DI0(location_31_N_567_16), .CLK(sck_c_c), 
    .F0(location_31_N_567_16), .Q0(location_16), .F1(location_31_N_567_17), 
    .Q1(location_17));
  SLICE_110 SLICE_110( .D1(n8237), .C1(n8239), .B1(location_31_N_633_19), 
    .A1(n2017), .D0(n8237), .C0(n8239), .B0(location_31_N_633_18), .A0(n2018), 
    .DI1(location_31_N_567_19), .DI0(location_31_N_567_18), .CLK(sck_c_c), 
    .F0(location_31_N_567_18), .Q0(location_18), .F1(location_31_N_567_19), 
    .Q1(location_19));
  SLICE_111 SLICE_111( .D1(n8237), .C1(n8239), .B1(location_31_N_633_21), 
    .A1(n2015), .D0(n8237), .C0(n8239), .B0(location_31_N_633_20), .A0(n2016), 
    .DI1(location_31_N_567_21), .DI0(location_31_N_567_20), .CLK(sck_c_c), 
    .F0(location_31_N_567_20), .Q0(location_20), .F1(location_31_N_567_21), 
    .Q1(location_21));
  SLICE_112 SLICE_112( .D1(n8237), .C1(n8239), .B1(location_31_N_633_23), 
    .A1(n2013), .D0(n8237), .C0(n8239), .B0(location_31_N_633_22), .A0(n2014), 
    .DI1(location_31_N_567_23), .DI0(location_31_N_567_22), .CLK(sck_c_c), 
    .F0(location_31_N_567_22), .Q0(location_22), .F1(location_31_N_567_23), 
    .Q1(location_23));
  SLICE_113 SLICE_113( .D1(n8237), .C1(n8239), .B1(location_31_N_633_25), 
    .A1(n2011), .D0(n8237), .C0(n8239), .B0(location_31_N_633_24), .A0(n2012), 
    .DI1(location_31_N_567_25), .DI0(location_31_N_567_24), .CLK(sck_c_c), 
    .F0(location_31_N_567_24), .Q0(location_24), .F1(location_31_N_567_25), 
    .Q1(location_25));
  SLICE_114 SLICE_114( .D1(n8237), .C1(n8239), .B1(location_31_N_633_27), 
    .A1(n2009), .D0(n8237), .C0(n8239), .B0(location_31_N_633_26), .A0(n2010), 
    .DI1(location_31_N_567_27), .DI0(location_31_N_567_26), .CLK(sck_c_c), 
    .F0(location_31_N_567_26), .Q0(location_26), .F1(location_31_N_567_27), 
    .Q1(location_27));
  SLICE_115 SLICE_115( .D1(n8237), .C1(n8239), .B1(location_31_N_633_29), 
    .A1(n2007), .D0(n8237), .C0(n8239), .B0(location_31_N_633_28), .A0(n2008), 
    .DI1(location_31_N_567_29), .DI0(location_31_N_567_28), .CLK(sck_c_c), 
    .F0(location_31_N_567_28), .Q0(location_28), .F1(location_31_N_567_29), 
    .Q1(location_29));
  SLICE_116 SLICE_116( .D1(n8237), .C1(n8239), .B1(location_31_N_633_31), 
    .A1(n2005), .D0(n8237), .C0(n8239), .B0(location_31_N_633_30), .A0(n2006), 
    .DI1(location_31_N_567_31), .DI0(location_31_N_567_30), .CLK(sck_c_c), 
    .F0(location_31_N_567_30), .Q0(location_30), .F1(location_31_N_567_31), 
    .Q1(location_31));
  SLICE_117 SLICE_117( .C1(sck_c_c_enable_16), .B1(n5827), .A1(n8027), 
    .C0(sck_c_c_enable_16), .B0(n5827), .A0(n8049), 
    .DI1(matrix_key_code_4_N_19_1), .DI0(matrix_key_code_4_N_19_0), 
    .CE(sck_c_c_enable_62), .CLK(sck_c_c), .F0(matrix_key_code_4_N_19_0), 
    .Q0(matrix_key_code_0), .F1(matrix_key_code_4_N_19_1), 
    .Q1(matrix_key_code_1));
  SLICE_118 SLICE_118( .C1(row_now_3_N_36_3), .B1(row_c_1), .A1(row_c_0), 
    .D0(row_c_2), .C0(row_c_1), .B0(row_now_3_N_36_3), .A0(row_c_0), 
    .DI0(matrix_key_code_4_N_19_2), .CE(sck_c_c_enable_43), .CLK(sck_c_c), 
    .F0(matrix_key_code_4_N_19_2), .Q0(matrix_key_code_2), .F1(n6270));
  SLICE_119 SLICE_119( .D1(row_now_3_N_36_3), .C1(row_c_1), .B1(row_c_0), 
    .A1(row_c_2), .D0(row_c_2), .C0(row_now_3_N_36_3), .B0(row_c_1), 
    .A0(row_c_0), .DI0(matrix_key_code_4_N_19_3), .CE(sck_c_c_enable_12), 
    .CLK(sck_c_c), .F0(matrix_key_code_4_N_19_3), .Q0(matrix_key_code_3), 
    .F1(sck_c_c_enable_16));
  SLICE_120 SLICE_120( .C1(n8175), .B1(matrix_key_code_4_N_19_4), .A1(n4622), 
    .D0(row_now_3_N_36_3), .C0(row_c_1), .B0(row_c_0), .A0(row_c_2), 
    .DI0(matrix_key_code_4_N_19_4), .CE(sck_c_c_enable_11), .CLK(sck_c_c), 
    .F0(matrix_key_code_4_N_19_4), .Q0(matrix_key_code_4), 
    .F1(sck_c_c_enable_11));
  SLICE_121 SLICE_121( .D1(n40_adj_33), .C1(n52), .B1(n58_adj_64), 
    .A1(n39_adj_34), .D0(n7238), .C0(n8235), .B0(location_31_N_633_31), 
    .A0(n8260), .DI0(rck_N_762), .CE(clk_N_600_enable_3), .CLK(sck_c_c), 
    .F0(rck_N_762), .Q0(rck_c), .F1(n60_adj_63));
  SLICE_123 SLICE_123( .A0(scan_state_0), .DI0(scan_state_1_N_24_0), 
    .M1(scan_state_0), .LSR(scan_state_1), .CLK(sck_c_c), 
    .F0(scan_state_1_N_24_0), .Q0(row_c_1), .Q1(row_c_0));
  SLICE_125 SLICE_125( .D1(row_c_2), .C1(row_c_1), .B1(row_now_3_N_36_3), 
    .A1(row_now_3), .D0(row_now_3_N_36_3), .C0(n49_adj_46), .B0(row_c_1), 
    .A0(row_c_2), .DI0(row_last_3_N_32_0), .CE(sck_c_c_enable_5), 
    .CLK(sck_c_c), .F0(row_last_3_N_32_0), .Q0(row_last_0), .F1(n8088));
  SLICE_126 SLICE_126( .C1(row_c_0), .B1(n49_adj_46), .A1(n8250), .D0(row_c_1), 
    .C0(n8243), .B0(n7807), .A0(n8254), .DI0(row_last_3_N_32_1), 
    .CE(sck_c_c_enable_44), .CLK(sck_c_c), .F0(row_last_3_N_32_1), 
    .Q0(row_last_1), .F1(n8243));
  SLICE_127 SLICE_127( .D0(row_c_2), .C0(n4388), .B0(row_now_3_N_36_3), 
    .A0(n8251), .DI0(row_last_3_N_32_2), .CE(sck_c_c_enable_59), .CLK(sck_c_c), 
    .F0(row_last_3_N_32_2), .Q0(row_last_2));
  SLICE_128 SLICE_128( .D1(n4388), .C1(row_c_2), .B1(n8247), .A1(n8284), 
    .D0(n4389), .C0(row_now_3_N_36_3), .B0(n8271), .A0(n8258), 
    .DI0(row_last_3_N_32_3), .CE(sck_c_c_enable_60), .CLK(sck_c_c), 
    .F0(row_last_3_N_32_3), .Q0(row_last_3), .F1(n4389));
  SLICE_129 SLICE_129( .C1(row_now_3_N_36_3), .B1(row_c_1), .A1(row_c_2), 
    .C0(row_now_3_N_36_3), .B0(row_c_1), .A0(row_c_2), .DI1(row_now_3_N_36_1), 
    .DI0(n8272), .CE(sck_c_c_enable_15), .CLK(sck_c_c), .F0(n8272), 
    .Q0(row_now_0), .F1(row_now_3_N_36_1), .Q1(row_now_1));
  SLICE_130 SLICE_130( .B0(row_now_3_N_36_3), .A0(row_c_2), 
    .DI0(row_now_3_N_36_2), .M1(row_now_3_N_36_3), .CE(sck_c_c_enable_15), 
    .CLK(sck_c_c), .F0(row_now_3_N_36_2), .Q0(row_now_2), .Q1(row_now_3));
  SLICE_131 SLICE_131( .D0(row_last_2), .C0(row_last_3), .B0(n8283), 
    .A0(n8273), .M1(scan_state_0), .M0(scan_state_1_N_24_0), 
    .LSR(scan_state_1), .CLK(sck_c_c), .F0(n5413), .Q0(row_now_3_N_36_3), 
    .F1(GND_net), .Q1(row_c_2));
  SLICE_132 SLICE_132( .D1(location_21), .C1(location_16), .B1(location_11), 
    .A1(location_4), .B0(cnt_debounce_5), .A0(cnt_debounce_1), 
    .M0(scan_state_1_N_24_0), .CLK(state_clk), .F0(n16), .Q0(scan_state_0), 
    .F1(n48_adj_40));
  SLICE_133 SLICE_133( .D1(cnt_debounce2_2), .C1(cnt_debounce2_5), 
    .B1(cnt_debounce2_11), .A1(cnt_debounce2_0), .B0(scan_state_1), 
    .A0(scan_state_0), .DI0(scan_state_1_N_24_1), .CLK(state_clk), 
    .F0(scan_state_1_N_24_1), .Q0(scan_state_1), .F1(n22));
  SLICE_134 SLICE_134( .D1(n8260), .C1(segment_switch_flag_0), 
    .B1(location_31), .A1(n3317), .D0(location_31_N_633_31), .C0(n7238), 
    .B0(n3387), .A0(n8239), .DI0(n8236), .CE(clk_N_600_enable_2), 
    .CLK(sck_c_c), .F0(n8236), .Q0(segment_switch_flag_0), .F1(n8239));
  SLICE_135 SLICE_135( .B1(cnt_debounce2_10), .A1(cnt_debounce2_3), 
    .B0(button_c_2), .A0(button_c_1), .DI0(n6276), .CE(sck_c_c_enable_61), 
    .LSR(n3766), .CLK(sck_c_c), .F0(n6276), .Q0(seven_segment_disp_left_c_1), 
    .F1(n14));
  SLICE_136 SLICE_136( .D1(button_c_2), .C1(button_c_1), .B1(button_c_0), 
    .A1(button_c_3), .D0(button_c_2), .C0(button_c_1), .B0(button_c_3), 
    .A0(button_c_0), .DI1(n13), .DI0(n8158), .CE(sck_c_c_enable_61), 
    .CLK(sck_c_c), .F0(n8158), .Q0(seven_segment_disp_right_c_0), .F1(n13), 
    .Q1(seven_segment_disp_right_c_1));
  SLICE_137 SLICE_137( .D1(cnt_disp_1ms_2), .C1(cnt_disp_1ms_11), 
    .B1(cnt_disp_1ms_1), .A1(cnt_disp_1ms_0), .C0(button_c_3), .B0(button_c_2), 
    .A0(button_c_1), .DI0(n4261), .CE(sck_c_c_enable_61), .LSR(n5133), 
    .CLK(sck_c_c), .F0(n4261), .Q0(seven_segment_disp_right_c_2), .F1(n17));
  SLICE_138 SLICE_138( .D1(button_c_1), .C1(button_c_0), .B1(button_last_1), 
    .A1(button_last_0), .D0(button_c_1), .C0(button_c_0), .B0(button_c_3), 
    .A0(button_c_2), .DI0(n8106), .CE(sck_c_c_enable_61), .CLK(sck_c_c), 
    .F0(n8106), .Q0(seven_segment_disp_right_c_3), .F1(n5_adj_55));
  SLICE_139 SLICE_139( .B1(button_c_3), .A1(sck_c_c_enable_61), 
    .C0(button_c_2), .B0(button_c_3), .A0(button_c_1), .DI0(n4256), 
    .CE(sck_c_c_enable_61), .LSR(n5133), .CLK(sck_c_c), .F0(n4256), 
    .Q0(seven_segment_disp_right_c_4), .F1(n3766));
  SLICE_140 SLICE_140( .D1(button_c_3), .C1(button_c_2), .B1(button_c_1), 
    .A1(button_c_0), .D0(button_c_3), .C0(button_c_2), .B0(button_c_1), 
    .A0(button_c_0), .DI1(n19), .DI0(n20), .CE(sck_c_c_enable_61), 
    .CLK(sck_c_c), .F0(n20), .Q0(seven_segment_disp_right_c_5), .F1(n19), 
    .Q1(seven_segment_disp_right_c_6));
  SLICE_141 SLICE_141( .D1(n6), .C1(cnt_100_3), .B1(n7793), .A1(cnt_100_0), 
    .B0(n5096), .A0(state_clk), .DI0(state_clk_N_781), .CLK(sck_c_c), 
    .F0(state_clk_N_781), .Q0(state_clk), .F1(n5096));
  SLICE_142 SLICE_142( .D1(n8248), .C1(n4622), .B1(n8284), .A1(row_c_2), 
    .C0(row_now_3_N_36_3), .B0(n8121), .A0(n8203), .M1(n7807), .FXB(n8123), 
    .FXA(n8126), .OFX0(n8123), .F1(n8203), .OFX1(sck_c_c_enable_43));
  location_3__I_0_i5_SLICE_143 \location_3__I_0_i5/SLICE_143 ( 
    .D1(matrix_key_code_3), .C1(n14_adj_49), .B1(n7_adj_48), 
    .A1(matrix_key_code_4), .D0(n4201), .C0(n6289), .B0(matrix_key_code_4), 
    .A0(matrix_key_code_2), .M0(location_0), .OFX0(n5));
  i5103_SLICE_144 \i5103/SLICE_144 ( .D1(n7811), .C1(n4239), .B1(n8025), 
    .A1(matrix_key_code_4), .D0(matrix_key_code_4), .C0(n6289), 
    .B0(location_0), .A0(n8139), .M0(location_1), .OFX0(n8208));
  i5099_SLICE_145 \i5099/SLICE_145 ( .C1(n8250), .B1(row_c_0), .A1(n4622), 
    .C0(row_c_0), .B0(n4622), .A0(n8249), .M0(row_c_1), .OFX0(n8200));
  i5020_SLICE_146 \i5020/SLICE_146 ( .D1(matrix_key_code_3), 
    .C1(matrix_key_code_1), .B1(matrix_key_code_0), .A1(matrix_key_code_2), 
    .C0(matrix_key_code_1), .B0(matrix_key_code_0), .A0(matrix_key_code_2), 
    .M0(location_0), .OFX0(n8025));
  i5079_SLICE_147 \i5079/SLICE_147 ( .D1(n8248), .C1(row_now_3_N_36_3), 
    .B1(n8264), .A1(n8261), .C0(row_c_0), .B0(n8250), .A0(n8249), .M0(n7807), 
    .OFX0(n8175));
  i2315_SLICE_148 \i2315/SLICE_148 ( .D1(n8250), .C1(n49_adj_46), .B1(n8262), 
    .A1(n251), .D0(n8249), .C0(n8254), .B0(n251), .A0(n8263), .M0(row_c_1), 
    .OFX0(n5050));
  i2338_SLICE_149 \i2338/SLICE_149 ( .C1(n8262), .B1(n49_adj_46), .A1(n8250), 
    .D0(n8249), .C0(n8263), .B0(n8255), .A0(n4822), .M0(row_c_1), .OFX0(n5073));
  i2339_SLICE_150 \i2339/SLICE_150 ( .D1(n8257), .C1(n15), .B1(n8255), 
    .A1(n8277), .D0(n8248), .C0(n5413), .B0(n8271), .A0(n8258), .M1(n7807), 
    .M0(row_now_3_N_36_3), .FXB(n5074), .FXA(n5073), .OFX0(n5074), 
    .OFX1(n5085));
  i52_SLICE_151 \i52/SLICE_151 ( .D1(n8249), .C1(row_c_1), .B1(n8255), 
    .A1(n4822), .D0(n4_adj_61), .C0(n25), .B0(n7715), .A0(n8278), .M0(row_c_0), 
    .OFX0(n30));
  i65_SLICE_152 \i65/SLICE_152 ( .D1(n7715), .C1(n8261), .B1(row_now_1), 
    .A1(row_now_2), .D0(n8261), .C0(row_now_0), .B0(row_now_1), .A0(row_now_2), 
    .M0(row_c_2), .OFX0(n30_adj_57));
  i27_SLICE_153 \i27/SLICE_153 ( .C1(n8262), .B1(n8265), .A1(row_c_0), 
    .C0(n8265), .B0(row_c_0), .A0(n8263), .M0(row_c_1), .OFX0(n12_adj_62));
  i5055_SLICE_154 \i5055/SLICE_154 ( .D1(n8250), .C1(n8249), .B1(row_c_0), 
    .A1(row_c_1), .B0(row_c_0), .A0(row_c_1), .M0(n4622), .OFX0(n8126));
  i21_SLICE_155 \i21/SLICE_155 ( .D1(n15), .C1(row_c_1), .B1(row_c_0), 
    .A1(n8265), .D0(n8265), .C0(n5413), .B0(n8284), .A0(row_c_2), .M1(n7807), 
    .M0(row_now_3_N_36_3), .FXB(n7), .FXA(n12_adj_62), .OFX0(n7), 
    .OFX1(sck_c_c_enable_15));
  i5046_SLICE_156 \i5046/SLICE_156 ( .D1(n8246), .C1(row_c_1), .B1(row_c_0), 
    .A1(n8245), .D0(n8257), .C0(n8284), .B0(n8255), .A0(n8277), .M0(row_c_2), 
    .OFX0(n8116));
  i52_adj_44_SLICE_157 \i52_adj_44/SLICE_157 ( .D1(n8284), .C1(n8271), 
    .B1(row_now_3_N_36_3), .A1(n8276), .D0(n8277), .C0(n6270), .B0(n8276), 
    .A0(row_now_3), .M0(row_c_2), .OFX0(n48_adj_4));
  i52_adj_47_SLICE_158 \i52_adj_47/SLICE_158 ( .D1(n8284), .C1(n8271), 
    .B1(row_now_3_N_36_3), .A1(n8282), .D0(n6270), .C0(n8277), .B0(n8282), 
    .A0(row_now_3), .M0(row_c_2), .OFX0(n48));
  i5118_SLICE_159 \i5118/SLICE_159 ( .D1(matrix_key_code_3), 
    .C1(matrix_key_code_1), .B1(location_0), .A1(matrix_key_code_2), 
    .C0(matrix_key_code_1), .B0(location_0), .A0(matrix_key_code_2), 
    .M0(matrix_key_code_0), .OFX0(n8288));
  SLICE_160 SLICE_160( .D1(n8240), .C1(segment_switch_flag_0), 
    .B1(location_31), .A1(n1727), .D0(n3387), .C0(location_31_N_633_31), 
    .B0(segment_switch_flag_0), .A0(n8240), .F0(n8235), 
    .F1(location_31_N_633_31));
  SLICE_161 SLICE_161( .D1(n8266), .C1(n8268), .B1(n48), .A1(row_c_0), 
    .D0(n7736), .C0(n8268), .B0(n4), .A0(row_c_1), .F0(sck_c_c_enable_57), 
    .F1(n4));
  SLICE_162 SLICE_162( .D1(n8277), .C1(n8257), .B1(n8259), .A1(n8268), 
    .D0(n8277), .C0(n8261), .B0(n8276), .A0(row_now_3), .F0(n8257), .F1(n8247));
  SLICE_163 SLICE_163( .C1(column_c_0), .B1(n8026), .A1(matrix_key_code_1), 
    .D0(column_c_3), .C0(column_c_2), .B0(column_c_1), .A0(matrix_key_code_1), 
    .M1(button_c_3), .M0(button_c_2), .CE(sck_c_c_enable_61), .CLK(sck_c_c), 
    .F0(n8026), .Q0(button_last_2), .F1(n8027), .Q1(button_last_3));
  SLICE_164 SLICE_164( .D1(column_c_3), .C1(column_c_1), .B1(column_c_2), 
    .A1(matrix_key_code_0), .C0(column_c_0), .B0(n8048), 
    .A0(matrix_key_code_0), .F0(n8049), .F1(n8048));
  SLICE_165 SLICE_165( .D1(n4388), .C1(n8247), .B1(row_c_2), .A1(n8284), 
    .D0(n11), .C0(n8284), .B0(row_now_3_N_36_3), .A0(n8242), 
    .F0(sck_c_c_enable_59), .F1(n11));
  SLICE_166 SLICE_166( .D1(n8259), .C1(n4822), .B1(n8282), .A1(row_now_3), 
    .D0(n4754), .C0(row_now_1), .B0(n8254), .A0(row_now_3), .F0(n8245), 
    .F1(n8254));
  SLICE_167 SLICE_167( .D1(location_31_N_633_0), .C1(location_31_N_633_2), 
    .B1(location_31_N_633_1), .A1(n8093), .D0(matrix_key_code_0), 
    .C0(matrix_key_code_3), .B0(matrix_key_code_4), .A0(n8275), .F0(n8093), 
    .F1(n14_adj_51));
  SLICE_168 SLICE_168( .D1(segment_switch_flag_0), .C1(n8501), .B1(n8241), 
    .A1(n8260), .B0(location_31_N_633_31), .A0(n3387), .F0(n8501), 
    .F1(clk_N_600_enable_1));
  SLICE_169 SLICE_169( .B1(location_31), .A1(n3317), .D0(n8241), 
    .C0(segment_switch_flag_0), .B0(location_31_N_633_31), .A0(n3387), 
    .F0(clk_N_600_enable_3), .F1(n8241));
  SLICE_170 SLICE_170( .D1(button_c_3), .C1(button_c_2), .B1(button_last_3), 
    .A1(button_last_2), .C0(n6_adj_54), .B0(button_flag), .A0(n5_adj_55), 
    .F0(button_flag_N_784), .F1(n6_adj_54));
  SLICE_171 SLICE_171( .B1(button_c_0), .A1(sck_c_c_enable_61), 
    .D0(n18_adj_41), .C0(n7170), .B0(n17), .A0(button_flag), 
    .F0(sck_c_c_enable_61), .F1(n5133));
  SLICE_172 SLICE_172( .D1(cnt_disp_1ms_10), .C1(cnt_disp_1ms_7), 
    .B1(cnt_disp_1ms_14), .A1(cnt_disp_1ms_12), .D0(cnt_disp_1ms_6), 
    .C0(cnt_disp_1ms_16), .B0(n12_adj_56), .A0(cnt_disp_1ms_15), .F0(n7170), 
    .F1(n12_adj_56));
  SLICE_173 SLICE_173( .D1(cnt_disp_1ms_4), .C1(cnt_disp_1ms_13), 
    .B1(cnt_disp_1ms_3), .A1(cnt_disp_1ms_5), .C0(cnt_disp_1ms_9), 
    .B0(n16_adj_44), .A0(cnt_disp_1ms_8), .F0(n18_adj_41), .F1(n16_adj_44));
  SLICE_174 SLICE_174( .D1(cnt_debounce_9), .C1(n16), .B1(n20_adj_1), 
    .A1(cnt_debounce_13), .D0(n8261), .C0(row_now_2), .B0(n8276), 
    .A0(row_now_3), .F0(n8253), .F1(n8261));
  SLICE_175 SLICE_175( .B1(key_flag_0), .A1(key_flag_1), .D0(row_c_1), 
    .C0(n7736), .B0(n8276), .A0(row_now_3), .F0(n20_adj_3), .F1(n8276));
  SLICE_176 SLICE_176( .C1(row_c_2), .B1(row_c_1), .A1(row_c_0), .D0(n57), 
    .C0(n30_adj_57), .B0(n8276), .A0(row_now_3), .F0(n39_adj_53), .F1(n57));
  SLICE_177 SLICE_177( .C1(row_now_0), .B1(row_now_2), .A1(row_now_1), 
    .D0(row_now_3_N_36_3), .C0(n8270), .B0(n8276), .A0(row_now_3), .F0(n7743), 
    .F1(n8270));
  SLICE_178 SLICE_178( .D1(sck_c_c_enable_16), .C1(column_c_2), .B1(n5816), 
    .A1(column_c_0), .B0(column_c_1), .A0(column_c_3), .F0(n5816), .F1(n5827));
  SLICE_179 SLICE_179( .D1(location_31_N_633_13), .C1(location_31_N_633_23), 
    .B1(location_31_N_633_29), .A1(location_31_N_633_15), .D0(n8240), 
    .C0(segment_switch_flag_0), .B0(location_23), .A0(n1735), 
    .F0(location_31_N_633_23), .F1(n54));
  SLICE_180 SLICE_180( .D1(n8276), .C1(row_now_0), .B1(row_now_2), .A1(n8261), 
    .C0(row_now_1), .B0(n4754), .A0(row_now_3), .F0(n8248), .F1(n4754));
  SLICE_181 SLICE_181( .C1(row_now_0), .B1(row_now_2), .A1(row_now_1), 
    .C0(row_now_3_N_36_3), .B0(row_c_0), .A0(n4822), .F0(n7736), .F1(n4822));
  SLICE_182 SLICE_182( .D1(n8274), .C1(row_now_3_N_36_3), .B1(n4389), 
    .A1(n8244), .D0(n8252), .C0(row_now_1), .B0(n4754), .A0(row_now_3), 
    .F0(n8244), .F1(sck_c_c_enable_60));
  SLICE_183 SLICE_183( .D1(n50), .C1(n49), .B1(n60_adj_63), .A1(n55), 
    .C0(n3387), .B0(n7238), .A0(location_31_N_633_31), .F0(n8237), .F1(n7238));
  SLICE_184 SLICE_184( .D1(n50_adj_38), .C1(n49_adj_39), .B1(n60), 
    .A1(n55_adj_35), .D0(segment_switch_flag_0), .C0(n8237), .B0(n8241), 
    .A0(n8260), .F0(clk_N_600_enable_2), .F1(n8260));
  SLICE_185 SLICE_185( .D1(cnt_debounce2_16), .C1(n24), .B1(cnt_debounce2_17), 
    .A1(n23), .D0(n14), .C0(cnt_debounce2_7), .B0(n7791), .A0(cnt_debounce2_6), 
    .F0(n23), .F1(n8259));
  SLICE_186 SLICE_186( .D1(n8267), .C1(location_1), .B1(matrix_key_code_4), 
    .A1(matrix_key_code_0), .C0(matrix_key_code_3), .B0(matrix_key_code_2), 
    .A0(matrix_key_code_1), .F0(n8267), .F1(n7703));
  SLICE_187 SLICE_187( .D1(n8240), .C1(segment_switch_flag_0), 
    .B1(location_29), .A1(n1729), .C0(n8260), .B0(location_31), .A0(n3317), 
    .F0(n8240), .F1(location_31_N_633_29));
  SLICE_188 SLICE_188( .C1(row_c_2), .B1(n8200), .A1(n8201), 
    .C0(row_now_3_N_36_3), .B0(n8202), .A0(n8203), .F0(sck_c_c_enable_12), 
    .F1(n8202));
  SLICE_189 SLICE_189( .B1(sck_c_c_enable_63), .A1(n8261), .D0(n7743), 
    .C0(n20_adj_3), .B0(row_c_0), .A0(n48_adj_4), .F0(sck_c_c_enable_63), 
    .F1(n5097));
  SLICE_190 SLICE_190( .C1(row_c_2), .B1(row_c_1), .A1(row_c_0), 
    .D0(row_now_3_N_36_3), .C0(n39_adj_53), .B0(n8274), .A0(n8233), 
    .F0(sck_c_c_enable_62), .F1(n8274));
  SLICE_191 SLICE_191( .B1(cnt_debounce2_13), .A1(cnt_debounce2_4), 
    .D0(cnt_debounce2_1), .C0(n16_adj_47), .B0(n22), .A0(cnt_debounce2_15), 
    .F0(n24), .F1(n16_adj_47));
  SLICE_192 SLICE_192( .B1(cnt_debounce2_14), .A1(cnt_debounce2_18), 
    .D0(n7759), .C0(cnt_debounce2_9), .B0(cnt_debounce2_12), 
    .A0(cnt_debounce2_8), .F0(n7791), .F1(n7759));
  SLICE_193 SLICE_193( .D1(n8269), .C1(row_now_1), .B1(row_now_2), .A1(n8261), 
    .C0(row_now_3), .B0(key_flag_0), .A0(key_flag_1), .F0(n8269), .F1(n25));
  SLICE_194 SLICE_194( .D1(n8284), .C1(n4622), .B1(n8264), .A1(n8261), 
    .D0(row_now_3), .C0(n8277), .B0(key_flag_0), .A0(key_flag_1), .F0(n8264), 
    .F1(n8201));
  SLICE_195 SLICE_195( .B1(row_now_3_N_36_3), .A1(row_now_3), .D0(n4754), 
    .C0(row_now_1), .B0(n8087), .A0(n8088), .F0(n8233), .F1(n8087));
  SLICE_196 SLICE_196( .D1(n8259), .C1(n8277), .B1(n8282), .A1(row_now_3), 
    .C0(row_now_0), .B0(row_now_1), .A0(row_now_2), .F0(n8277), .F1(n8251));
  SLICE_197 SLICE_197( .D1(n4622), .C1(n8284), .B1(n8264), .A1(n8261), 
    .D0(column_c_2), .C0(column_c_1), .B0(column_c_3), .A0(column_c_0), 
    .M1(button_c_1), .M0(button_c_0), .CE(sck_c_c_enable_61), .CLK(sck_c_c), 
    .F0(n4622), .Q0(button_last_0), .F1(n8121), .Q1(button_last_1));
  SLICE_198 SLICE_198( .D1(n40_adj_43), .C1(n52_adj_37), .B1(n58), 
    .A1(n39_adj_45), .B0(location_14), .A0(location_7), .F0(n40_adj_43), 
    .F1(n60));
  SLICE_199 SLICE_199( .D1(location_20), .C1(n44_adj_42), .B1(n54_adj_36), 
    .A1(location_10), .D0(location_31), .C0(location_13), .B0(location_3), 
    .A0(location_29), .F0(n54_adj_36), .F1(n58));
  SLICE_200 SLICE_200( .D1(n8240), .C1(segment_switch_flag_0), .B1(location_2), 
    .A1(n1756), .C0(location_31_N_633_1), .B0(location_31_N_633_2), 
    .A0(location_31_N_633_0), .F0(n7_adj_60), .F1(location_31_N_633_2));
  SLICE_201 SLICE_201( .D1(n8259), .C1(n8271), .B1(key_flag_1), 
    .A1(key_flag_0), .D0(row_now_0), .C0(row_now_3), .B0(row_now_2), 
    .A0(row_now_1), .F0(n8271), .F1(n8252));
  SLICE_202 SLICE_202( .D1(row_now_3_N_36_3), .C1(n6078), .B1(row_c_0), 
    .A1(n8242), .D0(n8257), .C0(row_c_2), .B0(n8255), .A0(n8277), .F0(n6078), 
    .F1(n4_adj_58));
  SLICE_203 SLICE_203( .B1(location_31_N_633_30), .A1(location_31_N_633_27), 
    .D0(n8240), .C0(segment_switch_flag_0), .B0(location_27), .A0(n1731), 
    .F0(location_31_N_633_27), .F1(n40_adj_33));
  SLICE_204 SLICE_204( .D1(key_flag_1), .C1(n8281), .B1(n8273), .A1(n8283), 
    .D0(column_c_3), .C0(column_c_1), .B0(column_c_2), .A0(column_c_0), 
    .F0(n8273), .F1(n251));
  SLICE_205 SLICE_205( .B1(row_c_1), .A1(row_c_0), .D0(n8116), .C0(n8284), 
    .B0(row_now_3_N_36_3), .A0(n8242), .F0(sck_c_c_enable_44), .F1(n8284));
  SLICE_206 SLICE_206( .D1(row_last_1), .C1(row_last_0), .B1(n8281), 
    .A1(n8273), .B0(row_last_3), .A0(row_last_2), .F0(n8281), .F1(n8263));
  SLICE_207 SLICE_207( .D1(n8270), .C1(row_now_3), .B1(n8282), .A1(n8259), 
    .B0(key_flag_1), .A0(key_flag_0), .F0(n8282), .F1(n49_adj_46));
  SLICE_208 SLICE_208( .C1(n8259), .B1(key_flag_1), .A1(key_flag_0), 
    .D0(n8248), .C0(row_c_2), .B0(n8271), .A0(n8258), .F0(n8242), .F1(n8258));
  SLICE_209 SLICE_209( .D1(location_31_N_633_22), .C1(location_31_N_633_14), 
    .B1(location_31_N_633_19), .A1(location_31_N_633_7), .D0(n8240), 
    .C0(segment_switch_flag_0), .B0(location_7), .A0(n1751), 
    .F0(location_31_N_633_7), .F1(n52));
  SLICE_210 SLICE_210( .D1(row_last_3), .C1(row_last_2), .B1(n8283), 
    .A1(n8273), .B0(row_last_0), .A0(row_last_1), .F0(n8283), .F1(n15));
  SLICE_211 SLICE_211( .D1(n8245), .C1(row_c_1), .B1(row_c_0), .A1(n8246), 
    .D0(row_now_0), .C0(n8253), .B0(n49_adj_46), .A0(row_now_1), .F0(n8246), 
    .F1(n4388));
  SLICE_212 SLICE_212( .B1(row_now_2), .A1(n8261), .D0(n8269), .C0(n8256), 
    .B0(row_now_0), .A0(row_now_1), .F0(n8250), .F1(n8256));
  SLICE_213 SLICE_213( .D1(matrix_key_code_4), .C1(n7811), .B1(n7_adj_50), 
    .A1(n8288), .C0(matrix_key_code_2), .B0(matrix_key_code_1), 
    .A0(matrix_key_code_0), .F0(n7_adj_50), .F1(n8205));
  SLICE_214 SLICE_214( .D1(cnt_debounce_14), .C1(cnt_debounce_15), 
    .B1(cnt_debounce_12), .A1(cnt_debounce_10), .D0(cnt_debounce_6), 
    .C0(cnt_debounce_7), .B0(n7795), .A0(cnt_debounce_16), .F0(n7797), 
    .F1(n7795));
  SLICE_215 SLICE_215( .D1(location_31_N_633_6), .C1(n44), .B1(n54), 
    .A1(location_31_N_633_5), .D0(n8240), .C0(segment_switch_flag_0), 
    .B0(location_5), .A0(n1753), .F0(location_31_N_633_5), .F1(n58_adj_64));
  SLICE_216 SLICE_216( .C1(location_2), .B1(n8206), .A1(n8208), 
    .C0(location_1), .B0(n5), .A0(n8205), .F0(n8206), .F1(n8209));
  SLICE_217 SLICE_217( .B1(row_c_2), .A1(row_now_3_N_36_3), .D0(n7807), 
    .C0(n4_adj_58), .B0(n30), .A0(row_c_1), .F0(sck_c_c_enable_5), .F1(n7807));
  SLICE_218 SLICE_218( .B1(location_31_N_633_4), .A1(location_31_N_633_1), 
    .D0(n8240), .C0(segment_switch_flag_0), .B0(location_1), .A0(n1757), 
    .F0(location_31_N_633_1), .F1(n39_adj_34));
  SLICE_219 SLICE_219( .D1(location_31_N_633_24), .C1(location_31_N_633_12), 
    .B1(location_31_N_633_17), .A1(location_31_N_633_9), .D0(n8240), 
    .C0(segment_switch_flag_0), .B0(location_9), .A0(n1749), 
    .F0(location_31_N_633_9), .F1(n50));
  SLICE_220 SLICE_220( .D1(cnt_debounce_4), .C1(cnt_debounce_3), 
    .B1(cnt_debounce_2), .A1(cnt_debounce_8), .D0(cnt_debounce_0), 
    .C0(cnt_debounce_11), .B0(n18), .A0(n7797), .F0(n20_adj_1), .F1(n18));
  SLICE_221 SLICE_221( .B1(location_2), .A1(location_0), .D0(location_18), 
    .C0(location_28), .B0(n48_adj_40), .A0(n7739), .F0(n55_adj_35), .F1(n7739));
  SLICE_222 SLICE_222( .D1(location_31_N_633_16), .C1(location_31_N_633_2), 
    .B1(location_31_N_633_8), .A1(location_31_N_633_18), .D0(n8240), 
    .C0(segment_switch_flag_0), .B0(location_8), .A0(n1750), 
    .F0(location_31_N_633_8), .F1(n48_adj_23));
  SLICE_223 SLICE_223( .D1(location_31_N_633_28), .C1(location_31_N_633_0), 
    .B1(n48_adj_23), .A1(location_31_N_633_3), .D0(n8240), 
    .C0(segment_switch_flag_0), .B0(location_0), .A0(n1758), 
    .F0(location_31_N_633_0), .F1(n55));
  SLICE_224 SLICE_224( .D1(n8240), .C1(segment_switch_flag_0), 
    .B1(location_26), .A1(n1732), .D0(location_31_N_633_26), 
    .C0(location_31_N_633_21), .B0(location_31_N_633_25), 
    .A0(location_31_N_633_11), .F0(n49), .F1(location_31_N_633_26));
  SLICE_225 SLICE_225( .D1(n8240), .C1(segment_switch_flag_0), 
    .B1(location_20), .A1(n1738), .B0(location_31_N_633_20), 
    .A0(location_31_N_633_10), .F0(n44), .F1(location_31_N_633_20));
  SLICE_226 SLICE_226( .D1(matrix_key_code_3), .C1(matrix_key_code_0), 
    .B1(matrix_key_code_2), .A1(matrix_key_code_1), .D0(matrix_key_code_1), 
    .C0(matrix_key_code_2), .B0(matrix_key_code_3), .A0(matrix_key_code_0), 
    .F0(n8139), .F1(n6289));
  SLICE_227 SLICE_227( .D1(row_now_3), .C1(n8259), .B1(key_flag_1), 
    .A1(key_flag_0), .D0(n8259), .C0(row_now_3), .B0(key_flag_1), 
    .A0(key_flag_0), .F0(n4_adj_61), .F1(n8255));
  SLICE_228 SLICE_228( .D1(row_last_1), .C1(row_last_0), .B1(n8281), 
    .A1(n8273), .D0(n8273), .C0(row_last_3), .B0(row_last_0), .A0(row_last_1), 
    .F0(n4_adj_59), .F1(n8262));
  SLICE_229 SLICE_229( .C1(matrix_key_code_1), .B1(matrix_key_code_0), 
    .A1(matrix_key_code_2), .C0(matrix_key_code_2), .B0(matrix_key_code_1), 
    .A0(matrix_key_code_0), .F0(n7_adj_48), .F1(n4239));
  SLICE_230 SLICE_230( .C1(matrix_key_code_2), .B1(matrix_key_code_1), 
    .A1(matrix_key_code_0), .B0(matrix_key_code_2), .A0(matrix_key_code_1), 
    .F0(n8275), .F1(n14_adj_49));
  SLICE_231 SLICE_231( .D1(n8240), .C1(segment_switch_flag_0), 
    .B1(location_15), .A1(n1743), .D0(location_31_N_633_31), .C0(n3387), 
    .B0(segment_switch_flag_0), .A0(n8240), .F0(n8234), 
    .F1(location_31_N_633_15));
  SLICE_232 SLICE_232( .D1(row_now_0), .C1(row_now_3_N_36_3), .B1(row_now_2), 
    .A1(row_now_1), .B0(row_now_2), .A0(row_now_1), .F0(n8278), .F1(n8266));
  SLICE_233 SLICE_233( .D1(n8240), .C1(segment_switch_flag_0), 
    .B1(location_28), .A1(n1730), .D0(n8240), .C0(segment_switch_flag_0), 
    .B0(location_13), .A0(n1745), .F0(location_31_N_633_13), 
    .F1(location_31_N_633_28));
  SLICE_234 SLICE_234( .D1(n8240), .C1(segment_switch_flag_0), .B1(location_3), 
    .A1(n1755), .D0(n8240), .C0(segment_switch_flag_0), .B0(location_30), 
    .A0(n1728), .F0(location_31_N_633_30), .F1(location_31_N_633_3));
  SLICE_235 SLICE_235( .D1(n8240), .C1(segment_switch_flag_0), 
    .B1(location_10), .A1(n1748), .D0(n8240), .C0(segment_switch_flag_0), 
    .B0(location_19), .A0(n1739), .F0(location_31_N_633_19), 
    .F1(location_31_N_633_10));
  SLICE_236 SLICE_236( .D1(n8240), .C1(segment_switch_flag_0), 
    .B1(location_21), .A1(n1737), .D0(n8240), .C0(segment_switch_flag_0), 
    .B0(location_14), .A0(n1744), .F0(location_31_N_633_14), 
    .F1(location_31_N_633_21));
  SLICE_237 SLICE_237( .D1(n8240), .C1(segment_switch_flag_0), 
    .B1(location_25), .A1(n1733), .D0(n8240), .C0(segment_switch_flag_0), 
    .B0(location_22), .A0(n1736), .F0(location_31_N_633_22), 
    .F1(location_31_N_633_25));
  SLICE_238 SLICE_238( .D1(n8240), .C1(segment_switch_flag_0), 
    .B1(location_11), .A1(n1747), .D0(n8240), .C0(segment_switch_flag_0), 
    .B0(location_6), .A0(n1752), .F0(location_31_N_633_6), 
    .F1(location_31_N_633_11));
  SLICE_239 SLICE_239( .D1(n8240), .C1(segment_switch_flag_0), 
    .B1(location_16), .A1(n1742), .D0(n8240), .C0(segment_switch_flag_0), 
    .B0(location_4), .A0(n1754), .F0(location_31_N_633_4), 
    .F1(location_31_N_633_16));
  SLICE_240 SLICE_240( .D1(n8240), .C1(segment_switch_flag_0), 
    .B1(location_18), .A1(n1740), .D0(n8240), .C0(segment_switch_flag_0), 
    .B0(location_17), .A0(n1741), .F0(location_31_N_633_17), 
    .F1(location_31_N_633_18));
  SLICE_241 SLICE_241( .D1(n8240), .C1(segment_switch_flag_0), 
    .B1(location_24), .A1(n1734), .D0(n8240), .C0(segment_switch_flag_0), 
    .B0(location_12), .A0(n1746), .F0(location_31_N_633_12), 
    .F1(location_31_N_633_24));
  SLICE_242 SLICE_242( .C1(n4754), .B1(row_now_1), .A1(row_now_3), 
    .C0(row_now_3), .B0(key_flag_1), .A0(key_flag_0), .F0(n8268), .F1(n8249));
  SLICE_243 SLICE_243( .B1(matrix_key_code_3), .A1(matrix_key_code_1), 
    .B0(matrix_key_code_3), .A0(location_0), .F0(n7811), .F1(n4201));
  SLICE_244 SLICE_244( .C1(cnt_100_5), .B1(cnt_100_6), .A1(cnt_100_2), 
    .B0(cnt_100_4), .A0(cnt_100_1), .F0(n6), .F1(n7793));
  SLICE_245 SLICE_245( .D1(location_6), .C1(location_22), .B1(location_5), 
    .A1(location_19), .B0(location_30), .A0(location_27), .F0(n39_adj_45), 
    .F1(n52_adj_37));
  SLICE_246 SLICE_246( .A1(segment_switch_flag_0), .B0(location_23), 
    .A0(location_15), .F0(n44_adj_42), .F1(n63));
  SLICE_247 SLICE_247( .B1(row_now_0), .A1(row_c_1), .B0(sck_c_c_enable_57), 
    .A0(n8259), .F0(n5098), .F1(n7715));
  SLICE_248 SLICE_248( .D1(location_8), .C1(location_24), .B1(location_1), 
    .A1(location_17), .D0(location_12), .C0(location_26), .B0(location_9), 
    .A0(location_25), .F0(n49_adj_39), .F1(n50_adj_38));
  row_2_ \row[2]_I ( .PADDO(row_c_2), .row2(row[2]));
  row_3_ \row[3]_I ( .PADDO(row_now_3_N_36_3), .row3(row[3]));
  din din_I( .PADDO(din_c), .din(din));
  rck rck_I( .PADDO(rck_c), .rck(rck));
  sck sck_I( .PADDO(sck_c_c), .sck(sck));
  column_0_ \column[0]_I ( .PADDI(column_c_0), .column0(column[0]));
  column_1_ \column[1]_I ( .PADDI(column_c_1), .column1(column[1]));
  column_2_ \column[2]_I ( .PADDI(column_c_2), .column2(column[2]));
  column_3_ \column[3]_I ( .PADDI(column_c_3), .column3(column[3]));
  button_0_ \button[0]_I ( .PADDI(button_c_0), .button0(button[0]));
  button_1_ \button[1]_I ( .PADDI(button_c_1), .button1(button[1]));
  button_2_ \button[2]_I ( .PADDI(button_c_2), .button2(button[2]));
  button_3_ \button[3]_I ( .PADDI(button_c_3), .button3(button[3]));
  clk clk_I( .PADDI(sck_c_c), .clk(clk));
  seven_segment_disp_dp_0_ \seven_segment_disp_dp[0]_I ( .PADDO(GND_net), 
    .sevensegmentdispdp0(seven_segment_disp_dp[0]));
  seven_segment_disp_dp_1_ \seven_segment_disp_dp[1]_I ( .PADDO(GND_net), 
    .sevensegmentdispdp1(seven_segment_disp_dp[1]));
  seven_segment_disp_right_0_ \seven_segment_disp_right[0]_I ( 
    .PADDO(seven_segment_disp_right_c_0), 
    .sevensegmentdispright0(seven_segment_disp_right[0]));
  seven_segment_disp_right_1_ \seven_segment_disp_right[1]_I ( 
    .PADDO(seven_segment_disp_right_c_1), 
    .sevensegmentdispright1(seven_segment_disp_right[1]));
  seven_segment_disp_right_2_ \seven_segment_disp_right[2]_I ( 
    .PADDO(seven_segment_disp_right_c_2), 
    .sevensegmentdispright2(seven_segment_disp_right[2]));
  seven_segment_disp_right_3_ \seven_segment_disp_right[3]_I ( 
    .PADDO(seven_segment_disp_right_c_3), 
    .sevensegmentdispright3(seven_segment_disp_right[3]));
  seven_segment_disp_right_4_ \seven_segment_disp_right[4]_I ( 
    .PADDO(seven_segment_disp_right_c_4), 
    .sevensegmentdispright4(seven_segment_disp_right[4]));
  seven_segment_disp_right_5_ \seven_segment_disp_right[5]_I ( 
    .PADDO(seven_segment_disp_right_c_5), 
    .sevensegmentdispright5(seven_segment_disp_right[5]));
  seven_segment_disp_right_6_ \seven_segment_disp_right[6]_I ( 
    .PADDO(seven_segment_disp_right_c_6), 
    .sevensegmentdispright6(seven_segment_disp_right[6]));
  seven_segment_disp_left_0_ \seven_segment_disp_left[0]_I ( .PADDO(GND_net), 
    .sevensegmentdispleft0(seven_segment_disp_left[0]));
  seven_segment_disp_left_1_ \seven_segment_disp_left[1]_I ( 
    .PADDO(seven_segment_disp_left_c_1), 
    .sevensegmentdispleft1(seven_segment_disp_left[1]));
  seven_segment_disp_left_2_ \seven_segment_disp_left[2]_I ( 
    .PADDO(seven_segment_disp_left_c_1), 
    .sevensegmentdispleft2(seven_segment_disp_left[2]));
  seven_segment_disp_left_3_ \seven_segment_disp_left[3]_I ( .PADDO(GND_net), 
    .sevensegmentdispleft3(seven_segment_disp_left[3]));
  seven_segment_disp_left_4_ \seven_segment_disp_left[4]_I ( .PADDO(GND_net), 
    .sevensegmentdispleft4(seven_segment_disp_left[4]));
  seven_segment_disp_left_5_ \seven_segment_disp_left[5]_I ( .PADDO(GND_net), 
    .sevensegmentdispleft5(seven_segment_disp_left[5]));
  seven_segment_disp_left_6_ \seven_segment_disp_left[6]_I ( .PADDO(GND_net), 
    .sevensegmentdispleft6(seven_segment_disp_left[6]));
  row_0_ \row[0]_I ( .PADDO(row_c_0), .row0(row[0]));
  row_1_ \row[1]_I ( .PADDO(row_c_1), .row1(row[1]));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCCI));
  GSR GSR_INST( .GSR(VCCI));
endmodule

module SLICE_0 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce_1025_1026__i15( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce_1025_1026__i14( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce_1025_1026_add_4_15( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module SLICE_1 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_31( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_2 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce2_1027_1028__i15( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce2_1027_1028__i14( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce2_1027_1028_add_4_15( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_3 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_29( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_4 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_27( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_5 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce_1025_1026__i13( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce_1025_1026__i12( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce_1025_1026_add_4_13( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_6 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce_1025_1026__i11( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce_1025_1026__i10( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce_1025_1026_add_4_11( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_7 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce2_1027_1028__i3( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce2_1027_1028__i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce2_1027_1028_add_4_3( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_8 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce_1025_1026__i9( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce_1025_1026__i8( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce_1025_1026_add_4_9( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_9 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce_1025_1026__i7( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce_1025_1026__i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce_1025_1026_add_4_7( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_10 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce_1025_1026__i5( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce_1025_1026__i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce_1025_1026_add_4_5( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_11 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce_1025_1026__i3( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce_1025_1026__i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce_1025_1026_add_4_3( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_12 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce_1025_1026__i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 cnt_debounce_1025_1026_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_13 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_disp_1ms_1021_1022__i17( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_disp_1ms_1021_1022__i16( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_disp_1ms_1021_1022_add_4_17( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_14 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_disp_1ms_1021_1022__i15( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_disp_1ms_1021_1022__i14( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_disp_1ms_1021_1022_add_4_15( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_15 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_disp_1ms_1021_1022__i13( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_disp_1ms_1021_1022__i12( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_disp_1ms_1021_1022_add_4_13( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_16 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce2_1027_1028__i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 cnt_debounce2_1027_1028_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_17 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_disp_1ms_1021_1022__i11( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_disp_1ms_1021_1022__i10( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_disp_1ms_1021_1022_add_4_11( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_18 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_25( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_19 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_disp_1ms_1021_1022__i9( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_disp_1ms_1021_1022__i8( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_disp_1ms_1021_1022_add_4_9( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_20 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_23( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_21 ( input A0, FCI, output F1 );
  wire   GNDI;

  ccu20003 add_4267_28( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_22 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_disp_1ms_1021_1022__i7( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_disp_1ms_1021_1022__i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_disp_1ms_1021_1022_add_4_7( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_23 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_24 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 add_4267_26( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_25 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_disp_1ms_1021_1022__i5( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_disp_1ms_1021_1022__i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_disp_1ms_1021_1022_add_4_5( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_26 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_27 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 add_4267_24( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_28 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_disp_1ms_1021_1022__i3( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_disp_1ms_1021_1022__i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_disp_1ms_1021_1022_add_4_3( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_29 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_30 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce2_1027_1028__i13( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce2_1027_1028__i12( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce2_1027_1028_add_4_13( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_31 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce2_1027_1028__i11( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce2_1027_1028__i10( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce2_1027_1028_add_4_11( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_32 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 add_4267_22( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_33 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_disp_1ms_1021_1022__i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 cnt_disp_1ms_1021_1022_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_34 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_35 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce2_1027_1028__i9( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce2_1027_1028__i8( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce2_1027_1028_add_4_9( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_36 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 add_4267_20( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_37 ( input D0, C0, B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20005 add_237_33( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf404;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_38 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_39 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce2_1027_1028__i7( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce2_1027_1028__i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce2_1027_1028_add_4_7( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_40 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 add_4267_18( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_41 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 add_4267_16( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_42 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 add_4267_14( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_43 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 add_4267_12( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_44 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 add_4267_10( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_45 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 add_4267_8( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_46 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 add_4267_6( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_47 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 add_4267_4( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_48 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_31( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf404;
  defparam inst1.INIT1 = 16'hf404;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_49 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_50 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_29( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_51 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_27( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_52 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_25( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_53 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_23( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_54 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_21( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_55 ( input A1, B0, A0, output FCO );
  wire   GNDI;

  ccu20007 add_4267_2( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h1000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_56 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_57 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_19( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_58 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_59 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_17( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_60 ( input D0, C0, B0, A0, FCI, output F1 );
  wire   GNDI;

  ccu20008 add_4266_29( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf535;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_61 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_15( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_62 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_63 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20009 add_4266_27( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20009 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0bfb;
  defparam inst1.INIT1 = 16'h0bfb;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_64 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_217_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_65 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_13( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_66 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce2_1027_1028__i5( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce2_1027_1028__i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce2_1027_1028_add_4_5( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_67 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20010 add_217_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20010 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_68 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_11( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_69 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20009 add_4266_25( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_70 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20009 add_4266_23( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_71 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20009 add_4266_21( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_72 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20009 add_4266_19( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_73 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_9( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_74 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce2_1027_1028__i19( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce2_1027_1028__i18( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce2_1027_1028_add_4_19( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_75 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20009 add_4266_17( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_76 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20009 add_4266_15( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_77 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20009 add_4266_13( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_78 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20009 add_4266_11( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_79 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20009 add_4266_9( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_80 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_7( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_81 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20009 add_4266_7( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_82 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_5( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_83 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20009 add_4266_5( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_84 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output FCO );

  ccu20009 add_4266_3( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_85 ( input D1, C1, B1, A1, output FCO );
  wire   GNDI;

  ccu20011 add_4266_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20011 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0bfb;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_86 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce2_1027_1028__i17( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce2_1027_1028__i16( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce2_1027_1028_add_4_17( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_87 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_100_1023_1024__i7( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_100_1023_1024__i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_100_1023_1024_add_4_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_88 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_100_1023_1024__i5( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_100_1023_1024__i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_100_1023_1024_add_4_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_89 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre cnt_100_1023_1024__i3( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_100_1023_1024__i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_100_1023_1024_add_4_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_90 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20006 add_237_3( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_91 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre cnt_100_1023_1024__i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 cnt_100_1023_1024_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_92 ( input D1, C1, B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20011 add_237_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_93 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre cnt_debounce_1025_1026__i17( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre cnt_debounce_1025_1026__i16( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 cnt_debounce_1025_1026_add_4_17( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_94 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20012 add_217_33( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20012 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_95 ( input DI0, CE, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut4 m1_lut( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre button_flag_253( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_98 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, CLK, output 
    OFX0, Q0 );
  wire   GNDI, \SLICE_98/SLICE_98_K1_H1 , \SLICE_98/i1282/GATE_H0 , VCCI, 
         CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40013 SLICE_98_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_98/SLICE_98_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \i1282/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_98/i1282/GATE_H0 ));
  vmuxregsre0015 din_268( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 SLICE_98_K0K1MUX( .D0(\SLICE_98/i1282/GATE_H0 ), 
    .D1(\SLICE_98/SLICE_98_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0015 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module SLICE_99 ( input D1, C1, B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40016 i2_3_lut_rep_164_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40017 i3370_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 key_flag_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_100 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, FXB, FXA, 
    CE, CLK, output OFX0, Q1, OFX1 );
  wire   \SLICE_100/row_3__I_0_275_Mux_1_i14/GATE_H1 , 
         \SLICE_100/SLICE_100_K0_H0 , VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40018 \row_3__I_0_275_Mux_1_i14/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_100/row_3__I_0_275_Mux_1_i14/GATE_H1 ));
  lut40019 SLICE_100_K0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_100/SLICE_100_K0_H0 ));
  vmuxregsre0015 key_flag_i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_100_K0K1MUX( .D0(\SLICE_100/SLICE_100_K0_H0 ), 
    .D1(\SLICE_100/row_3__I_0_275_Mux_1_i14/GATE_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_100_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8C88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_101 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i2_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_102 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i4_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i3( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_103 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i6_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i5_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i5( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_104 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i8_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i7_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i7( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_105 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i10_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i9_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i9( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i8( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_106 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i12_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i11_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i11( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i10( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_107 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i14_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i13_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i13( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i12( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_108 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i16_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i15_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i15( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i14( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_109 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i18_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i17_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i17( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i16( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_110 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i20_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i19_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i19( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i18( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_111 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i22_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i21_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i21( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i20( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_112 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i24_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i23_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i23( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i22( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_113 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i26_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i25_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i25( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i24( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_114 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i28_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i27_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i27( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i26( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_115 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i30_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i29_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i29( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i28( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_116 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40020 location_31__I_0_282_i32_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40020 location_31__I_0_282_i31_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 location_i31( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 location_i30( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_117 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40021 i1_3_lut_adj_9( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40021 i1_3_lut_adj_18( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0015 matrix_key_code_i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0015 matrix_key_code_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_118 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40022 i4970_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40023 row_c_0_bdd_4_lut_5174( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 matrix_key_code_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F7F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_119 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40024 i77_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40025 i2341_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 matrix_key_code_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_120 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40021 i1_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40026 i49_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 matrix_key_code_i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h977F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_121 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40027 i29_4_lut_adj_34( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 i1284_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 rck_270( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5053) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_123 ( input A0, DI0, M1, LSR, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut40029 i1234_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0030 row_i1( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0030 row_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0030 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3JY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module SLICE_125 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40016 row_now_1__bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 i3351_3_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0032 row_last_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7FFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0032 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module SLICE_126 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40033 i1681_2_lut_rep_142_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40034 i4973_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0032 row_last_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF8F8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_127 ( input D0, C0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40035 i5001_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0032 row_last_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F77) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_128 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40036 i1664_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40037 i2702_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0032 row_last_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD0D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h01F1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_129 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40038 i2268_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 i4983_2_lut_rep_171_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0032 row_now_i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0032 row_now_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_130 ( input B0, A0, DI0, M1, CE, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40039 i2264_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0032 row_now_i3( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0032 row_now_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_131 ( input D0, C0, B0, A0, M1, M0, LSR, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut40040 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 i2_3_lut_4_lut_adj_39( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0030 row_i3( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0030 row_i4( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_132 ( input D1, C1, B1, A1, B0, A0, M0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40041 i17_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 i5_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0032 scan_state_i0( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_133 ( input D1, C1, B1, A1, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40027 i9_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 i1243_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 scan_state_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_134 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40044 i1886_2_lut_rep_138_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40045 i4964_2_lut_rep_135_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 segment_switch_flag_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h10F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5540) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_135 ( input B1, A1, B0, A0, DI0, CE, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40042 i1_2_lut_adj_10( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 i4980_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre seven_segment_disp_left__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_136 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40047 i33_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 button_c_0_bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 seven_segment_disp_right_i0_i2( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 seven_segment_disp_right_i0_i1( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7FD6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3E7D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_137 ( input D1, C1, B1, A1, C0, B0, A0, DI0, CE, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40027 i7_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 i1536_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0030 seven_segment_disp_right_i0_i3( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3D3D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_138 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40050 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 button_c_2_bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 seven_segment_disp_right_i0_i4( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7BDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h37E9) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_139 ( input B1, A1, C0, B0, A0, DI0, CE, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40052 i1033_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 i1531_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre seven_segment_disp_right_i0_i5( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7676) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_140 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40054 mux_12_Mux_6_i15_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40055 mux_12_Mux_5_i15_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0015 seven_segment_disp_right_i0_i7( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 seven_segment_disp_right_i0_i6( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3ECF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0EE3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_141 ( input D1, C1, B1, A1, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40056 i4977_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 i1_2_lut_adj_19( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 state_clk_259( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_142 ( input D1, C1, B1, A1, C0, B0, A0, M1, FXB, FXA, output OFX0, 
    F1, OFX1 );
  wire   GNDI, \SLICE_142/i5051/GATE_H0 ;

  lut40057 n4646_bdd_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \i5051/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_142/i5051/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux20059 SLICE_142_K0K1MUX( .D0(\SLICE_142/i5051/GATE_H0 ), .Z(OFX0));
  selmux2 SLICE_142_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h77F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux20059 ( input D0, output Z );

  BUFBA INST1( .A(D0), .Z(Z));
endmodule

module location_3__I_0_i5_SLICE_143 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \location_3__I_0_i5/SLICE_143/location_3__I_0_i5/SLICE_143_K1_H1 , 
         \location_3__I_0_i5/SLICE_143/location_3__I_0_i5/GATE_H0 ;

  lut40060 \location_3__I_0_i5/SLICE_143_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\location_3__I_0_i5/SLICE_143/location_3__I_0_i5/SLICE_143_K1_H1 ));
  lut40061 \location_3__I_0_i5/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\location_3__I_0_i5/SLICE_143/location_3__I_0_i5/GATE_H0 ));
  selmux2 \location_3__I_0_i5/SLICE_143_K0K1MUX ( 
    .D0(\location_3__I_0_i5/SLICE_143/location_3__I_0_i5/GATE_H0 ), 
    .D1(\location_3__I_0_i5/SLICE_143/location_3__I_0_i5/SLICE_143_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3D1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i5103_SLICE_144 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i5103/SLICE_144/i5103/SLICE_144_K1_H1 , 
         \i5103/SLICE_144/i5103/GATE_H0 ;

  lut40062 \i5103/SLICE_144_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i5103/SLICE_144/i5103/SLICE_144_K1_H1 ));
  lut40063 \i5103/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i5103/SLICE_144/i5103/GATE_H0 ));
  selmux2 \i5103/SLICE_144_K0K1MUX ( .D0(\i5103/SLICE_144/i5103/GATE_H0 ), 
    .D1(\i5103/SLICE_144/i5103/SLICE_144_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i5099_SLICE_145 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5099/SLICE_145/i5099/SLICE_145_K1_H1 , 
         \i5099/SLICE_145/i5099/GATE_H0 ;

  lut40064 \i5099/SLICE_145_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5099/SLICE_145/i5099/SLICE_145_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \i5099/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5099/SLICE_145/i5099/GATE_H0 ));
  selmux2 \i5099/SLICE_145_K0K1MUX ( .D0(\i5099/SLICE_145/i5099/GATE_H0 ), 
    .D1(\i5099/SLICE_145/i5099/SLICE_145_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCECE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4F4F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i5020_SLICE_146 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i5020/SLICE_146/i5020/SLICE_146_K1_H1 , GNDI, 
         \i5020/SLICE_146/i5020/GATE_H0 ;

  lut40066 \i5020/SLICE_146_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i5020/SLICE_146/i5020/SLICE_146_K1_H1 ));
  lut40067 \i5020/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5020/SLICE_146/i5020/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i5020/SLICE_146_K0K1MUX ( .D0(\i5020/SLICE_146/i5020/GATE_H0 ), 
    .D1(\i5020/SLICE_146/i5020/SLICE_146_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC48C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hADAD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i5079_SLICE_147 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i5079/SLICE_147/i5079/SLICE_147_K1_H1 , GNDI, 
         \i5079/SLICE_147/i5079/GATE_H0 ;

  lut40068 \i5079/SLICE_147_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i5079/SLICE_147/i5079/SLICE_147_K1_H1 ));
  lut40069 \i5079/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5079/SLICE_147/i5079/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i5079/SLICE_147_K0K1MUX ( .D0(\i5079/SLICE_147/i5079/GATE_H0 ), 
    .D1(\i5079/SLICE_147/i5079/SLICE_147_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h101F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5353) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i2315_SLICE_148 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i2315/SLICE_148/i2315/SLICE_148_K1_H1 , 
         \i2315/SLICE_148/i2315/GATE_H0 ;

  lut40070 \i2315/SLICE_148_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i2315/SLICE_148/i2315/SLICE_148_K1_H1 ));
  lut40071 \i2315/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i2315/SLICE_148/i2315/GATE_H0 ));
  selmux2 \i2315/SLICE_148_K0K1MUX ( .D0(\i2315/SLICE_148/i2315/GATE_H0 ), 
    .D1(\i2315/SLICE_148/i2315/SLICE_148_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i2338_SLICE_149 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i2338/SLICE_149/i2338/SLICE_149_K1_H1 , 
         \i2338/SLICE_149/i2338/GATE_H0 ;

  lut40072 \i2338/SLICE_149_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i2338/SLICE_149/i2338/SLICE_149_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40073 \i2338/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i2338/SLICE_149/i2338/GATE_H0 ));
  selmux2 \i2338/SLICE_149_K0K1MUX ( .D0(\i2338/SLICE_149/i2338/GATE_H0 ), 
    .D1(\i2338/SLICE_149/i2338/SLICE_149_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i2339_SLICE_150 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \i2339/SLICE_150/i2339/SLICE_150_K1_H1 , 
         \i2339/SLICE_150/i2339/GATE_H0 ;

  lut40073 \i2339/SLICE_150_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i2339/SLICE_150/i2339/SLICE_150_K1_H1 ));
  lut40074 \i2339/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i2339/SLICE_150/i2339/GATE_H0 ));
  selmux2 \i2339/SLICE_150_K0K1MUX ( .D0(\i2339/SLICE_150/i2339/GATE_H0 ), 
    .D1(\i2339/SLICE_150/i2339/SLICE_150_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i2339/SLICE_150_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0E00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i52_SLICE_151 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i52/SLICE_151/i52/SLICE_151_K1_H1 , \i52/SLICE_151/i52/GATE_H0 ;

  lut40075 \i52/SLICE_151_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i52/SLICE_151/i52/SLICE_151_K1_H1 ));
  lut40076 \i52/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i52/SLICE_151/i52/GATE_H0 ));
  selmux2 \i52/SLICE_151_K0K1MUX ( .D0(\i52/SLICE_151/i52/GATE_H0 ), 
    .D1(\i52/SLICE_151/i52/SLICE_151_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h010F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i65_SLICE_152 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i65/SLICE_152/i65/SLICE_152_K1_H1 , \i65/SLICE_152/i65/GATE_H0 ;

  lut40077 \i65/SLICE_152_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i65/SLICE_152/i65/SLICE_152_K1_H1 ));
  lut40078 \i65/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i65/SLICE_152/i65/GATE_H0 ));
  selmux2 \i65/SLICE_152_K0K1MUX ( .D0(\i65/SLICE_152/i65/GATE_H0 ), 
    .D1(\i65/SLICE_152/i65/SLICE_152_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i27_SLICE_153 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i27/SLICE_153/i27/SLICE_153_K1_H1 , 
         \i27/SLICE_153/i27/GATE_H0 ;

  lut40079 \i27/SLICE_153_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i27/SLICE_153/i27/SLICE_153_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40080 \i27/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i27/SLICE_153/i27/GATE_H0 ));
  selmux2 \i27/SLICE_153_K0K1MUX ( .D0(\i27/SLICE_153/i27/GATE_H0 ), 
    .D1(\i27/SLICE_153/i27/SLICE_153_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4545) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC4C4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i5055_SLICE_154 ( input D1, C1, B1, A1, B0, A0, M0, output OFX0 );
  wire   \i5055/SLICE_154/i5055/SLICE_154_K1_H1 , GNDI, 
         \i5055/SLICE_154/i5055/GATE_H0 ;

  lut40081 \i5055/SLICE_154_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i5055/SLICE_154/i5055/SLICE_154_K1_H1 ));
  lut40082 \i5055/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\i5055/SLICE_154/i5055/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i5055/SLICE_154_K0K1MUX ( .D0(\i5055/SLICE_154/i5055/GATE_H0 ), 
    .D1(\i5055/SLICE_154/i5055/SLICE_154_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9DBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9999) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i21_SLICE_155 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \i21/SLICE_155/i21/SLICE_155_K1_H1 , \i21/SLICE_155/i21/GATE_H0 ;

  lut40083 \i21/SLICE_155_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i21/SLICE_155/i21/SLICE_155_K1_H1 ));
  lut40019 \i21/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i21/SLICE_155/i21/GATE_H0 ));
  selmux2 \i21/SLICE_155_K0K1MUX ( .D0(\i21/SLICE_155/i21/GATE_H0 ), 
    .D1(\i21/SLICE_155/i21/SLICE_155_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i21/SLICE_155_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h80C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i5046_SLICE_156 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i5046/SLICE_156/i5046/SLICE_156_K1_H1 , 
         \i5046/SLICE_156/i5046/GATE_H0 ;

  lut40084 \i5046/SLICE_156_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i5046/SLICE_156/i5046/SLICE_156_K1_H1 ));
  lut40085 \i5046/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i5046/SLICE_156/i5046/GATE_H0 ));
  selmux2 \i5046/SLICE_156_K0K1MUX ( .D0(\i5046/SLICE_156/i5046/GATE_H0 ), 
    .D1(\i5046/SLICE_156/i5046/SLICE_156_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0434) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h10F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i52_adj_44_SLICE_157 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \i52_adj_44/SLICE_157/i52_adj_44/SLICE_157_K1_H1 , 
         \i52_adj_44/SLICE_157/i52_adj_44/GATE_H0 ;

  lut40086 \i52_adj_44/SLICE_157_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i52_adj_44/SLICE_157/i52_adj_44/SLICE_157_K1_H1 ));
  lut40087 \i52_adj_44/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i52_adj_44/SLICE_157/i52_adj_44/GATE_H0 ));
  selmux2 \i52_adj_44/SLICE_157_K0K1MUX ( 
    .D0(\i52_adj_44/SLICE_157/i52_adj_44/GATE_H0 ), 
    .D1(\i52_adj_44/SLICE_157/i52_adj_44/SLICE_157_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i52_adj_47_SLICE_158 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \i52_adj_47/SLICE_158/i52_adj_47/SLICE_158_K1_H1 , 
         \i52_adj_47/SLICE_158/i52_adj_47/GATE_H0 ;

  lut40086 \i52_adj_47/SLICE_158_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i52_adj_47/SLICE_158/i52_adj_47/SLICE_158_K1_H1 ));
  lut40087 \i52_adj_47/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i52_adj_47/SLICE_158/i52_adj_47/GATE_H0 ));
  selmux2 \i52_adj_47/SLICE_158_K0K1MUX ( 
    .D0(\i52_adj_47/SLICE_158/i52_adj_47/GATE_H0 ), 
    .D1(\i52_adj_47/SLICE_158/i52_adj_47/SLICE_158_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5118_SLICE_159 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i5118/SLICE_159/i5118/SLICE_159_K1_H1 , GNDI, 
         \i5118/SLICE_159/i5118/GATE_H0 ;

  lut40088 \i5118/SLICE_159_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i5118/SLICE_159/i5118/SLICE_159_K1_H1 ));
  lut40089 \i5118/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5118/SLICE_159/i5118/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i5118/SLICE_159_K0K1MUX ( .D0(\i5118/SLICE_159/i5118/GATE_H0 ), 
    .D1(\i5118/SLICE_159/i5118/SLICE_159_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBDF9) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_160 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40090 mux_225_rep_3_i32_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40091 i1283_2_lut_rep_134_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0CAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h444F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_161 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40092 i1_4_lut_adj_4( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40093 i4987_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2223) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_162 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40094 i3296_2_lut_rep_146_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40041 i1_2_lut_rep_156_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_163 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40058 matrix_key_code_1__bdd_3_lut_5059( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 column_c_0_bdd_4_lut_5024( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 button_last_i0_i3( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0015 button_last_i0_i2( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB22A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_164 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40095 matrix_key_code_0__bdd_4_lut_5023( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40058 matrix_key_code_0__bdd_3_lut_5031( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_165 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40096 i2543_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40097 i1_3_lut_4_lut_adj_13( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h02CE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEC20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_166 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40041 i1_2_lut_rep_153_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40098 i1523_2_lut_rep_144_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCC4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_167 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40099 i3567_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 n4207_bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCE8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_168 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40101 i1_3_lut_4_lut_4_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40042 i3314_2_lut_rep_185( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3B0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_169 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 i3311_2_lut_rep_140( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40102 i4966_3_lut_4_lut_4_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE0E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_170 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40050 i2_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40103 button_flag_I_6_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3232) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_171 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40104 i2394_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40105 i2375_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_172 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40106 i5_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40106 i6_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_173 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40027 i6_4_lut_adj_1( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40107 i8_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_174 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 i10_4_lut_rep_160( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40108 i2_2_lut_rep_152_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_175 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 i1_2_lut_rep_175( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40109 i1_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00FD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_176 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40110 i61_4_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 i1_3_lut_4_lut_adj_2( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9797) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_177 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40112 i1_2_lut_rep_169_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40113 i1_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_178 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40114 i3_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 i1_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 i23_4_lut_adj_46( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i24_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_180 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40115 i2_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40116 i2_3_lut_rep_147( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_181 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40117 i2_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40117 i1_3_lut_adj_5( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_182 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40118 i14_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40119 i1_2_lut_rep_143_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3530) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEF00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_183 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40027 i30_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40120 i4879_3_lut_rep_136( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_184 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 i30_4_lut_rep_159( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40121 i4967_3_lut_4_lut_4_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_185 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40122 i1_4_lut_rep_158( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40123 i10_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_186 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40124 i1_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40107 i2_2_lut_rep_166_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F4F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_187 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40090 mux_225_rep_3_i30_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40125 i3429_2_lut_rep_139_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE0E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_188 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40058 n8201_bdd_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \i5101/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_189 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40126 i4990_2_lut_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40127 i5005_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0405) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_190 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40128 i1_2_lut_rep_173_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40129 i1_4_lut_adj_8( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFABB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_191 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 i3_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40027 i11_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_192 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 i4862_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40106 i4890_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_193 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40130 i1_2_lut_3_lut_4_lut_adj_23( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40117 i1_2_lut_rep_168_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_194 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40131 n45_bdd_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40122 i1_2_lut_rep_163_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h10FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_195 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40132 row_now_1__bdd_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40133 n8088_bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_196 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40041 i1_2_lut_rep_150_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40117 i2_3_lut_rep_176( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_197 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40134 n45_bdd_1_lut_5081_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40024 column_c_0_bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0015 button_last_i0_i1( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 button_last_i0_i0( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1F0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_198 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40027 i29_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 i9_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_199 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 i27_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40027 i23_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_200 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40090 mux_225_rep_3_i3_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40135 i3299_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4848) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_201 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40123 i1_2_lut_rep_151_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40099 i1_3_lut_rep_170_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_202 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40136 i1_4_lut_adj_24( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40137 i3349_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_203 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 i9_2_lut_adj_45( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 mux_225_rep_3_i28_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_204 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40138 i3425_2_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40106 i2_3_lut_rep_172_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDF00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_205 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 i1548_2_lut_rep_183( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 i1_3_lut_4_lut_adj_11( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_206 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40139 i2_3_lut_rep_162_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 i1_2_lut_rep_180( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40139 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF7F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_207 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40140 i2_3_lut_4_lut_adj_27( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 i1_2_lut_rep_181( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40140 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_208 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40141 i2_2_lut_rep_157_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40044 i1_2_lut_rep_141_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40141 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_209 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 i21_4_lut_adj_41( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i8_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_210 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40099 i2_3_lut_4_lut_adj_43( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 i1_2_lut_rep_182( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_211 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40142 i1663_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40098 i1560_2_lut_rep_145_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40142 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFE3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_212 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 i1_2_lut_rep_155( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40041 i2_3_lut_rep_149_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_213 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40143 n5_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40144 matrix_key_code_4__I_0_273_Mux_4_i7_3_lut_4_lut_3_lut( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40144 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB6B6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_214 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40106 i4894_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40106 i4896_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_215 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 i27_4_lut_adj_40( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i6_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_216 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40058 n8208_bdd_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 n8205_bdd_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_217 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40046 i4998_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40145 i1_4_lut_adj_21( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0EC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_218 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 i8_2_lut_adj_38( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 mux_225_rep_3_i2_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_219 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 i19_4_lut_adj_36( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i10_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_220 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 i7_4_lut_adj_30( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40041 i9_4_lut_adj_28( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_221 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 i1_2_lut_adj_29( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40027 i24_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_222 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 i17_4_lut_adj_37( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i9_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_223 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 i24_4_lut_adj_33( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_224 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40090 mux_225_rep_3_i27_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40027 i18_4_lut_adj_35( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_225 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40090 mux_225_rep_3_i21_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 i13_2_lut_adj_48( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_226 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 i3558_2_lut_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40146 matrix_key_code_0__bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40146 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEBF6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_227 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40122 i1_2_lut_rep_154_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40130 i1_2_lut_3_lut_4_lut_adj_12( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_228 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40099 i2_3_lut_rep_161_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40106 i1_2_lut_3_lut_4_lut_adj_15( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_229 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40058 i1514_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40147 i3369_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF6F6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_230 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40148 matrix_key_code_4__I_0_273_Mux_7_i14_4_lut_3_lut( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 i1482_2_lut_rep_174( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40148 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDBDB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_231 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40090 mux_225_rep_3_i16_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40149 i5010_2_lut_rep_133_3_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_232 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40139 i1_2_lut_rep_165_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 i3377_2_lut_rep_177( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_233 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40090 mux_225_rep_3_i29_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i14_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_234 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40090 mux_225_rep_3_i4_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i31_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_235 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40090 mux_225_rep_3_i11_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i20_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_236 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40090 mux_225_rep_3_i22_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i15_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_237 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40090 mux_225_rep_3_i26_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i23_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_238 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40090 mux_225_rep_3_i12_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i7_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_239 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40090 mux_225_rep_3_i17_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i5_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_240 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40090 mux_225_rep_3_i19_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i18_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_241 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40090 mux_225_rep_3_i25_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 mux_225_rep_3_i13_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_242 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40150 i2_3_lut_rep_148_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40117 i1_2_lut_rep_167_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40150 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_243 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40043 i1795_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 i4991_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_244 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40128 i4892_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 i1_2_lut_adj_20( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_245 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40027 i21_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 i8_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_246 ( input A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40029 i1138_1_lut( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 i13_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_247 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40104 i1_2_lut_adj_22( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40126 i4993_2_lut_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_248 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40027 i19_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40027 i18_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module row_2_ ( input PADDO, output row2 );
  wire   GNDI;

  xo2iobuf row_pad_2( .I(PADDO), .T(GNDI), .PAD(row2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => row2) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module row_3_ ( input PADDO, output row3 );
  wire   GNDI;

  xo2iobuf row_pad_3( .I(PADDO), .T(GNDI), .PAD(row3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => row3) = (0:0:0,0:0:0);
  endspecify

endmodule

module din ( input PADDO, output din );
  wire   GNDI;

  xo2iobuf din_pad( .I(PADDO), .T(GNDI), .PAD(din));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => din) = (0:0:0,0:0:0);
  endspecify

endmodule

module rck ( input PADDO, output rck );
  wire   GNDI;

  xo2iobuf rck_pad( .I(PADDO), .T(GNDI), .PAD(rck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => rck) = (0:0:0,0:0:0);
  endspecify

endmodule

module sck ( input PADDO, output sck );
  wire   GNDI;

  xo2iobuf sck_pad( .I(PADDO), .T(GNDI), .PAD(sck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sck) = (0:0:0,0:0:0);
  endspecify

endmodule

module column_0_ ( output PADDI, input column0 );

  xo2iobuf0151 column_pad_0( .Z(PADDI), .PAD(column0));

  specify
    (column0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge column0, 0:0:0);
    $width (negedge column0, 0:0:0);
  endspecify

endmodule

module xo2iobuf0151 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module column_1_ ( output PADDI, input column1 );

  xo2iobuf0151 column_pad_1( .Z(PADDI), .PAD(column1));

  specify
    (column1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge column1, 0:0:0);
    $width (negedge column1, 0:0:0);
  endspecify

endmodule

module column_2_ ( output PADDI, input column2 );

  xo2iobuf0151 column_pad_2( .Z(PADDI), .PAD(column2));

  specify
    (column2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge column2, 0:0:0);
    $width (negedge column2, 0:0:0);
  endspecify

endmodule

module column_3_ ( output PADDI, input column3 );

  xo2iobuf0151 column_pad_3( .Z(PADDI), .PAD(column3));

  specify
    (column3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge column3, 0:0:0);
    $width (negedge column3, 0:0:0);
  endspecify

endmodule

module button_0_ ( output PADDI, input button0 );

  xo2iobuf0151 button_pad_0( .Z(PADDI), .PAD(button0));

  specify
    (button0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge button0, 0:0:0);
    $width (negedge button0, 0:0:0);
  endspecify

endmodule

module button_1_ ( output PADDI, input button1 );

  xo2iobuf0151 button_pad_1( .Z(PADDI), .PAD(button1));

  specify
    (button1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge button1, 0:0:0);
    $width (negedge button1, 0:0:0);
  endspecify

endmodule

module button_2_ ( output PADDI, input button2 );

  xo2iobuf0151 button_pad_2( .Z(PADDI), .PAD(button2));

  specify
    (button2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge button2, 0:0:0);
    $width (negedge button2, 0:0:0);
  endspecify

endmodule

module button_3_ ( output PADDI, input button3 );

  xo2iobuf0151 button_pad_3( .Z(PADDI), .PAD(button3));

  specify
    (button3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge button3, 0:0:0);
    $width (negedge button3, 0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );

  xo2iobuf0151 sck_c_pad( .Z(PADDI), .PAD(clk));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge clk, 0:0:0);
    $width (negedge clk, 0:0:0);
  endspecify

endmodule

module seven_segment_disp_dp_0_ ( input PADDO, output sevensegmentdispdp0 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_dp_pad_0( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispdp0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispdp0) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_dp_1_ ( input PADDO, output sevensegmentdispdp1 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_dp_pad_1( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispdp1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispdp1) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_right_0_ ( input PADDO, output 
    sevensegmentdispright0 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_right_pad_0( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispright0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispright0) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_right_1_ ( input PADDO, output 
    sevensegmentdispright1 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_right_pad_1( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispright1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispright1) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_right_2_ ( input PADDO, output 
    sevensegmentdispright2 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_right_pad_2( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispright2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispright2) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_right_3_ ( input PADDO, output 
    sevensegmentdispright3 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_right_pad_3( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispright3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispright3) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_right_4_ ( input PADDO, output 
    sevensegmentdispright4 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_right_pad_4( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispright4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispright4) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_right_5_ ( input PADDO, output 
    sevensegmentdispright5 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_right_pad_5( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispright5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispright5) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_right_6_ ( input PADDO, output 
    sevensegmentdispright6 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_right_pad_6( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispright6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispright6) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_left_0_ ( input PADDO, output sevensegmentdispleft0 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_left_pad_0( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispleft0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispleft0) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_left_1_ ( input PADDO, output sevensegmentdispleft1 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_left_pad_1( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispleft1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispleft1) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_left_2_ ( input PADDO, output sevensegmentdispleft2 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_left_pad_2( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispleft2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispleft2) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_left_3_ ( input PADDO, output sevensegmentdispleft3 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_left_pad_3( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispleft3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispleft3) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_left_4_ ( input PADDO, output sevensegmentdispleft4 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_left_pad_4( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispleft4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispleft4) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_left_5_ ( input PADDO, output sevensegmentdispleft5 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_left_pad_5( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispleft5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispleft5) = (0:0:0,0:0:0);
  endspecify

endmodule

module seven_segment_disp_left_6_ ( input PADDO, output sevensegmentdispleft6 );
  wire   GNDI;

  xo2iobuf seven_segment_disp_left_pad_6( .I(PADDO), .T(GNDI), 
    .PAD(sevensegmentdispleft6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sevensegmentdispleft6) = (0:0:0,0:0:0);
  endspecify

endmodule

module row_0_ ( input PADDO, output row0 );
  wire   GNDI;

  xo2iobuf row_pad_0( .I(PADDO), .T(GNDI), .PAD(row0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => row0) = (0:0:0,0:0:0);
  endspecify

endmodule

module row_1_ ( input PADDO, output row1 );
  wire   GNDI;

  xo2iobuf row_pad_1( .I(PADDO), .T(GNDI), .PAD(row1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => row1) = (0:0:0,0:0:0);
  endspecify

endmodule
